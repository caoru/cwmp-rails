<?xml version="1.0" encoding="UTF-8"?>
<!-- DO NOT EDIT; generated by Broadband Forum report.pl#420 (2017/06/12 version) on 2017/06/12 at 21:39:35.
     report.pl -exitcode=fatals -nowarnreport -quiet -report=xml -outfile=tr-098-1-8-0-full.xml tr-098-1-8-0.xml
     See https://github.com/BroadbandForum/cwmp-xml-tools/tree/master/Report_Tool. -->
<!--
  TR-069 InternetGatewayDevice:1.14 Root Object definition

  Copyright (c) 2009-2017, Broadband Forum
  
  Redistribution and use in source and binary forms, with or
  without modification, are permitted provided that the following
  conditions are met:
  
  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
  
  2. Redistributions in binary form must reproduce the above
     copyright notice, this list of conditions and the following
     disclaimer in the documentation and/or other materials
     provided with the distribution.
  
  3. Neither the name of the copyright holder nor the names of its
     contributors may be used to endorse or promote products
     derived from this software without specific prior written
     permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  
  The above license is used as a license under copyright only.
  Please reference the Forum IPR Policy for patent licensing terms
  <https://www.broadband-forum.org/ipr-policy>.
  
  Any moral rights which are necessary to exercise under the above
  license grant are also deemed granted under this license.
  
  Summary:
    TR-069 InternetGatewayDevice Root Object definition.

  Editor:
    * William Lupton, Cisco
    
  BroadbandHome Working Group Chairs:
    * Jason Walls, QA Cafe
    * John Blackford, Pace
    
  Issue History (Filename: Approval Date: Publication Date: Changes):
    * tr-098-1-2-0.xml: March 2009: 
      - corresponds to TR-098 Amendment 1 sections 2.4 (Data Model),
        2.4.1 (Inform and Notification Requirements) and 3 (Profile
        Definitions).
    * tr-098-1-2-0.xml: September 2009 (name unchanged)
      - fixed header information (had been cut-and-pasted from elsewhere)
      - changed WLANConfigurationNumberOfEntries to (wrong but consistent)
        LANWLANConfigurationNumberOfEntries
      - fixed 802.1Q-2004 reference to 802.1Q-2005
      - fixed cwmp-datamodel.xsd to be cwmp-datamodel-1-0.xsd    
    * tr098-1-3-0.xml: July 2011:
      - Alias extensions
    * tr098-1-4-0.xml: October 2011:
      - imports new optional components for Femto FAP from TR-262:
          * GPS
          * Tunnel
          * Performance Manamgemen
          * Application Platform    
      - import of new/updated optional components from TR-157a5
          * Software modules
          * Fault Management
          * Location
          * Security
    * tr-098-1-5-0.xml: May 2012:  
      - imports the new BulkDataCollection component from TR-157a6
    * tr-098-1-6-0.xml: November 2012: 
      - Add components from TR-157a7
      - Added software components to remove non-ascii characters
        * BulkDataCollectionDiffs
        * DI_VendorLogFilesDiffss
        * UI_RemoteAccessDiffs
        * PeriodicStatisticsDiff
    * tr-098-1-7-0.xml: November 2013: 
      - import components from TR-157a8 
        * MS_StandbyPolicy
        * XMPP
        * XMPPConnReq
      - add ManagementServer Parameters for HTTP Compression and 
        Lightweight Notifications
    * tr-098-1-8-0.xml: 8 September 2014: 17 September 2014
      - import components from TR-157a9
        * DI_HTIP
        * MS_InformParameters
        * UPnPDiffs
-->
<dm:document xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-4"
             xmlns:dmr="urn:broadband-forum-org:cwmp:datamodel-report-0-1"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="urn:broadband-forum-org:cwmp:datamodel-1-4 http://www.broadband-forum.org/cwmp/cwmp-datamodel-1-4.xsd urn:broadband-forum-org:cwmp:datamodel-report-0-1 http://www.broadband-forum.org/cwmp/cwmp-datamodel-report.xsd"
             spec="urn:broadband-forum-org:tr-098-1-8-0" file="tr-098-1-8-0-full.xml">
  <dataType name="IPAddress">
    <description>
      IP address, i.e. IPv4 address (or IPv4 subnet mask) or IPv6 address.
      All IPv4 addresses and subnet masks MUST be represented as strings in IPv4 dotted-decimal notation.  Here are some examples of valid IPv4 address textual representations:
      * 216.52.29.100
      * 192.168.1.254
      All IPv6 addresses MUST be represented using any of the 3 standard textual representations defined in {{bibref|RFC4291}} Sections 2.2.1, 2.2.2 and 2.2.3.  Both lower-case and upper-case letters can be used, but use of lower-case letters is RECOMMENDED.  Here are some examples of valid IPv6 address textual representations:
      * 1080:0:0:800:ba98:3210:11aa:12dd
      * 1080::800:ba98:3210:11aa:12dd
      * 0:0:0:0:0:0:13.1.68.3
      IPv6 addresses MUST NOT include zone identifiers. Zone identifiers are discussed in {{bibref|RFC4007|Section 6}}.
      Unspecified or inapplicable addresses (or IPv4 subnet masks) MUST be represented as empty strings unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="45"/>
    </string>
  </dataType>
  <dataType name="IPv4Address" base="IPAddress">
    <description>
      IPv4 address (or subnet mask).
      Can be any IPv4 address that is permitted by the ''IPAddress'' data type.
    </description>
    <size maxLength="15"/>
  </dataType>
  <dataType name="IPv6Address" base="IPAddress">
    <description>
      IPv6 address.
      Can be any IPv6 address that is permitted by the ''IPAddress'' data type.
    </description>
    <size maxLength="45"/>
  </dataType>
  <dataType name="IPPrefix">
    <description>
      IPv4 or IPv6 routing prefix in Classless Inter-Domain Routing (CIDR) notation {{bibref|RFC4632}}. This is specified as an IP address followed by an appended "/n" suffix, where ''n'' (the prefix size) is an integer in the range 0-32 (for IPv4) or 0-128 (for IPv6) that indicates the number of (leftmost) '1' bits of the routing prefix. 
      * IPv4 example: 192.168.1.0/24
      * IPv6 example: 2001:edff:fe6a:f76::/64
      If the IP address part is unspecified or inapplicable, it MUST be {{empty}} unless otherwise specified by the parameter definition.  In this case the IP prefix will be of the form "/n".
      If the entire IP prefix is unspecified or inapplicable, it MUST be {{empty}} unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="49"/>
    </string>
  </dataType>
  <dataType name="IPv4Prefix" base="IPPrefix">
    <description>
      IPv4 address prefix. 
      Can be any IPv4 prefix that is permitted by the ''IPPrefix'' data type.
    </description>
    <size maxLength="18"/>
  </dataType>
  <dataType name="IPv6Prefix" base="IPPrefix">
    <description>
      IPv6 address prefix.
      Can be any IPv6 prefix that is permitted by the ''IPPrefix'' data type.
    </description>
    <size maxLength="49"/>
  </dataType>
  <dataType name="MACAddress">
    <description>
      All MAC addresses are represented as strings of 12 hexadecimal digits (digits 0-9, letters A-F or a-f) displayed as six pairs of digits separated by colons.  Unspecified or inapplicable MAC addresses MUST be represented as empty strings unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="17"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f][0-9A-Fa-f]:){5}([0-9A-Fa-f][0-9A-Fa-f])"/>
    </string>
  </dataType>
  <dataType name="StatsCounter32">
    <description>
      A 32-bit statistics parameter, e.g. a byte counter.
      This data type SHOULD NOT be used for statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt'' (i.e. 0xffffffff, referred to below as ''maxval''). ''StatsCounter64'' SHOULD be used for such parameters.
      The value ''maxval'' indicates that no data is available for this parameter.  In the unlikely event that the actual value of the statistic is ''maxval'', the CPE SHOULD return ''maxval - 1''.
      The actual value of the statistic might be greater than ''maxval''. Such values SHOULD wrap around through zero.
      The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.
    </description>
    <unsignedInt>
    </unsignedInt>
  </dataType>
  <dataType name="StatsCounter64">
    <description>
      A 64-bit statistics parameter, e.g. a byte counter.
      This data type SHOULD be used for all statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt''.
      The maximum value that can be represented as an ''unsignedLong'' (i.e. 0xffffffffffffffff) indicates that no data is available for this parameter.
      The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.
    </description>
    <unsignedLong>
    </unsignedLong>
  </dataType>
  <dataType name="Alias">
    <description>
      A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.
      If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}, the following mandatory constraints MUST be enforced:
      *Its value MUST NOT be empty.
      *Its value MUST start with a letter.
      *If its value is not assigned by the ACS, it MUST start with a "cpe-" prefix.
      *The CPE MUST NOT change the parameter value.
    </description>
    <string>
      <size maxLength="64"/>
    </string>
  </dataType>
  <dataType name="Dbm1000">
    <description>
      The value is measured in ''dBm/1000'', i.e. the value divided by 1000 is dB relative to 1 mW.  For example, -12345 means -12.345 dBm, 0 means 0 dBm (1 mW) and 12345 means 12.345 dBm.
    </description>
    <int>
    </int>
  </dataType>
  <dataType name="UUID">
    <description>
      Universally Unique Identifier.  See {{bibref|RFC4122}}.
    </description>
    <string>
      <size minLength="36" maxLength="36"/>
      <pattern value="[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"/>
    </string>
  </dataType>
  <dataType name="IEEE_EUI64">
    <description>
      The IEEE EUI 64-bit identifier as defined in {{bibref|EUI64}}. The IEEE defined 64-bit extended unique identifier (EUI-64) is a concatenation of:
      * The 24-bit (OUI-24) or 36-bit (OUI-36) company_id value assigned by the IEEE Registration Authority (IEEE-RA), and
      * The extension identifier (40 bits for OUI-24 or 28 bits for OUI-36) assigned by the organization with that company_id assignment.
    </description>
    <string>
      <size maxLength="23"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f][0-9A-Fa-f]:){7}([0-9A-Fa-f][0-9A-Fa-f])"/>
    </string>
  </dataType>
  <dataType name="ZigBeeNetworkAddress">
    <description>
      The ZigBee 16-bit network address (NWK) as defined in {{bibref|ZigBee2007}}. The address is assigned to a device by the network layer and used by the network layer for routing messages between devices.
    </description>
    <string>
      <size maxLength="4"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f]){4}"/>
    </string>
  </dataType>
  <bibliography>
    <reference id="3GPP-TS.23.107">
      <name>3GPP TS 23.107</name>
      <title>Quality of Service (QoS) concept and architecture</title>
      <organization>3GPP SA WG2</organization>
      <hyperlink>http://www.3gpp.org/ftp/Specs/html-info/23107.htm</hyperlink>
    </reference>
    <reference id="3GPP-TS.25.171">
      <name>3GPP TS 25.171</name>
      <title>Requirements for support of Assisted Global Positioning System (A-GPS)</title>
      <organization>3GPP RAN WG4</organization>
      <hyperlink>http://www.3gpp.org/ftp/Specs/html-info/25171.htm</hyperlink>
    </reference>
    <reference id="3GPP-TS.32.582">
      <name>3GPP TS 32.582</name>
      <title>Telecommunications management; Home Node B (HNB) Operations, Administration, Maintenance and Provisioning (OAM&amp;P); Information model for Type 1 interface HNB to HNB Management System (HMS)</title>
      <organization>3GPP SA WG5</organization>
      <hyperlink>http://www.3gpp.org/ftp/Specs/html-info/32582.htm</hyperlink>
    </reference>
    <reference id="3GPP-TS.32.584">
      <name>3GPP TS 32.584</name>
      <title>Telecommunications management; Home Node B (HNB) Operations, Administration, Maintenance and Provisioning (OAM&amp;P); XML definitions for Type 1 interface HNB to HNB Management Systems (HMS)</title>
      <organization>3GPP SA WG5</organization>
      <hyperlink>http://www.3gpp.org/ftp/Specs/html-info/32584.htm</hyperlink>
    </reference>
    <reference id="3GPP-TS.32.592">
      <name>3GPP TS 32.592</name>
      <title>Telecommunications management; Home enhanced Node B (HeNB) Operations, Administration, Maintenance and Provisioning (OAM&amp;P); Information model for Type 1 interface HeNB to HeNB Management System (HeMS)</title>
      <organization>3GPP SA WG5</organization>
      <hyperlink>http://www.3gpp.org/ftp/Specs/html-info/32592.htm</hyperlink>
    </reference>
    <reference id="3GPP2-S.S0132">
      <name>S.S0132-0 v1.0</name>
      <title>Femtocell Security Framework</title>
      <organization>3GPP2</organization>
      <date>January 2010</date>
      <hyperlink>http://www.3gpp2.org/Public_html/specs/S.S0132-0_v1.0_Femtocell_Security_Framework.pdf</hyperlink>
    </reference>
    <reference id="3GPP2-X.S0011">
      <name>X.S0011-005-C</name>
      <title>cdma2000 Wireless IP Network Standard: Accounting Services and 3GPP2 RADIUS VSAs</title>
      <organization>3GPP2</organization>
      <date>August 2003</date>
      <hyperlink>http://www.3gpp2.org/Public_html/specs/X.S0011-005-C_v1.0_110703.pdf</hyperlink>
    </reference>
    <reference id="802.1D-2004">
      <name>IEEE Std 802.1D-2004</name>
      <title>Media Access Control (MAC) Bridges</title>
      <organization>IEEE</organization>
      <date>2004</date>
      <hyperlink>http://standards.ieee.org/getieee802/download/802.1D-2004.pdf</hyperlink>
    </reference>
    <reference id="802.1Q-2005">
      <name>IEEE Std 802.1Q-2005</name>
      <title>Virtual Bridged Local Area Networks</title>
      <organization>IEEE</organization>
      <date>2006</date>
      <hyperlink>http://standards.ieee.org/getieee802/download/802.1Q-2005.pdf</hyperlink>
    </reference>
    <reference id="BLUE">
      <name>Blue</name>
      <title>A New Class of Active Queue Management Algorithms</title>
      <hyperlink>http://www.thefengs.com/wuchang/work/blue</hyperlink>
    </reference>
    <reference id="DLNA-NDIG">
      <name>DLNA Networked Device Interoperability Guidelines</name>
      <title>DLNA Networked Device Interoperability Guidelines, Volume 2: Media Format Profiles.</title>
      <organization>DLNA</organization>
      <date>October 2006</date>
      <hyperlink>http://www.dlna.org/industry/certification/guidelines/</hyperlink>
    </reference>
    <reference id="DNS-SD">
      <name>RFC 6763</name>
      <title>DNS-Based Service Discovery</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2013</date>
      <hyperlink>http://tools.ietf.org/html/rfc6763</hyperlink>
    </reference>
    <reference id="DVB-TS.102.824">
      <name>TS 102 824</name>
      <title>Digital Video Broadcasting (DVB);Remote Management and Firmware Update System for DVB IP Services</title>
      <organization>ETSI</organization>
      <date>July 2008</date>
      <hyperlink>http://webapp.etsi.org/workprogram/Report_WorkItem.asp?WKI_ID=27769</hyperlink>
    </reference>
    <reference id="ETSIM2MFA">
      <name>ETSI TS 102 690 v1.1.6</name>
      <title>Machine-to-Machine Communications (M2M Functional Architecture)</title>
      <organization>ETSI</organization>
      <date>June 2012</date>
      <hyperlink>http://docbox.etsi.org/M2M/Open/Latest_Drafts/00002ed121v116.pdf</hyperlink>
    </reference>
    <reference id="G.9973">
      <name>G.9973</name>
      <title>Protocol for identifying home network topology</title>
      <organization>ITU-T</organization>
      <date>2011</date>
      <hyperlink>http://www.itu.int/rec/T-REC-G.9973-201110-I/en</hyperlink>
    </reference>
    <reference id="HTML4.01">
      <name>HTML 4.01 Specification</name>
      <organization>W3C</organization>
      <hyperlink>http://www.w3.org/TR/html4</hyperlink>
    </reference>
    <reference id="ICSA-Baseline">
      <name>ICSA Baseline Modular Firewall Certification Criteria</name>
      <title>Baseline module - version 4.1</title>
      <organization>ICSA Labs</organization>
      <date>2008</date>
      <hyperlink>http://www.icsalabs.com/sites/default/files/baseline.pdf</hyperlink>
    </reference>
    <reference id="ICSA-Firewall">
      <name>ICSA Modular Firewall Certification Criteria</name>
      <title>Required Services Security Policy - Small/Medium Business (SMB) Category module - version 4.0</title>
      <organization>ICSA Labs</organization>
      <hyperlink>http://www.icsalabs.com/sites/default/files/SMB4.0.pdf</hyperlink>
    </reference>
    <reference id="ICSA-Residential">
      <name>ICSA Residential Modular Firewall Certification Criteria</name>
      <title>Required Services Security Policy - Residential Category module - version 4.1</title>
      <organization>ICSA Labs</organization>
      <date>2008</date>
      <hyperlink>http://www.icsalabs.com/sites/default/files/residential.pdf</hyperlink>
    </reference>
    <reference id="IPDR-FTP">
      <name>IPDR File Transfer Protocol</name>
      <title>IPDR/File Transfer Protocol</title>
      <organization>TM Forum</organization>
      <hyperlink>http://www.ipdr.org/public/</hyperlink>
    </reference>
    <reference id="IPDR-SP">
      <name>IPDR Streaming Protocol</name>
      <title>IPDR Streaming Protocol (IPDR/SP) Specification</title>
      <organization>TM Forum</organization>
      <hyperlink>http://www.ipdr.org/public/</hyperlink>
    </reference>
    <reference id="IPDR-XDR">
      <name>IPDR XDR Encoding Format</name>
      <title>IPDR/XDR Encoding Format</title>
      <organization>TM Forum</organization>
      <hyperlink>http://www.ipdr.org/public/</hyperlink>
    </reference>
    <reference id="IPDR-XML">
      <name>IPDR XML File Encoding Format</name>
      <title>IPDR/XML File Encoding Format</title>
      <organization>TM Forum</organization>
      <hyperlink>http://www.ipdr.org/public/</hyperlink>
    </reference>
    <reference id="ISO-13818-6:1998">
      <name>ISO/IEC 13818-6:1998</name>
      <title>Information Technology - Generic coding of moving pictures and associated audio information - Part 6: Extensions for DSM-CC</title>
      <organization>ISO</organization>
      <date>1998</date>
      <hyperlink>http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=25039</hyperlink>
    </reference>
    <reference id="ITU-X.733">
      <name>ITU X.733</name>
      <title>Information technology - Open Systems Interconnection - Systems Management: Alarm reporting function</title>
      <organization>International Telecommunication Union</organization>
      <date>February 1992</date>
      <hyperlink>http://www.itu.int/rec/T-REC-X.733/en</hyperlink>
    </reference>
    <reference id="JJ-300.00">
      <name>JJ-300.00</name>
      <title>Home-network Topology Identifying Protocol</title>
      <organization>TTC</organization>
      <date>2011</date>
      <hyperlink>http://www.ttc.or.jp/jp/document_list/pdf/e/STD/JJ-300.00(E)v1.1.pdf</hyperlink>
    </reference>
    <reference id="JJ-300.01">
      <name>JJ-300.01</name>
      <title>The List of Device Categories</title>
      <organization>TTC</organization>
      <date>2011</date>
      <hyperlink>http://www.ttc.or.jp/jp/document_list/pdf/e/STD/JJ-300.01(E)v1.1.pdf</hyperlink>
    </reference>
    <reference id="OUI">
      <name>Organizationally Unique Identifiers (OUIs)</name>
      <hyperlink>http://standards.ieee.org/faqs/OUI.html</hyperlink>
    </reference>
    <reference id="RED">
      <name>References on RED (Random Early Detection) Queue Management</name>
      <hyperlink>http://www.icir.org/floyd/red.html</hyperlink>
    </reference>
    <reference id="RFC793">
      <name>RFC 793</name>
      <title>Transmission Control Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>September 1981</date>
      <hyperlink>http://tools.ietf.org/html/rfc793</hyperlink>
    </reference>
    <reference id="RFC862">
      <name>RFC 862</name>
      <title>Echo Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1983</date>
      <hyperlink>http://tools.ietf.org/html/rfc862</hyperlink>
    </reference>
    <reference id="RFC959">
      <name>RFC 959</name>
      <title>File Transfer Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1985</date>
      <hyperlink>http://tools.ietf.org/html/rfc959</hyperlink>
    </reference>
    <reference id="RFC1035">
      <name>RFC 1035</name>
      <title>Domain Names - Implementation and Specification</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1987</date>
      <hyperlink>http://tools.ietf.org/html/rfc1035</hyperlink>
    </reference>
    <reference id="RFC1323">
      <name>RFC 1323</name>
      <title>TCP Extensions for High Performance</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>May 1992</date>
      <hyperlink>http://tools.ietf.org/html/rfc1323</hyperlink>
    </reference>
    <reference id="RFC2131">
      <name>RFC 2131</name>
      <title>Dynamic Host Configuration Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2131</hyperlink>
    </reference>
    <reference id="RFC2132">
      <name>RFC 2132</name>
      <title>DHCP Options and BOOTP Vendor Extensions</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2132</hyperlink>
    </reference>
    <reference id="RFC2225">
      <name>RFC 2225</name>
      <title>Classical IP and ARP over ATM</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2225</hyperlink>
    </reference>
    <reference id="RFC2474">
      <name>RFC 2474</name>
      <title>Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2474</hyperlink>
    </reference>
    <reference id="RFC2516">
      <name>RFC 2516</name>
      <title>A Method for Transmitting PPP Over Ethernet (PPPoE)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2516</hyperlink>
    </reference>
    <reference id="RFC2581">
      <name>RFC 2581</name>
      <title>TCP Congestion Control</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>April 1999</date>
      <hyperlink>http://tools.ietf.org/html/rfc2581</hyperlink>
    </reference>
    <reference id="RFC2582">
      <name>RFC 2582</name>
      <title>The NewReno Modification to TCP's Fast Recovery Algorithm</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>April 1999</date>
      <hyperlink>http://tools.ietf.org/html/rfc2582</hyperlink>
    </reference>
    <reference id="RFC2616">
      <name>RFC 2616</name>
      <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1999</date>
      <hyperlink>http://tools.ietf.org/html/rfc2616</hyperlink>
    </reference>
    <reference id="RFC2634">
      <name>RFC 2634</name>
      <title>Enhanced Security Services for S/MIME</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2634</hyperlink>
    </reference>
    <reference id="RFC2662">
      <name>RFC 2662</name>
      <title>Definitions of Managed Objects for the ADSL Lines</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2662</hyperlink>
    </reference>
    <reference id="RFC2684">
      <name>RFC 2684</name>
      <title>Multiprotocol Encapsulation over ATM Adaptation Layer 5</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2684</hyperlink>
    </reference>
    <reference id="RFC2697">
      <name>RFC 2697</name>
      <title>A Single Rate Three Color Marker</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2697</hyperlink>
    </reference>
    <reference id="RFC2698">
      <name>RFC 2698</name>
      <title>A Two Rate Three Color Marker</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2698</hyperlink>
    </reference>
    <reference id="RFC2782">
      <name>RFC 2782</name>
      <title>A DNS RR for specifying the location of services (DNS SRV)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2000</date>
      <hyperlink>http://tools.ietf.org/html/rfc2782</hyperlink>
    </reference>
    <reference id="RFC2818">
      <name>RFC 2818</name>
      <title>HTTP Over TLS</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>May 2000</date>
      <hyperlink>http://tools.ietf.org/html/rfc2818</hyperlink>
    </reference>
    <reference id="RFC2863">
      <name>RFC 2863</name>
      <title>The Interfaces Group MIB</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2000</date>
      <hyperlink>http://tools.ietf.org/html/rfc2863</hyperlink>
    </reference>
    <reference id="RFC2898">
      <name>RFC 2898</name>
      <title>PKCS #5: Password-Based Cryptography Specification Version 2.0</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc2898</hyperlink>
    </reference>
    <reference id="RFC2974">
      <name>RFC 2974</name>
      <title>Session Announcement Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>October 2000</date>
      <hyperlink>http://tools.ietf.org/html/rfc2974</hyperlink>
    </reference>
    <reference id="RFC3004">
      <name>RFC 3004</name>
      <title>The User Class Option for DHCP</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc3004</hyperlink>
    </reference>
    <reference id="RFC3066">
      <name>RFC 3066</name>
      <title>Tags for the Identification of Languages</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc3066</hyperlink>
    </reference>
    <reference id="RFC3489">
      <name>RFC 3489</name>
      <title>STUN - Simple Traversal of User Datagram Protocol (UDP) Through Network Address Translators (NATs)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc3489</hyperlink>
    </reference>
    <reference id="RFC3925">
      <name>RFC 3925</name>
      <title>Vendor-Identifying Vendor Options for Dynamic Host Configuration Protocol version 4 (DHCPv4)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc3925</hyperlink>
    </reference>
    <reference id="RFC3926">
      <name>RFC 3926</name>
      <title>FLUTE - File Delivery over Unidirectional Transport</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>October 2004</date>
      <hyperlink>http://tools.ietf.org/html/rfc3926</hyperlink>
    </reference>
    <reference id="RFC3986">
      <name>RFC 3986</name>
      <title>Uniform Resource Identifier (URI): Generic Syntax</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>http://tools.ietf.org/html/rfc3986</hyperlink>
    </reference>
    <reference id="RFC4122">
      <name>RFC 4122</name>
      <title>A Universally Unique IDentifier (UUID) URN Namespace</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2005</date>
      <hyperlink>http://tools.ietf.org/html/rfc4122</hyperlink>
    </reference>
    <reference id="RFC4291">
      <name>RFC 4291</name>
      <title>IP Version 6 Addressing Architecture</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2006</date>
      <hyperlink>http://tools.ietf.org/html/rfc4291</hyperlink>
    </reference>
    <reference id="RFC4301">
      <name>RFC 4301</name>
      <title>Security Architecture for the Internet Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>December 2005</date>
      <hyperlink>http://tools.ietf.org/html/rfc4301</hyperlink>
    </reference>
    <reference id="RFC4307">
      <name>RFC 4307</name>
      <title>Cryptographic Algorithms for Use in the Internet Key Exchange Version 2 (IKEv2)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>December 2005</date>
      <hyperlink>http://tools.ietf.org/html/rfc4307</hyperlink>
    </reference>
    <reference id="RFC4632">
      <name>RFC 4632</name>
      <title>Classless Inter-domain Routing (CIDR): The Internet Address Assignment and Aggregation Plan</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2006</date>
      <hyperlink>http://tools.ietf.org/html/rfc4632</hyperlink>
    </reference>
    <reference id="RFC4835">
      <name>RFC 4835</name>
      <title>Cryptographic Algorithm Implementation Requirements for Encapsulating Security Payload (ESP) and Authentication Header (AH)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2007</date>
      <hyperlink>http://tools.ietf.org/html/rfc4835</hyperlink>
    </reference>
    <reference id="RFC5139">
      <name>RFC 5139</name>
      <title>Revised Civic Location Format For Presence Information Data Format Location Object (PIDF-LO)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>February 2008</date>
      <hyperlink>http://tools.ietf.org/html/rfc5139</hyperlink>
    </reference>
    <reference id="RFC5280">
      <name>RFC 5280</name>
      <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>May 2008</date>
      <hyperlink>http://tools.ietf.org/html/rfc5280</hyperlink>
    </reference>
    <reference id="RFC5491">
      <name>RFC 5491</name>
      <title>GEOPRIV Presence Information Data Format Location Object (PIDF-LO) Usage Clarification, Considerations, and Recommendations</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>March 2009</date>
      <hyperlink>http://tools.ietf.org/html/rfc5491</hyperlink>
    </reference>
    <reference id="RFC6120">
      <name>RFC 6120</name>
      <title>Extensible Messaging and Presence Protocol (XMPP) : Core</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2011</date>
      <hyperlink>http://tools.ietf.org/html/rfc6120</hyperlink>
    </reference>
    <reference id="SOAP1.1">
      <name>Simple Object Access Protocol (SOAP) 1.1</name>
      <organization>W3C</organization>
      <hyperlink>http://www.w3.org/TR/2000/NOTE-SOAP-20000508</hyperlink>
    </reference>
    <reference id="TR-069">
      <name>TR-069</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2004</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-069.pdf</hyperlink>
    </reference>
    <reference id="TR-069a1">
      <name>TR-069 Amendment 1</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2006</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-069_Amendment-1.pdf</hyperlink>
    </reference>
    <reference id="TR-069a2">
      <name>TR-069 Amendment 2</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2007</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-069_Amendment-2.pdf</hyperlink>
    </reference>
    <reference id="TR-069a3">
      <name>TR-069 Amendment 3</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2010</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-069_Amendment-3.pdf</hyperlink>
    </reference>
    <reference id="TR-069a4">
      <name>TR-069 Amendment 4</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2011</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-069_Amendment-4.pdf</hyperlink>
    </reference>
    <reference id="TR-069a5">
      <name>TR-069 Amendment 5</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2013</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-069_Amendment-5.pdf</hyperlink>
    </reference>
    <reference id="TR-098">
      <name>TR-098</name>
      <title>Internet Gateway Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2005</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-098.pdf</hyperlink>
    </reference>
    <reference id="TR-098a1">
      <name>TR-098 Amendment 1</name>
      <title>Internet Gateway Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2006</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-098_Amendment-1.pdf</hyperlink>
    </reference>
    <reference id="TR-098a2">
      <name>TR-098 Amendment 2</name>
      <title>Internet Gateway Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2008</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-098_Amendment-2.pdf</hyperlink>
    </reference>
    <reference id="TR-106">
      <name>TR-106</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2005</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-106.pdf</hyperlink>
    </reference>
    <reference id="TR-106a1">
      <name>TR-106 Amendment 1</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2006</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-106_Amendment-1.pdf</hyperlink>
    </reference>
    <reference id="TR-106a2">
      <name>TR-106 Amendment 2</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2008</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-106_Amendment-2.pdf</hyperlink>
    </reference>
    <reference id="TR-106a3">
      <name>TR-106 Amendment 3</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2009</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-106_Amendment-3.pdf</hyperlink>
    </reference>
    <reference id="TR-106a4">
      <name>TR-106 Amendment 4</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2010</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-106_Amendment-4.pdf</hyperlink>
    </reference>
    <reference id="TR-106a6">
      <name>TR-106 Amendment 6</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2011</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-106_Amendment-6.pdf</hyperlink>
    </reference>
    <reference id="TR-106a7">
      <name>TR-106 Amendment 7</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2013</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-106_Amendment-7.pdf</hyperlink>
    </reference>
    <reference id="TR-143">
      <name>TR-143</name>
      <title>Enabling Network Throughput Performance Tests and Statistical Monitoring</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2008</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-143.pdf</hyperlink>
    </reference>
    <reference id="TR-157">
      <name>TR-157</name>
      <title>Component Object for CWMP</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>March 2009</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-157.pdf</hyperlink>
    </reference>
    <reference id="TR-157a3">
      <name>TR-157 Amendment 3</name>
      <title>Componnent Objects for CWMP</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2010</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-157_Amendment-3.pdf</hyperlink>
    </reference>
    <reference id="TR-157a5">
      <name>TR-157 Amendment 5</name>
      <title>Componnent Objects for CWMP</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2011</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-157_Amendment-5.pdf</hyperlink>
    </reference>
    <reference id="TR-181i1">
      <name>TR-181 Issue 1</name>
      <title>Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2010</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-181_Issue-1.pdf</hyperlink>
    </reference>
    <reference id="TR-181i2">
      <name>TR-181 Issue 2</name>
      <title>Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2010</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-181_Issue-2.pdf</hyperlink>
    </reference>
    <reference id="TR-196i2">
      <name>TR-196 Issue 2</name>
      <title>Femto Access Point Service Data Model</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2011</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-196_Issue-2.pdf</hyperlink>
    </reference>
    <reference id="TR-232">
      <name>TR-232</name>
      <title>Bulk Data Collection</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>May 2012</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-232.pdf</hyperlink>
    </reference>
    <reference id="TR-262">
      <name>TR-262</name>
      <title>Femto Component Objects</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2011</date>
      <hyperlink>http://www.broadband-forum.org/technical/download/TR-262.pdf</hyperlink>
    </reference>
    <reference id="UPnP-DAv1">
      <name>UPnP Device Architecture</name>
      <title>UPnP Device Architecture 1.0</title>
      <organization>UPnP Forum</organization>
      <date>April 2008</date>
      <hyperlink>http://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.0-20080424.pdf</hyperlink>
    </reference>
    <reference id="UPnP-DAv11">
      <name>UPnP Device Architecture 1.1</name>
      <title>UPnP Device Architecture 1.1</title>
      <organization>UPnP Forum</organization>
      <date>October, 2008</date>
      <hyperlink>http://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.1.pdf</hyperlink>
    </reference>
    <reference id="UPnP-DM:1">
      <name>UPnP Device Management:1</name>
      <title>UPnP Device Management v1</title>
      <hyperlink>http://upnp.org/specs/dm/dm1/</hyperlink>
    </reference>
    <reference id="USB1.0">
      <name>USB 1.0</name>
      <title>USB 1.0 Specification</title>
      <organization>USB-IF</organization>
      <date>January 1996</date>
      <hyperlink>http://www.usb.org/developers/docs/</hyperlink>
    </reference>
    <reference id="USB2.0">
      <name>USB 2.0</name>
      <title>USB 2.0 Specification</title>
      <organization>USB-IF</organization>
      <date>April 2000</date>
      <hyperlink>http://www.usb.org/developers/docs/usb_20_122208.zip</hyperlink>
    </reference>
    <reference id="USB3.0">
      <name>USB 3.0</name>
      <title>USB 3.0 Specification</title>
      <organization>USB-IF</organization>
      <date>November 2008</date>
      <hyperlink>http://www.usb.org/developers/docs/usb_30_spec.zip</hyperlink>
    </reference>
    <reference id="WPSv1.0">
      <name>Wi-Fi Protected Setup Specification Version 1.0h</name>
      <title>Wi-Fi Alliance</title>
      <date>2006</date>
      <hyperlink>http://www.wi-fi.org</hyperlink>
    </reference>
    <reference id="Z-Wave">
      <name>Z-Wave</name>
      <title>Z-Wave website</title>
      <hyperlink>http://www.z-wave.com</hyperlink>
    </reference>
    <reference id="ZigBee">
      <name>ZigBee</name>
      <title>ZigBee Alliance website</title>
      <hyperlink>http://www.zigbee.org</hyperlink>
    </reference>
    <reference id="ZigBee2007">
      <name>ZigBee 2007 Specification</name>
      <title>ZigBee 2007 Specification</title>
      <organization>ZigBee Alliance</organization>
      <date>October 2007</date>
      <hyperlink>http://www.zigbee.org/Specifications/ZigBee/download.aspx</hyperlink>
    </reference>
  </bibliography>
  <model name="InternetGatewayDevice:1.14">
    <object name="InternetGatewayDevice." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        The top-level object for an Internet Gateway Device.
      </description>
      <parameter name="DeviceSummary" access="readOnly" status="deprecated" forcedInform="true" dmr:version="1.1">
        <description>
          As defined in {{bibref|TR-106a1}}.
          This parameter is DEPRECATED because {{object|DeviceInfo.SupportedDataModel}} and associated Device Type XML documents (DT Instances) provide a more granular and scalable way of describing the device's data model.
          Therefore its value MAY be {{empty}} if (and only if) {{object|DeviceInfo.SupportedDataModel}} is supported.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LANDeviceNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|LANDevice}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="WANDeviceNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|WANDevice}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UserNumberOfEntries" access="readOnly" dmr:version="1.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Capabilities." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.3">
      <description>
        The capabilities of the device.  This is a constant read-only object, meaning that only a firmware upgrade will cause these values to be altered.
      </description>
    </object>
    <object name="InternetGatewayDevice.Capabilities.PerformanceDiagnostic." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.3">
      <description>
        The capabilities of the Performance Diagnostics (''DownloadDiagnostics'' and ''UploadDiagnostics'') for the device.
      </description>
      <parameter name="DownloadTransports" access="readOnly" dmr:version="1.3">
        <description>
          Supported ''DownloadDiagnostics'' transport protocols for a CPE device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HTTP"/>
            <enumeration value="FTP" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UploadTransports" access="readOnly" dmr:version="1.3">
        <description>
          Supported ''UploadDiagnostics'' transport protocols for a CPE device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HTTP"/>
            <enumeration value="FTP" optional="true"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DeviceInfo." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains general device information.
      </description>
      <parameter name="Manufacturer" access="readOnly" dmr:version="1.0">
        <description>
          The manufacturer of the CPE (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufacturerOUI" access="readOnly" dmr:version="1.0">
        <description>
          Organizationally unique identifier of the device manufacturer.  Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros.  {{pattern}}
          The value MUST be a valid OUI as defined in {{bibref|OUI}}.
          This value MUST remain fixed over the lifetime of the device, including across firmware updates. Any change would indicate that it's a new device and would therefore require a BOOTSTRAP Inform.
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelName" access="readOnly" dmr:version="1.0">
        <description>
          Model name of the CPE (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" dmr:version="1.0">
        <description>
          A full description of the CPE device (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" dmr:version="1.0">
        <description>
          Identifier of the class of product for which the serial number applies.  That is, for a given manufacturer, this  parameter is used to identify the product or class of product over which the {{param|SerialNumber}} parameter is unique.
          This value MUST remain fixed over the lifetime of the device, including across firmware updates. Any change would indicate that it's  a new device and would therefore require a BOOTSTRAP Inform.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="1.0">
        <description>
          Identifier of the particular device that is unique for the indicated class of product and manufacturer.
          This value MUST remain fixed over the lifetime of the device, including across firmware updates. Any change would indicate that it's  a new device and would therefore require a BOOTSTRAP Inform.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HardwareVersion" access="readOnly" forcedInform="true" dmr:version="1.0">
        <description>
          A string identifying the particular CPE model and version.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SoftwareVersion" access="readOnly" activeNotify="forceEnabled" forcedInform="true" dmr:version="1.0">
        <description>
          A string identifying the software version currently installed in the CPE.
          To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents a more minor category of variation.  For example, ''3.0.21'' where the components mean: ''Major.Minor.Build''.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModemFirmwareVersion" access="readOnly" dmr:version="1.0">
        <description>
          A string identifying the version of the modem firmware currently installed in the CPE.  This is applicable only when the modem firmware is separable from the overall CPE software.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EnabledOptions" access="readOnly" status="deprecated" dmr:version="1.0">
        <description>
          This parameter is DEPRECATED because the "voucher mechanism", as defined in {{bibref|TR-069a3|Annex C}} is deprecated in favor of the "Software Module Management mechanism" as described in {{bibref|TR-157a3|Appendix II}}.
          {{list}}  The OptionName of each Option that is currently enabled in the CPE.  The OptionName of each is identical to the OptionName element of the OptionStruct described in {{bibref|TR-069a3}}.  Only those options are listed whose State indicates the option is enabled.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SpecVersion" access="readOnly" status="deprecated" forcedInform="true" dmr:version="1.0">
        <description>
          Represents the version of the specification implemented by the device.  Currently 1.0 is the only available version.  The value of this parameter MUST equal "1.0".
          This parameter is DEPRECATED because its value is fixed and it therefore serves no purpose.  However, it is a Forced Inform parameter and therefore cannot be OBSOLETED.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
          <default type="object" value="1.0" status="deleted"/>
        </syntax>
      </parameter>
      <parameter name="ProvisioningCode" access="readWrite" activeNotify="forceEnabled" forcedInform="true" dmr:version="1.0">
        <description>
          Identifier of the primary service provider and other provisioning information, which MAY be used by the ACS to determine service provider-specific customization and provisioning parameters.
          If not {{empty}}, this argument SHOULD be in the form of a hierarchical descriptor with one or more nodes specified.  Each node in the hierarchy is represented as a 4-character sub-string, containing only numerals or upper-case letters.  If there is more than one node indicated, each node is separated by a "." (dot).  Examples: "TLCO" or "TLCO.GRP2".
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpTime" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Time in seconds since the CPE was last restarted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FirstUseDate" access="readOnly" dmr:version="1.0">
        <description>
          Date and time in UTC that the CPE first both successfully established an IP-layer network connection and acquired an absolute time reference using NTP or equivalent over that network connection.  The CPE MAY reset this date after a factory reset.
          If NTP or equivalent is not available, this parameter, if present, SHOULD be set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="DeviceLog" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Vendor-specific log(s).
        </description>
        <syntax>
          <string>
            <size maxLength="32768"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorConfigFileNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|VendorConfigFile}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DeviceInfo.VendorConfigFile.{i}." access="readOnly" numEntriesParameter="VendorConfigFileNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        Every instance of this object is a Vendor Configuration File, and contains parameters associated with the Vendor Configuration File.
        This table of Vendor Configuration Files is for information only and does not allow the ACS to operate on these files in any way.
        Whenever the CPE successfully downloads a configuration file as a result of the Download RPC with the FileType argument of ''3 Vendor Configuration File'', the CPE MUST update this table.  If the name of the file (determined as described in the definition of the {{param|Name}} parameter) differs from that of any existing instance, then the CPE MUST create a new instance to represent this file.  If instead, the name of the file is identical to that of an existing instance, then the CPE MUST update the content of the existing instance with the new version, date, and (optionally) description of the file.{{nokeys}}
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Name" access="readOnly" dmr:version="1.0">
        <description>
          Name of the vendor configuration file.
          If the CPE is able to obtain the name of the configuration file from the file itself, then the value of this parameter MUST be set to that name.
          Otherwise, if the CPE can extract the file name from the URL used to download the configuration file, then the value of this parameter MUST be set to that name.
          Otherwise, the value of this parameter MUST be set to the value of the TargetFileName argument of the Download RPC used to download this configuration file.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="1.0">
        <description>
          A string identifying the configuration file version currently used in the CPE.
          If the CPE is able to obtain the version of the configuration file from the file itself, then the value of this parameter MUST be set to the obtained value.
          Otherwise, the value of this parameter MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Date" access="readOnly" dmr:version="1.0">
        <description>
          Date and time when the content of the current version of this vendor configuration file was first applied by the CPE.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" dmr:version="1.0">
        <description>
          A description of the vendor configuration file (human-readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DeviceInfo.MemoryStatus." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.5">
      <description>
        Status of the device's volatile physical memory.
      </description>
      <parameter name="Total" access="readOnly" dmr:version="1.5">
        <description>
          The total physical RAM, in {{units}}, installed on the device.
        </description>
        <syntax>
          <unsignedInt>
            <units value="kilobytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Free" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          The free physical RAM, in {{units}}, currently available on the device.
        </description>
        <syntax>
          <unsignedInt>
            <units value="kilobytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DeviceInfo.ProcessStatus." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.5">
      <description>
        Status of the processes on the device.
      </description>
      <parameter name="CPUUsage" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          The total amount of the CPU, in {{units}}, rounded up to the nearest whole {{units}}.  In the case that multiple CPU are present, this value represents the average of all CPU.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="100"/>
            <units value="percent"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DeviceConfig." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains general configuration parameters.
      </description>
      <parameter name="PersistentData" access="readWrite" dmr:version="1.0">
        <description>
          Arbitrary user data that MUST persist across CPE reboots.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConfigFile" access="readWrite" dmr:version="1.0">
        <description>
          A dump of the currently running configuration on the CPE.  This parameter enables the ability to backup and restore the last known good state of the CPE.  It returns a vendor-specific document that defines the state of the CPE.  The document MUST be capable of restoring the CPE's state when written back to the CPE using SetParameterValues.
          An alternative to this parameter, e.g. when the configuration file is larger than the parameter size limit, is to use the Upload and Download RPCs with a FileType of ''1 Vendor Configuration File''.
        </description>
        <syntax>
          <string>
            <size maxLength="32768"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.ManagementServer." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains parameters relating to the CPE's association with an ACS.
      </description>
      <parameter name="EnableCWMP" access="readWrite" dmr:version="1.4">
        <description>
          Enables and disables the CPE's support for CWMP. 
          {{false}} means that CWMP support in the CPE is disabled, in which case the device MUST NOT send any Inform messages to the ACS or accept any Connection Request notifications from the ACS.
          {{true}} means that CWMP support on the CPE is enabled.
          The factory default value MUST be {{true}}.
          The subscriber can re-enable the CPE's CWMP support either by performing a factory reset or by using a LAN-side protocol to change the value of this parameter back to {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="URL" access="readWrite" dmr:version="1.0">
        <description>
          URL, as defined in {{bibref|RFC3986}}, for the CPE to connect to the ACS using the CPE WAN Management Protocol. 
          This parameter MUST be in the form of a valid HTTP or HTTPS URL {{bibref|RFC2616}}.
          The ''host'' portion of this URL is used by the CPE for validating the ACS certificate when using SSL or TLS.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a factory reset.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="1.0">
        <description>
          Username used to authenticate the CPE when making a connection to the ACS using the CPE WAN Management Protocol.
          This username is used only for HTTP-based authentication of the CPE.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a factory reset.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="1.0">
        <description>
          Password used to authenticate the CPE when making a connection to the ACS using the CPE WAN Management Protocol.
          This password is used only for HTTP-based authentication of the CPE.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a factory reset.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformEnable" access="readWrite" dmr:version="1.0">
        <description>
          Whether or not the CPE MUST periodically send CPE information to the ACS using the Inform method call.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformInterval" access="readWrite" dmr:version="1.0">
        <description>
          The duration in seconds of the interval for which the CPE MUST attempt to connect with the ACS and call the Inform method if {{param|PeriodicInformEnable}} is {{true}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformTime" access="readWrite" dmr:version="1.0">
        <description>
          An absolute time reference in UTC to determine when the CPE will initiate the periodic Inform method calls.  Each Inform call MUST occur at this reference time plus or minus an integer multiple of the {{param|PeriodicInformInterval}}.
          {{param}} is used only to set the "phase" of the periodic Informs.  The actual value of {{param}} can be arbitrarily far into the past or future.
          For example, if {{param|PeriodicInformInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past, present, or future) then periodic Informs will occur every day at UTC midnight.  These MUST begin on the very next midnight, even if {{param}} refers to a day in the future.
          The Unknown Time value defined in {{bibref|TR-098a2|section 2.2}} indicates that no particular time reference is specified.  That is, the CPE MAY locally choose the time reference, and needs only to adhere to the specified {{param|PeriodicInformInterval}}.
          If absolute time is not available to the CPE, its periodic Inform behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ParameterKey" access="readOnly" activeNotify="canDeny" forcedInform="true" dmr:version="1.0">
        <description>
          {{param}} provides the ACS a reliable and extensible means to track changes made by the ACS.  The value of {{param}} MUST be equal to the value of the ParameterKey argument from the most recent successful SetParameterValues, AddObject, or DeleteObject method call from the ACS.
          The CPE MUST set {{param}} to the value specified in the corresponding method arguments if and only if the method completes successfully and no fault response is generated.  If a method call does not complete successfully (implying that the changes requested in the method did not take effect), the value of {{param}} MUST NOT be modified.
          The CPE MUST only modify the value of {{param}} as a result of SetParameterValues, AddObject, DeleteObject, or due to a factory reset.  On factory reset, the value of {{param}} MUST be set to {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestURL" access="readOnly" activeNotify="forceDefaultEnabled" forcedInform="true" dmr:version="1.0">
        <description>
          HTTP URL, as defined in {{bibref|RFC3986}}, for an ACS to make a Connection Request notification to the CPE.
          In the form:
          http://host:port/path
          The ''host'' portion of the URL MAY be the IP address for the management interface of the CPE in lieu of a host name.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestUsername" access="readWrite" dmr:version="1.0">
        <description>
          Username used to authenticate an ACS making a Connection Request to the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestPassword" access="readWrite" dmr:version="1.0">
        <description>
          Password used to authenticate an ACS making a Connection Request to the CPE.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpgradesManaged" access="readWrite" dmr:version="1.0">
        <description>
          Indicates whether or not the ACS will manage upgrades for the CPE.  If {{true}}, the CPE SHOULD NOT use other means other than the ACS to seek out available upgrades.  If {{false}}, the CPE MAY use other means for this purpose.
          Note that an autonomous upgrade (reported via an ''10 AUTONOMOUS TRANSFER COMPLETE'' Inform Event code) SHOULD be regarded as a managed upgade if it is performed according to ACS-specified policy.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="KickURL" access="readOnly" dmr:version="1.0">
        <description>
          Present only for a CPE that supports the Kicked RPC method.
          LAN-accessible URL, as defined in {{bibref|RFC3986}}, from which the CPE can be "kicked" to initiate the Kicked RPC method call.  MUST be an absolute URL including a host name or IP address as would be used on the LAN side of the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DownloadProgressURL" access="readOnly" dmr:version="1.0">
        <description>
          Present only for a CPE that provides a LAN-side web page to show progress during a file download.
          LAN-accessible URL, as defined in {{bibref|RFC3986}}, to which a web-server associated with the ACS MAY redirect a user's browser on initiation of a file download to observer the status of the download.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManageableDeviceNumberOfEntries" access="readOnly" dmr:version="1.2">
        <description>
          Number of entries in the {{object|ManageableDevice}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.ManagementServer.ManageableDevice.{i}." access="readOnly" numEntriesParameter="ManageableDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.2">
      <description>
        Each entry in this table corresponds to a distinct LAN Device that supports Device-Gateway Association according to {{bibref|TR-069a2|Annex F}} as indicated by the presence of the DHCP option specified in that Annex.
      </description>
      <uniqueKey>
        <parameter ref="ManufacturerOUI"/>
        <parameter ref="SerialNumber"/>
        <parameter ref="ProductClass"/>
      </uniqueKey>
      <parameter name="ManufacturerOUI" access="readOnly" activeNotify="canDeny" dmr:version="1.2">
        <description>
          Organizationally unique identifier of the Device manufacturer as provided to the Gateway by the Device.  Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros.  The value MUST be a valid OUI as defined in {{bibref|OUI}}.
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" activeNotify="canDeny" dmr:version="1.2">
        <description>
          Serial number of the Device as provided to the Gateway by the Device.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" activeNotify="canDeny" dmr:version="1.2">
        <description>
          Identifier of the class of product for which the Device's serial number applies as provided to the Gateway by the Device.
          If the Device does not provide a Product Class, then this parameter MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="1.4">
        <description>
          {{reference|a ''Host'' table row}}  This list MUST include an item for each ''Host'' table entry, whether active or inactive, that corresponds to this physical LAN Device.
          As such entries are added to or removed from the ''Host'' tables, the value of this parameter MUST be updated accordingly.
          For example: ''InternetGatewayDevice.LANDevice.1.Hosts.Host.1,InternetGatewayDevice.LANDevice.1.Hosts.Host.5''
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetParent="InternetGatewayDevice.LANDevice.{i}.Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.ManagementServer.AutonomousTransferCompletePolicy." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.5">
      <description>
        This object allows configuration of CPE policy for notification of AUTONOMOUS TRANSFER COMPLETE events, defined in {{bibref|TR-069a2}}.
        The CPE policy determines the conditions under which the CPE notifies the ACS of the completion of file transfers that were not specifically requested by the ACS.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.5">
        <description>
          Enable/disable CPE notification of AUTONOMOUS TRANSFER COMPLETE events to the ACS.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TransferTypeFilter" access="readWrite" dmr:version="1.5">
        <description>
          Indicates the transfer types that MUST be included when the CPE notifies the ACS of AUTONOMOUS TRANSFER COMPLETE events.   Transfer types not indicated by this filter MUST NOT be included when the CPE notifies the ACS. {{enum}}
          Note that this includes any backup or restore operations that were not specifically requested by the ACS.  A backup is regarded as an Upload and a restore is regarded as a Download.
        </description>
        <syntax>
          <string>
            <enumeration value="Upload"/>
            <enumeration value="Download"/>
            <enumeration value="Both">
              <description>
                Upload and Download
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ResultTypeFilter" access="readWrite" dmr:version="1.7">
        <description>
          Indicates the transfer results that MUST be included when the CPE notifies the ACS of AUTONOMOUS TRANSFER COMPLETE events.  Transfer results omitted from this list MUST NOT be included when the CPE notifies the ACS.
          Note that this includes any backup or restore operations that were not specifically requested by the ACS.  A backup is regarded as an Upload and a restore is regarded as a Download.
        </description>
        <syntax>
          <string>
            <enumeration value="Success">
              <description>
                The autonomous file transfer completed successfully; i.e., the FaultCode was zero
              </description>
            </enumeration>
            <enumeration value="Failure">
              <description>
                The autonomous file transfer did not complete successfully; i.e., the FaultCode was non-zero
              </description>
            </enumeration>
            <enumeration value="Both">
              <description>
                Success and Failure
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="FileTypeFilter" access="readWrite" dmr:version="1.5">
        <description>
          {{list}} Indicates the file types that MUST be included when the CPE notifies the ACS of AUTONOMOUS TRANSFER COMPLETE events.  File types omitted from this list MUST NOT be included when the CPE notifies the ACS.
          {{pattern}}
          Additionally, the following format is defined to allow the unique definition of vendor-specific file types:
          * ''"X &lt;OUI&gt; &lt;Vendor-specific identifier&gt;"''
          &lt;OUI&gt; is replaced by a 6 hexadecimal-digit OUI (organizationally unique identifier) as defined in {{bibref|OUI}}, with all upper-case letters and any leading zeros included. The OUI used for a given vendor-specific file type MUST be one that is assigned to the organization that defined this file type (which is not necessarily the same as the vendor of the CPE or ACS).
          Note that {{empty}} indicates that all file types are excluded from this filter, effectively disabling CPE notification of AUTONOMOUS TRANSFER COMPLETE events to the ACS.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pattern value="1 Firmware Upgrade Image">
              <description>
                Download Only
              </description>
            </pattern>
            <pattern value="2 Web Content">
              <description>
                Download Only
              </description>
            </pattern>
            <pattern value="3 Vendor Configuration File">
              <description>
                Download or Upload
              </description>
            </pattern>
            <pattern value="4 Vendor Log File">
              <description>
                Upload Only
              </description>
            </pattern>
            <pattern value="X [0-9A-F]{6} .*">
              <description>
                For Vendor-Specific File Types, could be for either Download or Upload
              </description>
            </pattern>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Time." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains parameters relating an NTP or SNTP time client in the CPE.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.4">
        <description>
          Enables or disables the NTP or SNTP time client.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.4">
        <description>
          Status of Time support on the CPE.  {{enum}}
          The {{enum|Unsynchronized}} value indicates that the CPE's absolute time has not yet been set.
          The {{enum|Synchronized}} value indicates that the CPE has acquired accurate absolute time; its current time is accurate.
          The {{enum|Error_FailedToSynchronize}} value indicates that the CPE failed to acquire accurate absolute time; its current time is not accurate.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Unsynchronized"/>
            <enumeration value="Synchronized"/>
            <enumeration value="Error_FailedToSynchronize"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer1" access="readWrite" dmr:version="1.0">
        <description>
          First NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer2" access="readWrite" dmr:version="1.0">
        <description>
          Second NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentLocalTime" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current date and time in the CPE's local time zone.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LocalTimeZone" access="readWrite" status="obsoleted" dmr:version="1.0">
        <description>
          The local time zone offset from UTC, ignoring daylight savings time adjustments, in the form:
          : +hh:mm
          : -hh:mm
          For example, this will always be "-08:00" for California, "+00:00" or "-00:00" for the United Kingdom, and "+01:00" for France.
          This parameter is OBSOLETED because the information that it represents is fully covered by {{param|LocalTimeZoneName}}.
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LocalTimeZoneName" access="readWrite" dmr:version="1.0">
        <description>
          Name of the local time zone (human readable string).
          The name SHOULD be encoded according to IEEE 1003.1 (POSIX).  The following is an example value: ''EST+5EDT,M4.1.0/2,M10.5.0/2''
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer3Forwarding." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object allows the handling of the routing and forwarding configuration of the device.
      </description>
      <parameter name="DefaultConnectionService" access="readWrite" dmr:version="1.0">
        <description>
          Specifies the default WAN interface.  The content is the full hierarchical parameter name of the default layer 3 connection object.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ForwardNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of forwarding instances.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}." access="readWrite" numEntriesParameter="ForwardNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        Layer 3 forwarding table.
        In addition to statically configured routes, this table MUST include dynamic routes learned through layer 3 routing protocols, including RIP, OSPF, DHCP, and IPCP.  The CPE MAY reject attempts to delete or modify a dynamic route entry.
        For each incoming packet, the layer 3 forwarding decision is conceptually made as follows:
        * Only table entries with a matching {{param|ForwardingPolicy}} are considered, i.e. those that either do not specify a {{param|ForwardingPolicy}}, or else specify a {{param|ForwardingPolicy}} that matches that of the incoming packet. 
        * For the remaining table entries, those for which the source address/mask matches are sorted by longest prefix, i.e. with the most specific networks first (an unspecified source address is a wild-card and always matches, with a prefix length of zero). 
        * For the remaining table entries, those for which the destination address/mask matches are sorted by longest prefix, i.e. with the most specific networks first (an unspecified destination address is a wild-card and always matches, with a prefix length of zero). 
        * The first of the remaining table entries is applied to the packet.
      </description>
      <uniqueKey>
        <parameter ref="DestIPAddress"/>
        <parameter ref="DestSubnetMask"/>
        <parameter ref="SourceIPAddress"/>
        <parameter ref="SourceSubnetMask"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the forwarding entry.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.0">
        <description>
          Indicates the status of the forwarding entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="StaticRoute" access="readOnly" dmr:version="1.4">
        <description>
          If {{true}}, this route is a Static route.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readWrite" status="deprecated" dmr:version="1.0">
        <description>
          Indicates the type of route.  {{enum}}
          This parameter is DEPRECATED because its value could conflict with {{param|DestIPAddress}} and/or {{param|DestSubnetMask}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Default"/>
            <enumeration value="Network"/>
            <enumeration value="Host"/>
          </string>
          <default type="object" value="Host"/>
        </syntax>
      </parameter>
      <parameter name="DestIPAddress" access="readWrite" dmr:version="1.0">
        <description>
          Destination address.  {{empty}} or a value of "0.0.0.0" indicates no destination address is specified.
          A Forwarding table entry for which {{param}} and {{param|DestSubnetMask}} are both {{empty}} or "0.0.0.0" is a default route.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestSubnetMask" access="readWrite" dmr:version="1.0">
        <description>
          Destination subnet mask.  {{empty}} or a value of "0.0.0.0" indicates no destination subnet mask is specified.
          If a destination subnet mask is specified, the {{param}} is ANDed with the destination address before comparing with the {{param|DestIPAddress}}.  Otherwise, the full destination address is used as is.
          A Forwarding table entry for which {{param|DestIPAddress}} and {{param}} are both {{empty}} or "0.0.0.0" is a default route.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceIPAddress" access="readWrite" dmr:version="1.0">
        <description>
          Source address.  {{empty}} or a value of "0.0.0.0" indicates no source address is specified.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceSubnetMask" access="readWrite" dmr:version="1.0">
        <description>
          Source subnet mask.  {{empty}} or a value of "0.0.0.0" indicates no source subnet mask is specified.
          If a source subnet mask is specified, the {{param}} is ANDed with the source address before comparing with the {{param|SourceIPAddress}}.  Otherwise, the full source address is used as is.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="GatewayIPAddress" access="readWrite" dmr:version="1.0">
        <description>
          IP address of the gateway.
          Only one of GatewayIPAddress and Interface SHOULD be configured for a route.
          If both are configured, {{param}} and {{param|Interface}} MUST be consistent with each other.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="1.0">
        <description>
          Specifies the egress interface associated with this entry.  {{reference|the layer 3 connection object}}  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
          Only one of {{param|GatewayIPAddress}} and {{param}} SHOULD be configured for a route.
          If both are configured, {{param|GatewayIPAddress}} and {{param}} MUST be consistent with each other.
          For a route that was configured by setting {{param|GatewayIPAddress}} but not {{param}}, read access to {{param}} MUST return the full hierarchical parameter name for the route's egress interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ForwardingMetric" access="readWrite" dmr:version="1.0">
        <description>
          Forwarding metric.  A value of -1 indicates this metric is not used.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.1">
      <description>
        Layer 2 bridging configuration.  Specifies bridges between layer 2 LAN and/or WAN interfaces.  Bridges can be defined to include layer 2 filter criteria to selectively bridge traffic between interfaces.
        This object can be used to configure both 802.1D {{bibref|802.1D-2004}} and 802.1Q {{bibref|802.1Q-2005}} bridges.  Not all 802.1D and 802.1Q features are modeled, and some additional features not present in either 802.1D or 802.1Q are modeled. 
        If the Layer2Bridging object is implemented, the view that it provides of the CPE's underlying bridging configuration MUST be consistent with the view provided by any LANDevice and WAN**Connection objects.  The implications of this are explained in Annex A.6.
      </description>
      <parameter name="MaxBridgeEntries" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          The maximum number of entries available in the {{object|Bridge}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxDBridgeEntries" access="readOnly" dmr:version="1.4">
        <description>
          The maximum number of 802.1D {{bibref|802.1D-2004}} entries available in the {{object|Bridge}} table.  A positive value for this parameter implies support for 802.1D.
          There is no guarantee that this many 802.1D Bridges can be configured.  For example, the CPE might not be able simultaneously to support both 802.1D and 802.1Q Bridges.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxMarkingEntries" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          The maximum number of entries available in the {{object|Marking}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BridgeNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
          Number of entries in the {{object|Bridge}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
          Number of entries in the {{object|Filter}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MarkingNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
          Number of entries in the {{object|Marking}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AvailableInterfaceNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
          Number of entries in the {{object|AvailableInterface}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.Bridge.{i}." access="readWrite" numEntriesParameter="BridgeNumberOfEntries" enableParameter="BridgeEnable" minEntries="0" maxEntries="unbounded" dmr:version="1.1">
      <description>
        Bridge table.  Each entry in this table represents a single physical 802.1D {{bibref|802.1D-2004}} or 802.1Q {{bibref|802.1Q-2005}} bridge.
        If the Bridge Port table is supported, it explicitly defines the Bridge's interfaces.  Otherwise, they are implicitly defined via the union of the FilterInterface / MarkingInterface parameters for all the Filter and Marking table entries that are associated with the Bridge.
      </description>
      <uniqueKey>
        <parameter ref="BridgeKey"/>
      </uniqueKey>
      <parameter name="BridgeKey" access="readOnly" dmr:version="1.1">
        <description>
          Unique key for each Bridge table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BridgeEnable" access="readWrite" dmr:version="1.1">
        <description>
          Enables or disables this Bridge table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="BridgeStatus" access="readOnly" dmr:version="1.1">
        <description>
          The status of this Bridge table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="BridgeName" access="readWrite" dmr:version="1.1">
        <description>
          Human-readable name for this Bridge table entry.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VLANID" access="readWrite" dmr:version="1.1">
        <description>
          For an 802.1D {{bibref|802.1D-2004}} Bridge, which has no concept of VLANs, the value of this parameter MUST be 0.
          For an 802.1Q {{bibref|802.1Q-2005}} Bridge, this is the Bridge's default VLAN ID, i.e. the VLAN ID that applies to Filter table entries with ''VLANIDFilter''=-1.  For an 802.1Q Bridge, the value of this parameter MUST NOT be 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="4094"/>
          </unsignedInt>
          <default type="object" value="0" status="deleted"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.Filter.{i}." access="readWrite" numEntriesParameter="FilterNumberOfEntries" enableParameter="FilterEnable" minEntries="0" maxEntries="unbounded" dmr:version="1.1">
      <description>
        Filter table containing filter entries each of which is associated with one Bridge as specified by a ''Bridge'' table entry.
        For both 802.1D {{bibref|802.1D-2004}} and 802.1Q {{bibref|802.1Q-2005}} Bridges, this table is used for the following:
        # If the Bridge Port table is not supported, it implicitly specifies the Bridge interfaces (in collaboration with the Marking table).
        # It specifies destination MAC address classification rules.
        For an 802.1Q Bridge, this table is also used for the following:
        # For each VLAN ID, it specifies the interfaces that are in the VLAN's Member Set.
        # If the Bridge Port table is not supported, it specifies the Port VLAN ID (PVID) for each interface.
        This table also supports several concepts that are not covered by either 802.1D or 802.1Q:
        # It allows a given packet to be admitted to multiple Bridges.
        # It supports Ethertype and source MAC address classification rules.
      </description>
      <uniqueKey>
        <parameter ref="FilterKey"/>
      </uniqueKey>
      <parameter name="FilterKey" access="readOnly" dmr:version="1.1">
        <description>
          Unique key for each Filter table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterEnable" access="readWrite" dmr:version="1.1">
        <description>
          Enables or disables this Filter table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="FilterStatus" access="readOnly" dmr:version="1.1">
        <description>
          The status of this Filter table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
          If the Bridge Port table is supported, but none of its entries correspond to {{param|FilterInterface}}, or if such an entry exists but is disabled, {{param}} MUST NOT indicate {{enum|Enabled}}.
          If the Bridge VLAN table is supported, but none of its entries correspond to {{param|VLANIDFilter}}, or if such an entry exists but is disabled, {{param}} MUST NOT indicate {{enum|Enabled}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="FilterBridgeReference" access="readWrite" dmr:version="1.1">
        <description>
          The ''BridgeKey'' value of the ''Bridge'' table entry associated with this Filter.  A value of -1 indicates the Filter table entry is not associated with a Bridge (and has no effect).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="FilterInterface" access="readWrite" dmr:version="1.1">
        <description>
          The interface or interfaces associated with this Filter table entry.  The bridge corresponding to this Filter table entry is defined to admit packets on ingress to the bridge from the specified interfaces that meet all of the criteria specified in the Filter table entry.  The following values are defined.
          * To associate this Filter with a single interface listed in the ''AvailableInterface'' table, the {{param}} value is set to the value of the corresponding ''AvailableInterfaceKey''.
          * ''AllInterfaces'' indicates that this Filter is associated with all LAN and WAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''LANInterface'' or ''WANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * ''LANInterfaces'' indicates that this Filter is associated with all LAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''LANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * ''WANInterfaces'' indicates that this Filter is associated with all WAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''WANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          {{empty}} indicates the Filter table entry is not associated with any interface (and has no effect)
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.Marking.{i}." access="readWrite" numEntriesParameter="MarkingNumberOfEntries" enableParameter="MarkingEnable" minEntries="0" maxEntries="unbounded" dmr:version="1.1">
      <description>
        Marking table identifying non-default layer 2 marking behavior for packets on egress from the specified interfaces.
        This table is not relevant to 802.1D {{bibref|802.1D-2004}} Bridges, which are not VLAN-aware.
        For 802.1Q {{bibref|802.1Q-2005}} Bridges, this table is used for the following:
        # It specifies whether VLAN tags are to be removed on egress.
        This table also supports several concepts that are not covered by 802.1Q:
        # It allows the VLAN ID to be changed on egress.
        # It allows the Ethernet Priority to be changed on egress.
      </description>
      <uniqueKey>
        <parameter ref="MarkingKey"/>
      </uniqueKey>
      <parameter name="MarkingKey" access="readOnly" dmr:version="1.1">
        <description>
          Unique key for each Marking table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MarkingEnable" access="readWrite" dmr:version="1.1">
        <description>
          Enables or disables this Marking table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="MarkingStatus" access="readOnly" dmr:version="1.1">
        <description>
          The status of this Marking table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
          If the Bridge Port table is supported, but none of its entries correspond to {{param|MarkingInterface}}, or if such an entry exists but is disabled, {{param}} MUST NOT indicate {{enum|Enabled}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="MarkingBridgeReference" access="readWrite" dmr:version="1.1">
        <description>
          The ''BridgeKey'' value of the Bridge table entry associated with this Marking table entry.  A value of -1 indicates the Marking table entry is not associated with a Bridge (and has no effect).
          The effect of a Marking table entry applies only to packets that have been admitted to the specified bridge (regardless of the ingress interface).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="MarkingInterface" access="readWrite" dmr:version="1.1">
        <description>
          The interface or interfaces associated with this Marking table entry for which the specified marking behavior is to apply on egress from the associated bridge.  The following values are defined.
          * To associate this Marking table entry with a single interface listed in the ''AvailableInterface'' table, the {{param}} value is set to the value of the corresponding ''AvailableInterfaceKey''.
          * ''AllInterfaces'' indicates that this Marking table entry is associated with all LAN and WAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''LANInterface'' or ''WANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * ''LANInterfaces'' indicates that this Marking table entry is associated with all LAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''LANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * ''WANInterfaces'' indicates that this Marking table entry is associated with all WAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''WANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * {{empty}} indicates the Marking table entry table entry is not associated with any interface (and has no effect)
          If there is more than one enabled Marking table entry that specifies one or more of the same interfaces for the same bridge (identical values of {{param|MarkingBridgeReference}}), then for packets on egress from the specified bridge to those interfaces, the applied marking MUST be that specified in the Marking table entry among those in conflict with the lowest {{param|MarkingKey}} value.
          If an interface in a given bridge does not have a corresponding Marking table entry, the marking is left unchanged on egress.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VLANIDMark" access="readWrite" dmr:version="1.1">
        <description>
          The 802.1Q {{bibref|802.1Q-2005}} VLAN ID to be used on egress to the interfaces associated with this Marking table entry.
          A value of -1 indicates that the VLAN ID of the VLAN in which the packet is being bridged is to be used, i.e. no change.
          The value of this parameter MUST NOT be 0.
          If {{param|VLANIDUntag}} is {{true}}, then no VLAN marking is done since the tag containing the VLAN ID is removed.
          Note that 802.1Q does not support re-marking on egress.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="4094"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityMark" access="readWrite" dmr:version="1.1">
        <description>
          Ethernet priority code (as defined in 802.1D {{bibref|802.1D-2004}}) to mark traffic with that falls into this Bridge on egress to the interfaces associated with this Marking table entry. A value of -1 indicates no change from the incoming packet or the mark assigned by the classifier.
          Note that 802.1Q {{bibref|802.1Q-2005}} does not support re-marking on egress.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="7"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.AvailableInterface.{i}." access="readOnly" numEntriesParameter="AvailableInterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.1">
      <description>
        Table containing all LAN and WAN interfaces that are available to be referenced by the Bridge table.  Only interfaces that can carry layer 2 bridged traffic are included.
      </description>
      <uniqueKey>
        <parameter ref="AvailableInterfaceKey"/>
      </uniqueKey>
      <parameter name="AvailableInterfaceKey" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          Unique key for each Interface entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InterfaceType" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          Whether the interface is a LAN-side or WAN-side interface, or a LAN-side or WAN-side connection to the Gateway's IP router.
        </description>
        <syntax>
          <string>
            <enumeration value="LANInterface"/>
            <enumeration value="WANInterface"/>
            <enumeration value="LANRouterConnection"/>
            <enumeration value="WANRouterConnection"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceReference" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          {{reference|an available LAN or WAN interface}}  This table SHOULD contain a single entry for each available LAN and WAN interface.
          When such an interface is modeled in more than one place within the data model, the value of this parameter MUST include the full hierarchical parameter names of all of the corresponding objects.  For example, if a given Ethernet interface is present within two ''LANDevice'' instances, the value of this parameter might be: ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.1, InternetGatewayDevice.LANDevice.2.LANEthernetInterfaceConfig.1''
          Note that the remainder of the parameter description does not refer to the possibility that the parameter value is a comma-separated list.  Nevertheless, the above requirement does apply.
          * For a WAN interface, this parameter is the full hierarchical parameter name of a particular ''WANConnectionDevice''.  A ''WANConnectionDevice'' is considered available (included in this table) only if it supports layer 2 bridged traffic.  That is, this table MUST include only ''WANConnectionDevice''s that contain either a ''WANEthernetLinkConfig'' object, or that contain a ''WANDSLLinkConfig'' object for which the ''LinkType'' is ''EoA''.  For example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2''
          * For a LAN interface, this parameter is the full hierarchical parameter name of a particular ''LAN**InterfaceConfig'' object, or a ''WLANConfiguration'' object.  This table SHOULD include one entry for each such object.  For example: ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2''
          * For a WAN-side connection to the Gateway's IP router, this parameter is the full hierarchical parameter name of a particular ''WAN**Connection'' service.  This table SHOULD include an entry for each layer 3 WAN connection.  For example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''
          * For a LAN-side connection to the Gateway's IP router, this parameter is the full hierarchical parameter name of a particular ''LANDevice''.  This table SHOULD include an entry for each ''LANDevice'', each of which is associated with a LAN-side layer 3 connection to the Gateway's IP router.  For example: ''InternetGatewayDevice.LANDevice.2''
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.1">
      <description>
        Queue management configuration object.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.1">
        <description>
          Enables or disables all queuing operation.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MaxQueues" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          The maximum number of queues supported by the CPE. Calculated as the sum of the number of different queues pointed to by Classification table.  For each entry in the Classification table, the count includes a queue for each egress interface to which the corresponding classified traffic could reach.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxClassificationEntries" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          The maximum number of entries available in the Classification table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ClassificationNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
          The number of entries in the {{object|Classification}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxAppEntries" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          The maximum number of entries available in the {{object|App}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AppNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
          The number of entries in the {{object|App}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxFlowEntries" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          The maximum number of entries available in the {{object|Flow}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FlowNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
          The number of entries in the {{object|Flow}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxPolicerEntries" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          The maximum number of entries available in the {{object|Policer}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PolicerNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
          The number of entries in the {{object|Policer}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxQueueEntries" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          The maximum number of entries available in the {{object|Queue}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
          The number of entries in the {{object|Queue}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueStatsNumberOfEntries" access="readOnly" dmr:version="1.4">
        <description>
          The number of entries in the {{object|QueueStats}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DefaultEthernetPriorityMark" access="readWrite" dmr:version="1.1">
        <description>
          Ethernet priority code (as defined in 802.1D) to mark traffic not associated with any specified classifier.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="AvailableAppList" access="readOnly" dmr:version="1.1">
        <description>
          URNs, each indicating a protocol supported for use as a ProtocolIdentifier in the App table.  This list MAY include any of the URNs defined in {{bibref|TR-098a1|Annex A}} as well as other URNs defined elsewhere.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement.Classification.{i}." access="readWrite" numEntriesParameter="ClassificationNumberOfEntries" enableParameter="ClassificationEnable" minEntries="0" maxEntries="unbounded" dmr:version="1.1">
      <description>
        Classification table.
      </description>
      <parameter name="ClassificationKey" access="readOnly" status="obsoleted" dmr:version="1.1">
        <description>
          Unique key for each classification entry.
          This parameter is OBSOLETED because it serves no purpose (no other parameter references it).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ClassificationEnable" access="readWrite" dmr:version="1.1">
        <description>
          Enables or disables this classifier.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ClassificationStatus" access="readOnly" dmr:version="1.1">
        <description>
          The status of this classifier.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="ClassificationOrder" access="readWrite" dmr:version="1.1">
        <description>
          Position of the classification entry in the order of precedence.  A value of 1 indicates the first entry considered.  For each packet, the highest ordered entry that matches the classification criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the Order value for the existing entry and all lower Order entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes Order values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value on creation of a Classification table entry MUST be one greater than the largest current value.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ClassInterface" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Specifies the LAN or WAN ingress interface associated with this entry.  The content is the full hierarchical parameter name of the particular ''WANDevice'', ''WANConnectionDevice'', ''WAN**Connection'', ''LANDevice'', ''LAN**InterfaceConfig'', or ''WLANConfiguration'' object.
          The following are WAN interface examples:
          * ''InternetGatewayDevice.WANDevice.2''
          * ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''
          The following are LAN interface examples:
          * ''InternetGatewayDevice.LANDevice.3''
          * ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2''
          * ''InternetGatewayDevice.LANDevice.1.WLANConfiguration.3''
          The string ''WAN'' indicates this entry is to apply to traffic entering from any WAN interface.
          The string ''LAN'' indicates this entry is to apply to traffic entering from any LAN interface.
          The string ''Local'' indicates this entry is to apply to IP-layer traffic entering from a local source within the Internet Gateway Device.
          {{empty}} indicates this classification entry is to apply to all sources.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestIP" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Destination IP address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMask" access="readWrite" dmr:version="1.1">
        <description>
          Destination IP address mask.  If not {{empty}}, only the indicated network portion of the DestIP address is to be used for classification.  {{empty}} indicates that the full DestIP address is to be used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceIP" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Source IP address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMask" access="readWrite" dmr:version="1.1">
        <description>
          Source IP address mask.  If not {{empty}}, only the indicated network portion of the SourceIP address is to be used for classification.  {{empty}} indicates that the full SourceIP address is to be used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Protocol number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPort" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Destination port number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortRangeMax" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          If specified, indicates the classification criterion is to include the port range from DestPort through DestPortRangeMax (inclusive).  If specified, DestPortRangeMax MUST be greater than or equal to DestPort.
          A value of -1 indicates that no port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePort" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Source port number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortRangeMax" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          If specified, indicates the classification criterion is to include the port range from SourcePort through SourcePortRangeMax (inclusive).  If specified, SourcePortRangeMax MUST be greater than or equal to SourcePort.
          A value of -1 indicates that no port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACAddress" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Source MAC Address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACMask" access="readWrite" dmr:version="1.1">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the SourceMACAddress is only to be done for bit positions set to one in the mask.  A mask of ''FF:FF:FF:FF:FF:FF'' or {{empty}} indicates all bits of the SourceMACAdress are to be used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACAddress" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Destination MAC Address.  {{empty}} indicates this criterion is not used for classification.
          The use of destination MAC address as a classification criterion is primarily useful only for bridged traffic.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACMask" access="readWrite" dmr:version="1.1">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the DestMACAddress is only to be done for bit positions set to one in the mask.  A mask of ''FF:FF:FF:FF:FF:FF'' or {{empty}} indicates all bits of the DestMACAdress are to be used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Ethertype" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Ethertype as indicated in either the Ethernet or SNAP Type header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DSCPMark" access="readWrite" dmr:version="1.1">
        <description>
          Classification result.
          DSCP to mark traffic with that falls into this classification entry.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of DSCP based upon the EthernetPriority value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityCheck" access="readWrite" dmr:version="1.1">
        <description>
          Classification criterion.
          Current Ethernet priority as defined in 802.1D.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityMark" access="readWrite" dmr:version="1.1">
        <description>
          Classification result.
          Ethernet priority code (as defined in 802.1D) to mark traffic with that falls into this classification entry.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ClassQueue" access="readWrite" dmr:version="1.1">
        <description>
          Classification result.
          Instance number of the Queue table entry for traffic that falls in this classification.
          A value of -1 indicates a null queue.
          {{param|TrafficClass}}, {{param}} and {{param|ClassApp}} are mutually exclusive and one of the three MUST be specified.  If {{param|TrafficClass}} and {{param}} are null, {{param|ClassApp}} MUST be specified, and vice versa.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement.Queue.{i}." access="readWrite" numEntriesParameter="QueueNumberOfEntries" enableParameter="QueueEnable" minEntries="0" maxEntries="unbounded" dmr:version="1.1">
      <description>
        Queue table.
        This table can contain hardware queues.  The CPE MAY refuse to allow hardware queues to be deleted.
      </description>
      <parameter name="QueueEnable" access="readWrite" dmr:version="1.1">
        <description>
          Enables or disables this queue.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="QueueStatus" access="readOnly" dmr:version="1.1">
        <description>
          The status of this queue.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="QueueInterface" access="readWrite" dmr:version="1.1">
        <description>
          Egress interfaces for which the specified queue MUST exist.  This parameter MUST be in one of the following forms:
          The full hierarchical parameter name of the particular ''WANDevice'', ''WANConnectionDevice'', ''WAN**Connection'', ''LANDevice'', ''LAN**InterfaceConfig'', or ''WLANConfiguration'' object.
          The string ''WAN'', which indicates this entry applies to all WAN interfaces.
          The string ''LAN'', which indicates this entry applies to all LAN interfaces.
          {{empty}}, which indicates this classification entry is to apply to all interfaces.
          Packets classified into this queue that exit through any other interface MUST instead use the default queuing behavior specified in the Queue table entry referenced by {{param|InternetGatewayDevice.QueueManagement.DefaultQueue}}.
          For the default queue itself (the Queue table entry referenced by {{param|InternetGatewayDevice.QueueManagement.DefaultQueue}}), the value of the {{param}} parameter MUST be ignored.  That is, the default queue MUST exist on all egress interfaces.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="QueueBufferLength" access="readOnly" dmr:version="1.1">
        <description>
          Number of bytes in the buffer.
          Queue buffer size for all egress interfaces for which this queue exists.  If the buffer size is not the same for all such egress interfaces, this parameter MUST be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueWeight" access="readWrite" dmr:version="1.1">
        <description>
          Weight of this queue in case of {{enum|WFQ|SchedulerAlgorithm}} or {{enum|WRR|SchedulerAlgorithm}}, but only used for queues of equal precedence.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="QueuePrecedence" access="readWrite" dmr:version="1.1">
        <description>
          Precedence of this queue relative to others. Lower numbers imply greater precedence.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="DropAlgorithm" access="readWrite" dmr:version="1.1">
        <description>
          Dropping algorithm used for this queue if congested.
        </description>
        <syntax>
          <string>
            <enumeration value="RED">
              <description>
                Random Early Detection {{bibref|RED}}
              </description>
            </enumeration>
            <enumeration value="DT">
              <description>
                Drop Tail
              </description>
            </enumeration>
            <enumeration value="WRED">
              <description>
                Weighted RED
              </description>
            </enumeration>
            <enumeration value="BLUE">
              <description>
                {{bibref|BLUE}}
              </description>
            </enumeration>
          </string>
          <default type="object" value="DT"/>
        </syntax>
      </parameter>
      <parameter name="SchedulerAlgorithm" access="readWrite" dmr:version="1.1">
        <description>
          Scheduling Algorithm used by scheduler.
        </description>
        <syntax>
          <string>
            <enumeration value="WFQ">
              <description>
                Weighted Fair Queueing
              </description>
            </enumeration>
            <enumeration value="WRR">
              <description>
                Weighted Round Robin
              </description>
            </enumeration>
            <enumeration value="SP">
              <description>
                Strict Priority
              </description>
            </enumeration>
          </string>
          <default type="object" value="SP"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANConfigSecurity." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains generic device configuration information.
      </description>
      <parameter name="ConfigPassword" access="readWrite" dmr:version="1.0">
        <description>
          A password to allow LAN access to protected auto-configuration services.
          If the CPE supports TR-064 (LAN-side DSL CPE Configuration Protocol), this parameter is to be used as the ''dslf-config'' password (as defined in TR-064).
          If the CPE has a user interface with password protection enabled, this parameter is also to be used as the user password for password-protected operations.  However, this parameter MUST NOT be used to set the user password if the parameter {{param|InternetGatewayDevice.UserInterface.PasswordUserSelectable}} is {{true}}.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPPingDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object provides access to an IP-layer ping test.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Indicates availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="1.0">
        <description>
          {{reference|the WAN or LAN IP-layer interface over which the test is to be performed}}  This identifies the source IP address to use when performing the test.
          The following is a WAN interface example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''
          The following is a LAN interface example: ''InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1''
          The value of this parameter MUST be either a valid interface or {{empty}}.  An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
          If {{empty}} is specified, the CPE MUST use the interface as directed by its routing policy (Forwarding table entries) to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite" dmr:version="1.0">
        <description>
          Host name or address of the host to ping.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" dmr:version="1.0">
        <description>
          Number of repetitions of the ping test to perform before reporting the results.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="1.0">
        <description>
          Timeout in milliseconds for the ping test.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DataBlockSize" access="readWrite" dmr:version="1.0">
        <description>
          Size of the data block in bytes to be sent for each ping.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="1.0">
        <description>
          DiffServ codepoint to be used for the test packets.  By default the CPE SHOULD set this value to zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Result parameter indicating the number of successful pings (those in which a successful response was received prior to the timeout) in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Result parameter indicating the number of failed pings in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Result parameter indicating the average response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.1">
        <description>
          Result parameter indicating the minimum response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Result parameter indicating the maximum response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DownloadDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.3">
      <description>
        This object defines the diagnostics configuration for a HTTP and FTP DownloadDiagnostics Test.
        Files received in the DownloadDiagnostics do not require file storage on the CPE device.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Indicate the availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Completed}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Completed}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Completed" access="readOnly"/>
            <enumeration value="Error_InitConnectionFailed" access="readOnly"/>
            <enumeration value="Error_NoResponse" access="readOnly"/>
            <enumeration value="Error_TransferFailed" access="readOnly"/>
            <enumeration value="Error_PasswordRequestFailed" access="readOnly"/>
            <enumeration value="Error_LoginFailed" access="readOnly"/>
            <enumeration value="Error_NoTransferMode" access="readOnly"/>
            <enumeration value="Error_NoPASV" access="readOnly"/>
            <enumeration value="Error_IncorrectSize" access="readOnly"/>
            <enumeration value="Error_Timeout" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="1.3">
        <description>
          {{reference|the IP-layer interface over which the test is to be performed}}
          The value of this parameter MUST be either a valid interface or {{empty}}.  An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
          If {{empty}} is specified, the CPE MUST use the default routing interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DownloadURL" access="readWrite" dmr:version="1.3">
        <description>
          The URL, as defined in {{bibref|RFC3986}}, for the CPE to perform the download on. This parameter MUST be in the form of a valid HTTP {{bibref|RFC2616}} or FTP {{bibref|RFC862}} URL.
          When using FTP transport, FTP binary transfer MUST be used.
          When using HTTP transport, persistent connections MUST be used and pipelining MUST NOT be used.
          When using HTTP transport the HTTP Authentication MUST NOT be used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="1.3">
        <description>
          The DiffServ code point for marking packets transmitted in the test. 
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EthernetPriority" access="readWrite" dmr:version="1.3">
        <description>
          Ethernet priority code for marking packets transmitted in the test (if applicable). 
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ROMTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the client sends the GET command.
          * For FTP this is the time at which the client sends the RTRV command.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="BOMTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Begin of transmission time in UTC, which MUST be specified to microsecond precision
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the first data packet is received.
          * For FTP this is the time at which the client receives the first data packet on the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EOMTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          End of transmission in UTC, which MUST be specified to microsecond precision. 
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the last data packet is received.
          * For FTP this is the time at which the client receives the last packet on the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TestBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          The test traffic received in bytes during the FTP/HTTP transaction including FTP/HTTP headers, between {{param|BOMTime}} and {{param|EOMTime}},
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          The total number of bytes received on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenRequestTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the TCP socket open (SYN) was sent for the HTTP connection.
          * For FTP this is the time at which the TCP socket open (SYN) was sent for the data connection.
          Note: Interval of 1 microsecond SHOULD be supported.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Response time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the TCP ACK to the socket opening the HTTP connection was received.
          * For FTP this is the time at which the TCP ACK to the socket opening the data connection was received.
          Note: Interval of 1 microsecond SHOULD be supported.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.UploadDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.3">
      <description>
        This object defines the diagnostics configuration for a HTTP or FTP UploadDiagnostics test. 
        Files sent by the UploadDiagnostics do not require file storage on the CPE device, and MAY be an arbitrary stream of bytes.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Indicate the availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Completed}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Completed}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Completed" access="readOnly"/>
            <enumeration value="Error_InitConnectionFailed" access="readOnly"/>
            <enumeration value="Error_NoResponse" access="readOnly"/>
            <enumeration value="Error_PasswordRequestFailed" access="readOnly"/>
            <enumeration value="Error_LoginFailed" access="readOnly"/>
            <enumeration value="Error_NoTransferMode" access="readOnly"/>
            <enumeration value="Error_NoPASV" access="readOnly"/>
            <enumeration value="Error_NoCWD" access="readOnly"/>
            <enumeration value="Error_NoSTOR" access="readOnly"/>
            <enumeration value="Error_NoTransferComplete" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="1.3">
        <description>
          {{reference|the IP-layer interface over which the test is to be performed}}
          The value of this parameter MUST be either a valid interface or an empty string.  An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
          If {{empty}} is specified, the CPE MUST use the default routing interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UploadURL" access="readWrite" dmr:version="1.3">
        <description>
          The URL, as defined in {{bibref|RFC3986}}, for the CPE to Upload to. This parameter MUST be in the form of a valid HTTP {{bibref|RFC2616}} or FTP {{bibref|RFC862}} URL.
          When using FTP transport, FTP binary transfer MUST be used.
          When using HTTP transport, persistent connections MUST be used and pipelining MUST NOT be used.
          When using HTTP transport the HTTP Authentication MUST NOT be used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="1.3">
        <description>
          DiffServ code point for marking packets transmitted in the test. 
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EthernetPriority" access="readWrite" dmr:version="1.3">
        <description>
          Ethernet priority code for marking packets transmitted in the test (if applicable).
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TestFileLength" access="readWrite" dmr:version="1.3">
        <description>
          The size of the file (in bytes) to be uploaded to the server.
          The CPE MUST insure the appropriate number of bytes are sent.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ROMTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the client sends the PUT command
          * For FTP this is the time at which the STOR command is sent.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="BOMTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Begin of transmission time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the first data packet is sent.
          * For FTP this is the time at which the client receives the ready for transfer notification.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EOMTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          End of transmission in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time when the HTTP successful response code is received.
          * For FTP this is the time when the client receives a transfer complete.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          The total number of bytes sent on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenRequestTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the TCP socket open (SYN) was sent for the HTTP connection.
          * For FTP this is the time at which the TCP socket open (SYN) was sent for the data connection
          Note: Interval of 1 microsecond SHOULD be supported.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Response time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the Time at which the TCP ACK to the socket opening the HTTP connection was received.
          * For FTP this is  the Time at which the TCP ACK to the socket opening the Data connection was received.
          Note: Interval of 1 microsecond SHOULD be supported.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.UDPEchoConfig." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.3">
      <description>
        This object allows the CPE to be configured to perform the UDP Echo Service defined in {{bibref|RFC862}} and UDP Echo Plus Service defined in {{bibref|TR-143|Appendix A.1}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.3">
        <description>
          MUST be enabled to receive UDP echo. When enabled from a disabled state all related timestamps, statistics and UDP Echo Plus counters are cleared.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="1.3">
        <description>
          {{reference|IP-layer interface over which the CPE MUST listen and receive UDP echo requests on}}
          The value of this parameter MUST be either a valid interface or {{empty}}.  An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
          If {{empty}} is specified, the CPE MUST listen and receive UDP echo requests on all interfaces.
          Note: Interfaces behind a NAT MAY require port forwarding rules configured in the Gateway to enable receiving the UDP packets.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SourceIPAddress" access="readWrite" dmr:version="1.3">
        <description>
          The Source IP address of the UDP echo packet. The CPE MUST only respond to a UDP echo from this source IP address.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="UDPPort" access="readWrite" dmr:version="1.3">
        <description>
          The UDP port on which the UDP server MUST listen and respond to UDP echo requests.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EchoPlusEnabled" access="readWrite" dmr:version="1.3">
        <description>
          If {{true}} the CPE will perform necessary packet processing for UDP Echo Plus packets.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EchoPlusSupported" access="readOnly" dmr:version="1.3">
        <description>
          {{true}} if UDP Echo Plus is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Incremented upon each valid UDP echo packet received.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsResponded" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Incremented for each UDP echo response sent.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          The number of UDP received bytes including payload and UDP header after the UDPEchoConfig is enabled.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesResponded" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          The number of UDP responded bytes, including payload and UDP header sent after the UDPEchoConfig is enabled.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TimeFirstPacketReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456, 
          The time that the server receives the first UDP echo packet after the UDPEchoConfig is enabled.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TimeLastPacketReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.3">
        <description>
          Time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          The time that the server receives the most recent UDP echo packet.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}." access="readWrite" numEntriesParameter="LANDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        Each instance models a LAN side layer 3 IP interface.
        Each instance has children that correspond to the layer 2 interfaces that are connected to the Gateway's IP router via the modeled IP interface.  If a LANDevice instance is deleted, the objects modeling those layer 2 interfaces that are as a result no longer connected to the Gateway's IP router will move to the InternetGatewayDevice.LANInterfaces object.
        If the ''Layer2Bridging'' object is implemented, the view that it provides of the CPE's underlying bridging configuration MUST be consistent with the view provided by any ''LANDevice'' and ''WAN**Connection'' objects.  The implications of this are explained in {{bibref|TR-098a2|Annex A.6}}.
      </description>
      <parameter name="LANEthernetInterfaceNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|LANEthernetInterfaceConfig}} in this ''LANDevice''.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="LANUSBInterfaceNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|LANUSBInterfaceConfig}} in this ''LANDevice''.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="LANWLANConfigurationNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|WLANConfiguration}} in this ''LANDevice''.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object enables reporting of LAN-related device information and setting and configuring LAN IP addressing.
        The DHCP parameters in this object define the behavior of the default DHCP server, i.e. the behavior for DHCP requests that do not match any of the DHCP conditional serving pool entries.
      </description>
      <parameter name="MACAddress" access="readOnly" dmr:version="1.4">
        <description>
          The MAC address associated with the IP interface modeled by this LANDevice instance.  This is the MAC address that is returned in response to an ARP request for any of the IP interface's IP addresses.  It is also the source MAC address in all IP traffic sent over the IP interface.
          If no single MAC address meets the above criteria, the value of this parameter MUST be the all-zero MAC address ''00:00:00:00:00:00''.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="DHCPServerConfigurable" access="readWrite" dmr:version="1.0">
        <description>
          Enables the configuration of the DHCP server on the LAN interface.  If this variable is set to {{false}}, the CPE SHOULD restore its default DHCP server settings.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DHCPServerEnable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the DHCP server on the LAN interface.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DHCPRelay" access="readOnly" status="deprecated" dmr:version="1.0">
        <description>
          Indicates if the DHCP server performs the role of a server ({{false}}) or a relay ({{true}}) on the LAN interface.
          This parameter is DEPRECATED because the functionality that it describes is not well-defined.  The CPE MAY set it to the value that it thinks most appropriate, based on its configuration.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MinAddress" access="readWrite" dmr:version="1.0">
        <description>
          Specifies first address in the pool to be assigned by the DHCP server on the LAN interface.
          This parameter MUST have a valid value before the DHCP server can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxAddress" access="readWrite" dmr:version="1.0">
        <description>
          Specifies last address in the pool to be assigned by the DHCP server on the LAN interface.
          This parameter MUST have a valid value before the DHCP server can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ReservedAddresses" access="readWrite" dmr:version="1.0">
        <description>
          Addresses marked reserved from the address allocation pool.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readWrite" dmr:version="1.0">
        <description>
          Specifies the client's network subnet mask.
          This parameter MUST have a valid value before the DHCP server can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readWrite" dmr:version="1.0">
        <description>
          DNS servers offered to DHCP clients.  Support for more than three DNS Servers is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DomainName" access="readWrite" dmr:version="1.0">
        <description>
          Sets the domain name to provide to clients on the LAN interface.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPRouters" access="readWrite" dmr:version="1.0">
        <description>
          IP addresses of routers on this subnet.  Also known as default gateway.  Support for more than one Router address is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DHCPLeaseTime" access="readWrite" dmr:version="1.0">
        <description>
          Specifies the lease time in seconds of client assigned addresses.  A value of -1 indicates an infinite lease.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="86400"/>
        </syntax>
      </parameter>
      <parameter name="UseAllocatedWAN" access="readWrite" dmr:version="1.0">
        <description>
          Controls use of addresses from the associated WAN connection.  {{enum}}
          If {{enum|Normal}}, the address pool is directly configured by the ACS.
          If {{enum|UseAllocatedSubnet}}, behavior is the same as for {{enum|Passthrough}} with an empty {{param|PassthroughMACAddress}}.  For this reason, {{enum|UseAllocatedSubnet}} is DEPRECATED.
          If {{enum|Passthrough}}, and {{param|PassthroughMACAddress}} is {{empty}}, the configured values of the {{param|MinAddress}}, {{param|MaxAddress}}, {{param|SubnetMask}} and {{param|DNSServers}} parameters are ignored.  The corresponding address pool values are instead taken from the WAN connection specified by {{param|AssociatedConnection}}.
          If {{enum|Passthrough}}, and {{param|PassthroughMACAddress}} is not {{empty}}, the LAN Host identified by {{param|PassthroughMACAddress}} is given a WAN IP address from the WAN connection specified by {{param|AssociatedConnection}}.  Other LAN Hosts are treated as for {{enum|Normal}}.
          Use of {{param|PassthroughMACAddress}} does not cover the case where more than one LAN Host is to be given a WAN IP address.  This can be achieved by using a DHCP conditional serving pool.
        </description>
        <syntax>
          <string>
            <enumeration value="Normal"/>
            <enumeration value="UseAllocatedSubnet" status="deprecated"/>
            <enumeration value="Passthrough"/>
          </string>
          <default type="object" value="Normal"/>
        </syntax>
      </parameter>
      <parameter name="AssociatedConnection" access="readWrite" dmr:version="1.0">
        <description>
          {{reference|the connection instance to be used for address allocation if {{param|UseAllocatedWAN}} is set to {{enum|UseAllocatedSubnet|UseAllocatedWAN}} or {{enum|Passthrough|UseAllocatedWAN}}}}  The content is the full hierarchical parameter name of a WAN-side layer 3 connection object.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
          If {{param|UseAllocatedWAN}} is {{enum|UseAllocatedSubnet|UseAllocatedWAN}} or {{enum|Passthrough|UseAllocatedWAN}}, this parameter MUST have a valid value before the DHCP server can be enabled.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PassthroughLease" access="readWrite" dmr:version="1.0">
        <description>
          DHCP lease time in seconds given to the LAN Host that is used to passthrough a WAN IP address if {{param|UseAllocatedWAN}} is {{enum|Passthrough|UseAllocatedWAN}}.
          Note: A temporary private IP address with short lease (for example, 1 min) might be given to the passthrough LAN Host before the WAN IP address is acquired.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="600"/>
        </syntax>
      </parameter>
      <parameter name="PassthroughMACAddress" access="readWrite" dmr:version="1.0">
        <description>
          Hardware address of the LAN Host that is used to passthrough a WAN IP address if {{param|UseAllocatedWAN}} is {{enum|Passthrough|UseAllocatedWAN}}.  
          Note: {{empty}} indicates that no specific LAN Host is designated, and results in the same behavior as the (DEPRECATED) {{enum|UseAllocatedSubnet|UseAllocatedWAN}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="AllowedMACAddresses" access="readWrite" dmr:version="1.0">
        <description>
          Hardware addresses that are allowed to connect to this connection if ''MACAddressControlEnabled'' is 1 for a given interface.
        </description>
        <syntax>
          <list>
            <size maxLength="512"/>
          </list>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="IPInterfaceNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          The number of entries in the {{object|IPInterface}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DHCPStaticAddressNumberOfEntries" access="readOnly" dmr:version="1.4">
        <description>
          The number of entries in the {{object|DHCPStaticAddress}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DHCPOptionNumberOfEntries" access="readOnly" dmr:version="1.4">
        <description>
          The number of entries in the {{object|DHCPOption}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DHCPConditionalPoolNumberOfEntries" access="readOnly" dmr:version="1.4">
        <description>
          The number of entries in the  {{object|DHCPConditionalServingPool}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}." access="readWrite" numEntriesParameter="IPInterfaceNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        IP address table with each object representing an IP address on the LANDevice IP interface.
        Support for more than one interface instance is OPTIONAL.
      </description>
      <uniqueKey>
        <parameter ref="IPInterfaceIPAddress"/>
        <parameter ref="IPInterfaceSubnetMask"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables this entry.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPInterfaceIPAddress" access="readWrite" dmr:version="1.0">
        <description>
          IP address of the LAN-side interface of the CPE.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IPInterfaceSubnetMask" access="readWrite" dmr:version="1.0">
        <description>
          Subnet mask of the LAN-side interface of the IGD.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IPInterfaceAddressingType" access="readWrite" dmr:version="1.0">
        <description>
          Represents the addressing method used to assign the LAN-side IP address of the CPE on this interface.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP"/>
            <enumeration value="Static"/>
            <enumeration value="AutoIP"/>
          </string>
          <default type="object" value="DHCP"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPOption.{i}." access="readWrite" numEntriesParameter="DHCPOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="1.4">
      <description>
        This object specifies the DHCP options that MUST, if enabled, be returned to clients whose DHCP requests do not match any of the DHCP conditional serving pool entries.
      </description>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.4">
        <description>
          Enables or disables this DHCPOption table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="1.4">
        <description>
          Option tag as defined in RFC 2132 {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="1.4">
        <description>
          Base64 encoded option value.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="255"/>
          </base64>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}." access="readWrite" numEntriesParameter="DHCPConditionalPoolNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="1.4">
      <description>
        DHCP conditional serving pool table.
        Each instance of this object defines a DHCP conditional serving pool.  Client requests are associated with pools based on criteria such as source interface, supplied DHCP options, and MAC address.
        If a DHCP request does not match any of the DHCP conditional serving pool entries, the handling of the request is determined by the default DHCP server behavior that is defined by the LANHostConfigManagement object.
        Overlapping pool ranges MUST be supported.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.4">
        <description>
          Enables or disables the DHCPConditionalServingPool entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PoolOrder" access="readWrite" dmr:version="1.4">
        <description>
          Position of the pool entry in the order of precedence.  A value of 1 indicates the first entry considered.  For each DHCP request, the highest ordered entry that matches the association criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the Order value for the existing entry and all lower Order entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes Order values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value on creation of a DHCPConditionalServingPool table entry MUST be one greater than the largest current value.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SourceInterface" access="readWrite" dmr:version="1.4">
        <description>
          Pool association criterion.
          {{list}}  {{reference|the layer 2 ingress interfaces associated with this entry, i.e. the corresponding ''LAN**InterfaceConfig'' or ''WLANConfiguration'' objects}}
          For example: ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2,InternetGatewayDevice.LANDevice.1.WLANConfiguration.3''
          {{empty}} indicates this entry is to apply to all layer 2 interface objects under this ''LANDevice'' instance.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="weak" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readWrite" dmr:version="1.4">
        <description>
          Pool association criterion. 
          Used to identify one or more LAN devices, value of the DHCP Vendor Class Identifier (Option 60) as defined in RFC 2132 {{bibref|RFC2132}}, matched according to the criterion in {{param|VendorClassIDMode}}.  Case sensitive.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDExclude" access="readWrite" dmr:version="1.4">
        <description>
          If {{false}}, matching packets are those that match the {{param|VendorClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|VendorClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDMode" access="readWrite" dmr:version="1.4">
        <description>
          {{param|VendorClassID}} pattern match criterion.  {{enum}}
          For example, if {{param|VendorClassID}} is "Example" then an Option 60 value of "Example device" will match with {{param}} values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact"/>
            <enumeration value="Prefix"/>
            <enumeration value="Suffix"/>
            <enumeration value="Substring"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readWrite" dmr:version="1.4">
        <description>
          Pool association criterion. 
          Used to identify one or more LAN devices, value of the DHCP Client Identifier (Option 61) as defined in RFC 2132 {{bibref|RFC2132}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ClientIDExclude" access="readWrite" dmr:version="1.4">
        <description>
          If {{false}}, matching packets are those that match the {{param|ClientID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|ClientID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readWrite" dmr:version="1.4">
        <description>
          Pool association criterion. 
          Used to identify one or more LAN devices, value of the DHCP User Class Identifier (Option 77) as defined in RFC 3004 {{bibref|RFC3004}}.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="UserClassIDExclude" access="readWrite" dmr:version="1.4">
        <description>
          If {{false}}, matching packets are those that match the {{param|UserClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|UserClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Chaddr" access="readWrite" dmr:version="1.4">
        <description>
          Pool association criterion.
          Hardware address (MAC address.) of the physical interface of the DHCP client.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChaddrMask" access="readWrite" dmr:version="1.4">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the {{param|Chaddr}} is only to be done for bit positions set to one in the mask.  A mask of FF:FF:FF:FF:FF:FF  or {{empty}} indicates all bits of the {{param|Chaddr}} are to be used for conditional serving classification.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChaddrExclude" access="readWrite" dmr:version="1.4">
        <description>
          If {{false}}, matching packets are those that match the (masked) {{param|Chaddr}} entry, if specified.
          If {{true}}, matching packets are those that do not match the (masked) {{param|Chaddr}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LocallyServed" access="readWrite" dmr:version="1.4">
        <description>
          If {{true}}, then the local DHCP server will assign an IP address from the specific address pool specified in this object. If {{false}}, the DHCP server will send the request to the {{param|DHCPServerIPAddress}} configured for this pool.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="MinAddress" access="readWrite" dmr:version="1.4">
        <description>
          Specifies first address in the pool to be assigned by the DHCP server on the LAN interface.
          This parameter is configurable only if {{param|UseAllocatedWAN}} is {{enum|Normal|UseAllocatedWAN}}.
          This parameter MUST have a valid value before this pool can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxAddress" access="readWrite" dmr:version="1.4">
        <description>
          Specifies last address in the pool to be assigned by the DHCP server on the LAN interface.
          This parameter is configurable only if {{param|UseAllocatedWAN}} is {{enum|Normal|UseAllocatedWAN}}.
          This parameter MUST have a valid value before this pool can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ReservedAddresses" access="readWrite" dmr:version="1.4">
        <description>
          IP addresses marked reserved from the address allocation pool.
        </description>
        <syntax>
          <list>
            <size maxLength="512"/>
          </list>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readWrite" dmr:version="1.4">
        <description>
          Specifies the client's network subnet mask.
          This parameter is configurable only if {{param|UseAllocatedWAN}} is {{enum|Normal|UseAllocatedWAN}}.
          This parameter MUST have a valid value before this pool can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readWrite" dmr:version="1.4">
        <description>
          DNS servers offered to DHCP clients.  Support for more than three DNS Servers is OPTIONAL.
          This parameter is configurable only if {{param|UseAllocatedWAN}} is {{enum|Normal|UseAllocatedWAN}}.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DomainName" access="readWrite" dmr:version="1.4">
        <description>
          Sets the domain name to provide to clients on the LAN interface.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPRouters" access="readWrite" dmr:version="1.4">
        <description>
          IP addresses of routers on this subnet.  Also known as default gateway.  Support for more than one Router address is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DHCPLeaseTime" access="readWrite" dmr:version="1.4">
        <description>
          Specifies the lease time in seconds of client assigned addresses.  A value of -1 indicates an infinite lease.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="86400"/>
        </syntax>
      </parameter>
      <parameter name="UseAllocatedWAN" access="readWrite" dmr:version="1.4">
        <description>
          Controls whether the {{param|MinAddress}}, {{param|MaxAddress}}, {{param|SubnetMask}} and {{param|DNSServers}} parameters are configurable or are taken from the associated WAN connection.  {{enum}}
          If {{enum|Normal}}, the above-mentioned pool parameters are directly configured by the ACS.
          If {{enum|Passthrough}}, the above-mentioned pool parameters cannot be configured by the ACS.  Their values are instead taken from the WAN connection specified by {{param|AssociatedConnection}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Normal"/>
            <enumeration value="Passthrough"/>
          </string>
          <default type="object" value="Normal"/>
        </syntax>
      </parameter>
      <parameter name="AssociatedConnection" access="readWrite" dmr:version="1.4">
        <description>
          {{reference|the connection instance to be used for address allocation if {{param|UseAllocatedWAN}} is set to {{enum|Passthrough|UseAllocatedWAN}}}} The content is the full hierarchical parameter name of a WAN-side layer 3 connection object.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
          If {{param|UseAllocatedWAN}} is {{enum|Passthrough|UseAllocatedWAN}}, this parameter MUST have a valid value before this pool can be enabled.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DHCPServerIPAddress" access="readWrite" dmr:version="1.4">
        <description>
          IP address of the DHCP server, where the request has to be sent to when there is a conditional match with this pool and {{param|LocallyServed}} is {{false}}. If this parameter is not configured, then the DHCP request is dropped.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}." access="readOnly" numEntriesParameter="LANEthernetInterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        This object models an Ethernet LAN connection on a CPE device.  This object MUST be implemented for CPE that contain an Ethernet interface on the LAN side.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables this interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.0">
        <description>
          Indicates the status of this interface.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="NoLink"/>
            <enumeration value="Error" optional="true"/>
            <enumeration value="Disabled"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="1.4">
        <description>
          The name of this layer 2 interface, chosen by the vendor, e.g. "eth0" or "eth0:1".
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="1.0">
        <description>
          The physical address of the interface.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddressControlEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Indicates whether MAC Address Control is enabled or not on this interface.  MAC Address Control limits the clients that connect to those that match a list of allowed MAC addresses specified in {{param|InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.AllowedMACAddresses}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readWrite" dmr:version="1.0">
        <description>
          The maximum upstream and downstream bit rate available to this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="10"/>
            <enumeration value="100"/>
            <enumeration value="1000"/>
            <enumeration value="10000"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DuplexMode" access="readWrite" dmr:version="1.0">
        <description>
          The duplex mode available to this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Half"/>
            <enumeration value="Full"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains statistics for an Ethernet LAN interface on a CPE device.
        Note that these statistics refer to the link layer, not to the physical layer.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes received on the interface, including framing characters. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets transmitted out of the interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets which were received on this interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets that could not be transmitted because of errors. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were addressed to a multicast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a multicast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were addressed to a broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}." access="readOnly" numEntriesParameter="LANUSBInterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        This object models a USB LAN connection on a CPE device.  This object MUST be implemented for CPE that contain a USB interface on the LAN side.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables this interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.0">
        <description>
          Indicates the status of this interface.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="NoLink"/>
            <enumeration value="Error" optional="true"/>
            <enumeration value="Disabled"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="1.4">
        <description>
          The name of this layer 2 interface, chosen by the vendor, e.g. "usb0".
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="1.0">
        <description>
          The physical address of the interface.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddressControlEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Indicates whether MAC Address Control is enabled or not on this interface.  MAC Address Control limits the clients that connect to those that match a list of allowed MAC addresses specified in {{param|InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.AllowedMACAddresses}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Standard" access="readOnly" dmr:version="1.0">
        <description>
          USB version supported by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="1.0">
        <description>
          Type of the USB interface.
        </description>
        <syntax>
          <string>
            <enumeration value="Host"/>
            <enumeration value="Hub"/>
            <enumeration value="Device"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Rate" access="readOnly" dmr:version="1.0">
        <description>
          Speed of the USB interface.
        </description>
        <syntax>
          <string>
            <enumeration value="Low"/>
            <enumeration value="Full"/>
            <enumeration value="High">
              <description>
                USB 2.0
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Power" access="readOnly" dmr:version="1.0">
        <description>
          Power configuration of the USB interface.
        </description>
        <syntax>
          <string>
            <enumeration value="Self"/>
            <enumeration value="Bus"/>
            <enumeration value="Unknown"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains statistics for a USB LAN interface on a CPE device.
        Note that these statistics refer to the link layer, not to the physical layer.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes received on the interface, including framing characters. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets (cells) transmitted out of the interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets (cells) which were received on this interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets that could not be transmitted because of errors. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were addressed to a multicast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a multicast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were addressed to a broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}." access="readOnly" numEntriesParameter="LANWLANConfigurationNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        This object models an 802.11 LAN connection on a CPE device.  This object MUST be implemented for CPE that contain an 802.11 interface on the LAN side.
      </description>
      <uniqueKey>
        <parameter ref="BSSID"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SSID"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables this interface.
          When there are multiple ''WLANConfiguration'' instances, e.g. each instance supports a different 802.11 standard or has a different security configuration, this parameter can be used to control which of the instances are currently enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.0">
        <description>
          Indicates the status of this interface.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Error" optional="true"/>
            <enumeration value="Disabled"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="1.4">
        <description>
          The name of this layer 2 interface, chosen by the vendor, e.g. "wlan0".
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BSSID" access="readOnly" dmr:version="1.0">
        <description>
          The MAC address of the interface.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readWrite" dmr:version="1.0">
        <description>
          The maximum upstream and downstream bit rate available to this connection in Mbps.  Either ''Auto'', or the largest of the {{param|OperationalDataTransmitRates}} values.
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Channel" access="readWrite" dmr:version="1.0">
        <description>
          The current radio channel used by the connection.  To request automatic channel selection, set {{param|AutoChannelEnable}} to {{true}}.
          Whenever {{param|AutoChannelEnable}} is {{true}}, the value of the {{param}} parameter MUST be the channel selected by the automatic channel selection procedure.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AutoChannelEnable" access="readWrite" dmr:version="1.4">
        <description>
          Enable or disable automatic channel selection.
          Set to {{false}} to disable the automatic channel selection procedure, in which case the currently selected channel remains selected.
          Set to {{true}} to enable the automatic channel selection procedure.  This procedure MUST automatically select the channel, and MAY also change it subsequently.
          {{param}} MUST automatically change to {{false}} whenever the channel is manually selected, i.e. whenever the {{param|Channel}} parameter is written.
          Whenever {{param}} is {{true}}, the value of the {{param|Channel}} parameter MUST be the channel selected by the automatic channel selection procedure.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SSID" access="readWrite" dmr:version="1.0">
        <description>
          The current service set identifier in use by the connection.  The SSID is an identifier that is attached to packets sent over the wireless LAN that functions as a "password" for joining a particular radio network (BSS).  Note: If an access point wishes to be known by more than one SSID, it MUST provide a ''WLANConfiguration'' instance for each SSID.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BeaconType" access="readWrite" dmr:version="1.0">
        <description>
          The capabilities that are currently enabled on the access point (and that are announced via beacons if {{param|BeaconAdvertisementEnabled}} is {{true}}). Write access to this parameter enables and disables such capabilities.
          An attempt to set this parameter to one of the REQUIRED (mandatory) values MAY be rejected if (and only if) the requested capability is not available on this WLANConfiguration instance but is available on another WLANConfiguration instance within this Internet Gateway Device. For example, only basic 802.11 might be supported by one virtual AP, and only WPA might be supported by another virtual AP.
          A value of {{enum|None}} means that no capabilities are currently enabled on the access point and that no stations will be able to associate with it.  {{enum}}
          {{enum|11i}} SHOULD be taken to refer to both the 802.11i specification and to the WPA2 specification (any WPA2-certified device will implement all mandatory parts of the 802.11i standard).
          The OBSOLETED values are those for Basic + WPA/WPA2  mixed modes, which are not permitted by the WPA specifications.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="Basic"/>
            <enumeration value="WPA"/>
            <enumeration value="11i" optional="true"/>
            <enumeration value="BasicandWPA" status="obsoleted" optional="true"/>
            <enumeration value="Basicand11i" status="obsoleted" optional="true"/>
            <enumeration value="WPAand11i" optional="true"/>
            <enumeration value="BasicandWPAand11i" status="obsoleted" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddressControlEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Indicates whether MAC Address Control is enabled or not on this interface.  MAC Address Control limits the clients that connect to those that match a list of allowed MAC addresses specified in {{param|InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.AllowedMACAddresses}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Standard" access="readOnly" dmr:version="1.0">
        <description>
          Indicates which IEEE 802.11 standard this ''WLANConfiguration'' instance is configured for.  {{enum}}
          Where each value indicates support for only the indicated standard.
          If the device is configured simultaneously for more than one standard, a separate ''WLANConfiguration'' instance MUST be used for each supported standard.
        </description>
        <syntax>
          <string>
            <enumeration value="a"/>
            <enumeration value="b"/>
            <enumeration value="g">
              <description>
                b and g clients supported
              </description>
            </enumeration>
            <enumeration value="g-only">
              <description>
                only g clients supported
              </description>
            </enumeration>
            <enumeration value="n"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WEPKeyIndex" access="readWrite" dmr:version="1.0">
        <description>
          The index of the default WEP key.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="4"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="KeyPassphrase" access="readWrite" dmr:version="1.0">
        <description>
          A passphrase from which the WEP keys are to be generated.
          This parameter is the same as the parameter ''InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.1.KeyPassphrase'' for the same instance of ''WLANConfiguration''.  When either parameter is changed, the value of the other is changed as well.
          If {{param}} is written, all four WEP keys are immediately generated.  The ACS SHOULD NOT set the passphrase and also set the WEP keys directly (the result of doing this is undefined).
          This MUST either be a valid key length divided by 8, in which case each byte contributes 8 bits to the key, or else MUST consist of Hex digits and be a valid key length divided by 4, in which case each byte contributes 4 bits to the key.
          Note: If a passphrase is used, all four WEP keys will be the same.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="63"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WEPEncryptionLevel" access="readOnly" dmr:version="1.0">
        <description>
          Supported key lengths.  {{enum}}
          Any additional vendor-specific values MUST start with the key length in bits.
          This parameter does not enforce a given encryption level but only indicates capabilities.  The WEP encryption level for a given key is inferred from the key length.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="40-bit"/>
            <enumeration value="104-bit"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BasicEncryptionModes" access="readWrite" dmr:version="1.0">
        <description>
          Encryption modes that are available when basic 802.11 is enabled. {{enum|WEPEncryption}} implies that all wireless clients can use WEP for data encryption.  {{enum}}
          If this ''WLANConfiguration'' instance does not support basic 802.11 then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="WEPEncryption"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BasicAuthenticationMode" access="readWrite" dmr:version="1.0">
        <description>
          Authentication modes that are available when basic 802.11 is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support basic 802.11 then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
        </description>
        <syntax>
          <string>
            <enumeration value="None">
              <description>
                Open authentication
              </description>
            </enumeration>
            <enumeration value="EAPAuthentication" optional="true"/>
            <enumeration value="SharedAuthentication" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WPAEncryptionModes" access="readWrite" dmr:version="1.0">
        <description>
          Encryption modes that are available when WPA is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support WPA then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
          The DEPRECATED values are those that combine WEP with TKIP and/or AES, which is not permitted by the WPA specifications.
        </description>
        <syntax>
          <string>
            <enumeration value="WEPEncryption" status="deprecated"/>
            <enumeration value="TKIPEncryption"/>
            <enumeration value="WEPandTKIPEncryption" status="deprecated"/>
            <enumeration value="AESEncryption" optional="true"/>
            <enumeration value="WEPandAESEncryption" status="deprecated" optional="true"/>
            <enumeration value="TKIPandAESEncryption" optional="true"/>
            <enumeration value="WEPandTKIPandAESEncryption" status="deprecated" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WPAAuthenticationMode" access="readWrite" dmr:version="1.0">
        <description>
          Authentication modes that are available when WPA is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support WPA then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
        </description>
        <syntax>
          <string>
            <enumeration value="PSKAuthentication"/>
            <enumeration value="EAPAuthentication" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IEEE11iEncryptionModes" access="readWrite" dmr:version="1.0">
        <description>
          Encryption modes that are available when 802.11i is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support 802.11i then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
          ''IEEE11i'' SHOULD be taken to refer to both the 802.11i specification and to the WPA2 specification (any WPA2-certified device will implement all mandatory parts of the 802.11i standard).
          The DEPRECATED values are those that combine WEP with TKIP and/or AES, which is not permitted by the WPA2 specifications.
        </description>
        <syntax>
          <string>
            <enumeration value="WEPEncryption" status="deprecated"/>
            <enumeration value="TKIPEncryption" optional="true"/>
            <enumeration value="WEPandTKIPEncryption" status="deprecated"/>
            <enumeration value="AESEncryption"/>
            <enumeration value="WEPandAESEncryption" status="deprecated" optional="true"/>
            <enumeration value="TKIPandAESEncryption" optional="true"/>
            <enumeration value="WEPandTKIPandAESEncryption" status="deprecated" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IEEE11iAuthenticationMode" access="readWrite" dmr:version="1.0">
        <description>
          Authentication modes that are available when 802.11i is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support 802.11i then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
          ''IEEE11i'' SHOULD be taken to refer to both the 802.11i specification and to the WPA2 specification (any WPA2-certified device will implement all mandatory parts of the 802.11i standard).
        </description>
        <syntax>
          <string>
            <enumeration value="PSKAuthentication"/>
            <enumeration value="EAPAuthentication" optional="true"/>
            <enumeration value="EAPandPSKAuthentication" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PossibleChannels" access="readOnly" dmr:version="1.0">
        <description>
          Possible radio channels for the wireless standard (a, b or g) and the regulatory domain. 
          Ranges in the form "n-m" are permitted.
          For example, for 802.11b and North America, would be "1-11".
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="BasicDataTransmitRates" access="readWrite" dmr:version="1.0">
        <description>
          Maximum access point data transmit rates in Mbps for unicast, multicast and broadcast frames.
          For example, a value of "1,2", indicates that unicast, multicast and broadcast frames can be transmitted at 1 Mbps and 2 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OperationalDataTransmitRates" access="readWrite" dmr:version="1.0">
        <description>
          Maximum access point data transmit rates in Mbps for unicast frames (a superset of {{param|BasicDataTransmitRates}}).
          Given the value of {{param|BasicDataTransmitRates}} from the example above, {{param}} might be "1,2,5.5,11", indicating that unicast frames can additionally be transmitted at 5.5 Mbps and 11 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PossibleDataTransmitRates" access="readOnly" dmr:version="1.0">
        <description>
          Data transmit rates for unicast frames at which the access point will permit a station to connect (a subset of {{param|OperationalDataTransmitRates}}).
          Given the values of {{param|BasicDataTransmitRates}} and {{param|OperationalDataTransmitRates}} from the examples above, {{param}} might be "1,2,5.5", indicating that the AP will only permit connections at 1 Mbps, 2 Mbps and 5.5 Mbps, even though it could theoretically accept connections at 11 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="InsecureOOBAccessEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Indicates whether insecure write access via mechanisms other than the CPE WAN Management Protocol is permitted to the parameters in this object.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="BeaconAdvertisementEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Indicates whether or not the access point is sending out beacons.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SSIDAdvertisementEnabled" access="readWrite" dmr:version="1.4">
        <description>
          Indicates whether or not beacons include the SSID name.
          This parameter has an effect only if {{param|BeaconAdvertisementEnabled}} is {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RadioEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Indicates whether or not the access point radio is enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TransmitPowerSupported" access="readOnly" dmr:version="1.4">
        <description>
          Supported transmit power levels as percentages of full power.  For example, "0,25,50,75,100".
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TransmitPower" access="readWrite" dmr:version="1.4">
        <description>
          Indicates the current transmit power level as a percentage of full power.  The value MUST be one of the values reported by the {{param|TransmitPowerSupported}} parameter.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AutoRateFallBackEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Indicates whether the access point can automatically reduce the data rate in the event of undue noise or contention.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="LocationDescription" access="readWrite" dmr:version="1.0">
        <description>
          An XML description of information used to identify the access point by name and physical location.  The CPE is not expected to parse this string, but simply to treat it as an opaque string.  {{empty}} indicates no location has been set.
        </description>
        <syntax>
          <string>
            <size maxLength="4096"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RegulatoryDomain" access="readWrite" dmr:version="1.0">
        <description>
          802.11d Regulatory Domain String.  First two octets are ISO/IEC 3166-1 two-character country code.  The third octet is either " " (all environments), "O" (outside) or "I" (inside).
        </description>
        <syntax>
          <string>
            <size maxLength="3"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TotalPSKFailures" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The number of times pre-shared key (PSK) authentication has failed (relevant only to WPA and 802.11i).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalIntegrityFailures" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The number of times the MICHAEL integrity check has failed (relevant only to WPA and 802.11i)
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ChannelsInUse" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Channels that the access point determines to be currently in use (including any that it is using itself).
          Ranges in the form "n-m" are permitted.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="DeviceOperationMode" access="readWrite" dmr:version="1.0">
        <description>
          The current access-point operating mode.  The OPTIONAL modes permit the AP to be configured as a wireless bridge (to bridge two wired networks), repeater (a bridge that also serves wireless clients), or wireless station. Ad hoc stations are not supported.
        </description>
        <syntax>
          <string>
            <enumeration value="InfrastructureAccessPoint"/>
            <enumeration value="WirelessBridge" optional="true"/>
            <enumeration value="WirelessRepeater" optional="true"/>
            <enumeration value="WirelessStation" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DistanceFromRoot" access="readWrite" dmr:version="1.0">
        <description>
          The number of hops from the root access point to the wireless repeater or bridge.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PeerBSSID" access="readWrite" dmr:version="1.0">
        <description>
          The MAC address of the peer in wireless repeater or bridge mode.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="AuthenticationServiceMode" access="readWrite" dmr:version="1.0">
        <description>
          Indicates whether another service is involved in client authentication ({{enum|LinkAuthentication}} for a co-located authentication server; {{enum|RadiusClient}} for an external RADIUS server).
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="LinkAuthentication" optional="true"/>
            <enumeration value="RadiusClient" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WMMSupported" access="readOnly" dmr:version="1.4">
        <description>
          Indicates whether this interface supports WiFi Multimedia (WMM) Access Categories (AC).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UAPSDSupported" access="readOnly" dmr:version="1.4">
        <description>
          Indicates whether this interface supports WMM Unscheduled Automatic Power Save Delivery (U-APSD).
          Note: U-APSD support implies WMM support.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="WMMEnable" access="readWrite" dmr:version="1.4">
        <description>
          Whether WMM support is currently enabled.  When enabled, this is indicated in beacon frames
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UAPSDEnable" access="readWrite" dmr:version="1.4">
        <description>
          Whether U-APSD support is currently enabled.  When enabled, this is indicated in beacon frames.
          Note: U-APSD can only be enabled if WMM is also enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes received on the interface, including framing characters. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets transmitted out of the interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets which were received on this interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalAssociations" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The number of devices currently associated with the access point.  This corresponds to the number of entries in the AssociatedDevice table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="TotalAssociations" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        A table of the devices currently associated with the access point.  The size of this table is given by {{param|InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.TotalAssociations}}.  This object MUST be implemented for CPE that contain an 802.11 interface on the LAN side.
      </description>
      <uniqueKey>
        <parameter ref="AssociatedDeviceMACAddress"/>
      </uniqueKey>
      <parameter name="AssociatedDeviceMACAddress" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The MAC address of an associated device.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceIPAddress" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The IP address or DNS name of an associated device.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceAuthenticationState" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Whether an associated device has authenticated ({{true}}) or not ({{false}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="LastRequestedUnicastCipher" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The unicast cipher that was most recently used for a station with a specified MAC address (802.11i only).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastRequestedMulticastCipher" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The multicast cipher that was most recently used for a station with a specified MAC address (802.11i only).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastPMKId" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The pairwise master key (PMK) that was most recently used for a station with a specified MAC address (802.11i only).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastDataTransmitRate" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The data transmit rate that was most recently used for a station with a specified MAC address.
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WEPKey.{i}." access="readOnly" minEntries="4" maxEntries="4" dmr:version="1.0">
      <description>
        This is a table of WEP keys.  The size of this table is fixed with exactly 4 entries (with instance numbers 1 through 4).  This object MUST be implemented for CPE that contain an 802.11 interface on the LAN side.
      </description>
      <parameter name="WEPKey" access="readWrite" dmr:version="1.0">
        <description>
          A WEP key expressed as a hexadecimal string. 
          The WEP encryption level for a given key is inferred from the key length, e.g. 10 characters for 40-bit encryption, or 26 characters for 104-bit encryption (keys do not all have to be of the same length, although they will be if the CPE uses {{param|InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.KeyPassphrase}} to generate them).
          If {{param|InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.KeyPassphrase}} is written, all four WEP keys are immediately generated.  The ACS SHOULD NOT set the passphrase and also set the WEP keys directly (the result of doing this is undefined).
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.{i}." access="readOnly" minEntries="10" maxEntries="10" dmr:version="1.0">
      <description>
        This is a table of preshared keys.  The size of this table is fixed with exactly 10 entries (with instance numbers 1 through 10).  This object MUST be implemented for CPE that contain an 802.11 interface on the LAN side.
      </description>
      <parameter name="PreSharedKey" access="readWrite" dmr:version="1.0">
        <description>
          A literal WPA PSK expressed as a hexadecimal string.
          The first table entry contains the default {{param}} (''InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.1.PreSharedKey'').
          If {{param|KeyPassphrase}} is written, the PSK is immediately generated.  The ACS SHOULD NOT set the passphrase and also set the PSK directly (the result of doing this is undefined).
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="KeyPassphrase" access="readWrite" dmr:version="1.0">
        <description>
          A passphrase from which the PSK is to be generated.
          The first table entry is the same as the parameter {{param|InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.KeyPassphrase}} for the same instance of WLANConfiguration.  When either parameter is changed, the value of the other is changed as well.
          If {{param}} is written, the PSK is immediately generated.  The ACS SHOULD NOT set the passphrase and also set the PSK directly (the result of doing this is undefined).
          The key is generated as specified by WPA, which uses PBKDF2 from PKCS #5: Password-based Cryptography Specification Version 2.0 (RFC 2898 {{bibref|RFC2898}}).
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="63"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceMACAddress" access="readWrite" dmr:version="1.0">
        <description>
          The MAC address associated with a preshared key, or {{empty}} if no MAC address is associated with the key.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.4">
      <description>
        This object contains statistics for an 802.11 LAN interface on a CPE device.
        Note that these statistics refer to the link layer, not to the physical layer.
        Note that this object does not include the total byte and packet statistics, which are, for historical reasons, in the parent object.
      </description>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets that could not be transmitted because of errors. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were addressed to a multicast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a multicast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were addressed to a broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.4">
      <description>
        This object contains parameters related to WPS (Wi-Fi Protected Setup) {{bibref|WPSv1.0}} that apply to a CPE acting as an Access Point.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.4">
        <description>
          Enables or disables WPS functionality for this interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="DeviceName" access="readOnly" dmr:version="1.4">
        <description>
          User-friendly description of the device.
          This parameter corresponds directly to the "Device Name" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DevicePassword" access="readWrite" dmr:version="1.4">
        <description>
          Represents the DevicePassword used (commonly known as PIN).
          This parameter corresponds directly to the "Device Password" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax hidden="true">
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UUID" access="readOnly" dmr:version="1.4">
        <description>
          UUID of the device. This is represented as specified in RFC 4122 {{bibref|RFC4122}} but omitting the leading "urn:uuid:", e.g. "f81d4fae-7dec-11d0-a765-00a0c91e6bf6".
          This parameter corresponds directly to the "UUID-E" (enrollee) and "UUID-R" (registrar) attributes of the WPS specification {{bibref|WPSv1.0}}.  Note that if the Access Point can act both as an enrollee and as a registrar then UUID-E and UUID-R will be the same as each other.
        </description>
        <syntax>
          <string>
            <size maxLength="36"/>
            <pattern value="[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="1.4">
        <description>
          The Wi-Fi Protected Setup version supported by the device.
          This parameter corresponds directly to the "Version" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsSupported" access="readOnly" dmr:version="1.4">
        <description>
          WPS configuration methods supported by the device.  {{enum}}
          This parameter corresponds directly to the "Config Methods" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="USBFlashDrive"/>
            <enumeration value="Ethernet"/>
            <enumeration value="Label"/>
            <enumeration value="Display"/>
            <enumeration value="ExternalNFCToken"/>
            <enumeration value="IntegratedNFCToken"/>
            <enumeration value="NFCInterface"/>
            <enumeration value="PushButton"/>
            <enumeration value="Keypad"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsEnabled" access="readWrite" dmr:version="1.4">
        <description>
          WPS configuration methods enabled on the device.  This parameter corresponds directly to the "Permitted Config Methods" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="ConfigMethodsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SetupLockedState" access="readOnly" dmr:version="1.4">
        <description>
          Indicates if the AP Setup mode is enabled for configuration of the AP through an external registrar. The AP Setup mode can be disabled by the user, by the remote management or in case of a brute force attack against the AP's PIN (Wrong PIN provided to AP multiple times).  {{enum}}
          This parameter corresponds directly to the "AP Setup Locked" attribute of the WPS specification {{bibref|WPSv1.0}}.  The factory default setting is {{enum|Unlocked}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Unlocked"/>
            <enumeration value="LockedByLocalManagement"/>
            <enumeration value="LockedByRemoteManagement"/>
            <enumeration value="PINRetryLimitReached"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SetupLock" access="readWrite" dmr:version="1.4">
        <description>
          When set to {{true}}, the Access Point will refuse to accept new external registrars; already established registrars will continue to be able to add new enrollees (the {{param|SetupLockedState}} becomes {{enum|LockedByRemoteManagement|SetupLockedState}}).
          When set to {{false}}, the Access Point is enabled for configuration through an external registrar (the {{param|SetupLockedState}} becomes {{enum|Unlocked|SetupLockedState}}).
          The factory default setting is {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ConfigurationState" access="readOnly" dmr:version="1.4">
        <description>
          Description of the WPS status on the Wireless Access Point side.  {{enum}}
          This parameter corresponds directly to the "Wi-Fi Protected Setup State" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Not configured">
              <description>
                WLAN interface is unconfigured: out-of-the box configuration
              </description>
            </enumeration>
            <enumeration value="Configured">
              <description>
                WLAN interface is configured
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastConfigurationError" access="readOnly" dmr:version="1.4">
        <description>
          Shows the result of the last external registrar attempt to configure the Access Point.  {{enum}}
          If no external registrar has yet attempted to configure the Access Point, this parameter MUST have the value {{enum|NoError}}.  The value of this parameter MUST persist across CPE reboots.
          This parameter corresponds directly to the "Configuration Error" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <enumeration value="NoError"/>
            <enumeration value="DecryptionCRCFailure"/>
            <enumeration value="SignalTooWeak"/>
            <enumeration value="CouldntConnectToRegistrar"/>
            <enumeration value="RogueActivitySuspected"/>
            <enumeration value="DeviceBusy"/>
            <enumeration value="SetupLocked"/>
            <enumeration value="MessageTimeout"/>
            <enumeration value="RegistrationSessionTimeout"/>
            <enumeration value="DevicePasswordAuthFailure"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RegistrarNumberOfEntries" access="readOnly" dmr:version="1.4">
        <description>
          Number of entries in the Registrar table: number of Registrars that currently have an association with the Access Point.
          This parameter corresponds directly to the "Registrar Current" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RegistrarEstablished" access="readOnly" dmr:version="1.4">
        <description>
          {{true}} if the Access Point has ever previously created an association with a Registrar.
          This parameter corresponds directly to the "Registrar Established" attribute of the WPS specification {{bibref|WPSv1.0}}.  The factory default setting is {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS.Registrar.{i}." access="readOnly" numEntriesParameter="RegistrarNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.4">
      <description>
        This table lists the Registrars associated with the Access Point.
        This table MUST persist across CPE reboots.  The registrar UUID is the unique key.
        This object corresponds directly to the "Registrar List" attribute of the WPS specification {{bibref|WPSv1.0}}.
      </description>
      <uniqueKey>
        <parameter ref="UUID"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.4">
        <description>
          If {{true}}, the registrar can be used by the Access Point for WPS procedures.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UUID" access="readOnly" dmr:version="1.4">
        <description>
          UUID of the registrar. This is represented as specified in RFC 4122 {{bibref|RFC4122}} but omitting the leading "urn:uuid:", e.g. ''f81d4fae-7dec-11d0-a765-00a0c91e6bf6''.
          This parameter corresponds directly to the "UUID-R" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <size maxLength="36"/>
            <pattern value="[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DeviceName" access="readOnly" dmr:version="1.4">
        <description>
          Device Name of the registrar.
          This parameter corresponds directly to the "Device Name" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.APWMMParameter.{i}." access="readOnly" minEntries="4" maxEntries="4" dmr:version="1.4">
      <description>
        This is a table of WMM parameters for traffic that originates at the wireless access point, i.e. for outgoing traffic.  The size of this table is fixed, with 4 entries (with instance numbers 1 through 4).  Instance numbers MUST be assigned as follows:
        # BE AC (Best Effort)
        # BK AC (Background)
        # VI AC (Video)
        # VO AC (Voice)
      </description>
      <parameter name="AIFSN" access="readWrite" dmr:version="1.4">
        <description>
          Arbitration Inter Frame Spacing (Number).  This is the number of time slots in the arbitration interframe space.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="2" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMin" access="readWrite" dmr:version="1.4">
        <description>
          Exponent of Contention Window (Minimum). This encodes the Values of CWMin as an exponent: CWMin = 2^ECWMin - 1.
          For example, if ECWMin is 8, then CWMin is 2^8 - 1, or 255,
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMax" access="readWrite" dmr:version="1.4">
        <description>
          Exponent of Contention Window (Maximum). This encodes the Values of CWMax as an exponent: CWMax = 2^ECWMax - 1.
          For example, if ECWMax is 8, then CWMax is 2^8 - 1, or 255,
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TXOP" access="readWrite" dmr:version="1.4">
        <description>
          Transmit Opportunity, in multiples of 32 microseconds.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AckPolicy" access="readWrite" dmr:version="1.4">
        <description>
          Ack Policy, where {{false}}=''Do Not Acknowledge'' and {{true}}=''Acknowledge''.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.STAWMMParameter.{i}." access="readOnly" minEntries="4" maxEntries="4" dmr:version="1.4">
      <description>
        This is a table of WMM parameters for traffic that originates at the wireless station, i.e. for incoming traffic.  The size of this table is fixed, with 4 entries (with instance numbers 1 through 4).  Instance numbers MUST be assigned as follows:
        # BE AC (Best Effort)
        # BK AC (Background)
        # VI AC (Video)
        # VO AC (Voice)
      </description>
      <parameter name="AIFSN" access="readWrite" dmr:version="1.4">
        <description>
          Arbitration Inter Frame Spacing (Number).  This is the number of time slots in the arbitration interframe space.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="2" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMin" access="readWrite" dmr:version="1.4">
        <description>
          Exponent of Contention Window (Minimum). This encodes the Values of CWMin as an exponent: CWMin = 2^ECWMin - 1.
          For example, if ECWMin is 8, then CWMin is 2^8 - 1, or 255,
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMax" access="readWrite" dmr:version="1.4">
        <description>
          Exponent of Contention Window (Maximum). This encodes the Values of CWMax as an exponent: CWMax = 2^ECWMax - 1.
          For example, if ECWMax is 8, then CWMax is 2^8 - 1, or 255,
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TXOP" access="readWrite" dmr:version="1.4">
        <description>
          Transmit Opportunity, in multiples of 32 microseconds.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AckPolicy" access="readWrite" dmr:version="1.4">
        <description>
          Ack Policy, where {{false}}=''Do Not Acknowledge'' and {{true}}=''Acknowledge''.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.Hosts." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object provides information about each of the hosts on the LAN, including those whose IP address was allocated by the CPE using DHCP as well as hosts with statically allocated IP addresses.
      </description>
      <parameter name="HostNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of entries in the {{object|Host}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.Hosts.Host.{i}." access="readOnly" numEntriesParameter="HostNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        Host table.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="IPAddress" access="readOnly" dmr:version="1.0">
        <description>
          Current IP Address of the host.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="AddressSource" access="readOnly" dmr:version="1.0">
        <description>
          Indicates whether the IP address of the host was allocated by the CPE using DHCP, was assigned to the host statically, or was assigned using automatic IP address allocation.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP"/>
            <enumeration value="Static"/>
            <enumeration value="AutoIP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LeaseTimeRemaining" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          DHCP lease time remaining in seconds.  A value of -1 indicates an infinite lease.  The value MUST be 0 (zero) if the {{param|AddressSource}} is not {{enum|DHCP|AddressSource}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="1.0">
        <description>
          MAC address of the host.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Layer2Interface" access="readOnly" dmr:version="1.4">
        <description>
          This parameter is the full hierarchical parameter name of a particular ''LAN**InterfaceConfig'' object or a ''WLANConfiguration'' object.  For example: ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2''.
          In the case of an embedded Ethernet switch, the {{param}} parameter references the ''LANEthernetInterfaceConfig'' object that corresponds to the switch port the device is connected to (a ''LANEthernetInterfaceConfig'' instance for each switch port).
          In the case of an embedded WLAN access point, the {{param}} parameter references the ''WLANConfiguration'' object that corresponds to the SSID the device is connected to (if the access point supports multiple SSIDs, then each SSID is a separate instance).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readOnly" dmr:version="1.4">
        <description>
          Vendor Class Identifier DHCP option (Option 60) of the host.
          It MAY be defined when ''AddressSource'' is ''DHCP''. {{empty}} indicates this option is not used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readOnly" dmr:version="1.4">
        <description>
          Client Identifier DHCP option (Option 61) for the specific IP connection of the client.  The option value is binary, so an exact match is REQUIRED.
          It MAY be defined when ''AddressSource'' is ''DHCP''. {{empty}} indicates this option is not used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readOnly" dmr:version="1.4">
        <description>
          User Class Identifier DHCP option (Option 77) of the host.
          It MAY be defined when ''AddressSource'' is ''DHCP''. {{empty}} indicates this option is not used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostName" access="readOnly" dmr:version="1.0">
        <description>
          The device's host name or {{empty}} if unknown.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceType" access="readOnly" dmr:version="1.0">
        <description>
          Type of physical interface through which this host is connected to the CPE.
        </description>
        <syntax>
          <string>
            <enumeration value="Ethernet"/>
            <enumeration value="USB"/>
            <enumeration value="802.11"/>
            <enumeration value="HomePNA"/>
            <enumeration value="HomePlug"/>
            <enumeration value="MoCA"/>
            <enumeration value="Other"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="1.0">
        <description>
          Whether or not the host is currently present on the LAN.  The method of presence detection is a local matter to the CPE.
          The ability to list inactive hosts is OPTIONAL.  If the CPE includes inactive hosts in this table, this variable MUST be set to {{false}} for each inactive host.  The length of time an inactive host remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANCommonInterfaceConfig." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object models WAN interface properties common across all connection instances.
      </description>
      <parameter name="EnabledForInternet" access="readWrite" dmr:version="1.0">
        <description>
          Used to enable or disable access to and from the Internet across all connection instances.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="WANAccessType" access="readOnly" dmr:version="1.0">
        <description>
          Specifies the WAN access (modem) type.
        </description>
        <syntax>
          <string>
            <enumeration value="DSL"/>
            <enumeration value="Ethernet"/>
            <enumeration value="POTS"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Layer1UpstreamMaxBitRate" access="readOnly" dmr:version="1.0">
        <description>
          Specifies the maximum upstream theoretical bit rate for the WAN device in bits per second.  This describes the maximum possible rate given the type of interface assuming the best-case operating environment, regardless of the current operating rate.
          For example, if the physical interface is 100BaseT, this value would be 100000000, regardless of the current operating rate.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Layer1DownstreamMaxBitRate" access="readOnly" dmr:version="1.0">
        <description>
          Specifies the maximum downstream theoretical bit rate for the WAN device in bits per second.  This describes the maximum possible rate given the type of interface assuming the best-case operating environment, regardless of the current operating rate.
          For example, if the physical interface is 100BaseT, this value would be 100000000, regardless of the current operating rate.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PhysicalLinkStatus" access="readOnly" dmr:version="1.0">
        <description>
          Indicates the state of the physical connection (link) from WANDevice to a connected entity.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Initializing"/>
            <enumeration value="Unavailable"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WANAccessProvider" access="readOnly" dmr:version="1.0">
        <description>
          Name of the Service Provider providing link connectivity on the WAN.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The cumulative counter for total number of bytes sent upstream across all connection service instances on the WAN device.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The cumulative counter for total number of bytes received downstream across all connection service instances on the WAN device.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The cumulative counter for total number of packets (IP or PPP) sent upstream across all connection service instances on the WAN device.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The cumulative counter for total number of packets (IP or PPP) received downstream across all connection service instances on the WAN device.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig." access="readOnly" minEntries="0" maxEntries="1" dmr:version="1.0">
      <description>
        This object models physical layer properties specific to a single physical connection of a DSL modem used for Internet access on a CPE.  This object is required for a CPE with a DSL modem WAN interface, and is exclusive of any other ''WAN*InterfaceConfig'' object within a given ''WANDevice'' instance.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the link.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.0">
        <description>
          Status of the DSL physical link.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Initializing"/>
            <enumeration value="EstablishingLink"/>
            <enumeration value="NoSignal"/>
            <enumeration value="Error" optional="true"/>
            <enumeration value="Disabled"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkEncapsulationSupported" access="readOnly" dmr:version="1.4">
        <description>
          Indicates which link encapsulation standards and recommendations are supported by the B-NT.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="G.992.3_Annex_K_ATM"/>
            <enumeration value="G.992.3_Annex_K_PTM"/>
            <enumeration value="G.993.2_Annex_K_ATM"/>
            <enumeration value="G.993.2_Annex_K_PTM"/>
            <enumeration value="G.994.1">
              <description>
                Auto
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkEncapsulationRequested" access="readWrite" dmr:version="1.4">
        <description>
          Indicates the link encapsulation standard requested by the B-NT.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="LinkEncapsulationSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkEncapsulationUsed" access="readOnly" dmr:version="1.4">
        <description>
          Indicates the link encapsulation standard that the B-NT is using for the connection.  {{enum}}
          When the standard identifies ATM encapsulation then the {{object|InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig}} object MUST be used.
          When the standard identifies PTM encapsulation then the {{object|InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig}} object MUST be used.
        </description>
        <syntax>
          <string>
            <enumeration value="G.992.3_Annex_K_ATM"/>
            <enumeration value="G.992.3_Annex_K_PTM"/>
            <enumeration value="G.993.2_Annex_K_ATM"/>
            <enumeration value="G.993.2_Annex_K_PTM"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModulationType" access="readOnly" status="deprecated" dmr:version="1.0">
        <description>
          Indicates the type of modulation used on the connection.  {{enum}}
          This parameter, which was inherited from WANDSLLinkConfig, is DEPRECATED because it is in general not clear which standards correspond to which of the the above enumerated values.
          It is RECOMMENDED that the {{param|StandardUsed}} parameter be used to indicate which standard is in use.
        </description>
        <syntax>
          <string>
            <enumeration value="ADSL_G.dmt"/>
            <enumeration value="ADSL_G.lite"/>
            <enumeration value="ADSL_G.dmt.bis"/>
            <enumeration value="ADSL_re-adsl"/>
            <enumeration value="ADSL_2plus"/>
            <enumeration value="ADLS_four"/>
            <enumeration value="ADSL_ANSI_T1.413"/>
            <enumeration value="G.shdsl"/>
            <enumeration value="IDSL"/>
            <enumeration value="HDSL"/>
            <enumeration value="SDSL"/>
            <enumeration value="VDSL"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="StandardsSupported" access="readOnly" dmr:version="1.4">
        <description>
          Indicates which DSL standards and recommendations are supported by the B-NT.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="G.992.1_Annex_A"/>
            <enumeration value="G.992.1_Annex_B"/>
            <enumeration value="G.992.1_Annex_C"/>
            <enumeration value="T1.413"/>
            <enumeration value="T1.413i2"/>
            <enumeration value="ETSI_101_388"/>
            <enumeration value="G.992.2"/>
            <enumeration value="G.992.3_Annex_A"/>
            <enumeration value="G.992.3_Annex_B"/>
            <enumeration value="G.992.3_Annex_C"/>
            <enumeration value="G.992.3_Annex_I"/>
            <enumeration value="G.992.3_Annex_J"/>
            <enumeration value="G.992.3_Annex_L"/>
            <enumeration value="G.992.3_Annex_M"/>
            <enumeration value="G.992.4"/>
            <enumeration value="G.992.5_Annex_A"/>
            <enumeration value="G.992.5_Annex_B"/>
            <enumeration value="G.992.5_Annex_C"/>
            <enumeration value="G.992.5_Annex_I"/>
            <enumeration value="G.992.5_Annex_J"/>
            <enumeration value="G.992.5_Annex_M"/>
            <enumeration value="G.993.1"/>
            <enumeration value="G.993.1_Annex_A"/>
            <enumeration value="G.993.2_Annex_A"/>
            <enumeration value="G.993.2_Annex_B"/>
            <enumeration value="G.993.2_Annex_C"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="StandardUsed" access="readOnly" dmr:version="1.4">
        <description>
          Indicates the standard that the B-NT is using for the connection.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="StandardsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LineEncoding" access="readOnly" dmr:version="1.0">
        <description>
          The line encoding method used in establishing the Layer 1 DSL connection between the CPE and the DSLAM.  Note: Generally speaking, this variable does not change after provisioning.
        </description>
        <syntax>
          <string>
            <enumeration value="DMT"/>
            <enumeration value="CAP"/>
            <enumeration value="2B1Q"/>
            <enumeration value="43BT"/>
            <enumeration value="PAM"/>
            <enumeration value="QAM"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AllowedProfiles" access="readOnly" dmr:version="1.4">
        <description>
          Indicates which VDSL2 profiles are allowed on the line.  {{enum}}
          Note:  In G.997.1, this parameter is called PROFILES.  See ITU-T Recommendation G.997.1.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be {{empty}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="8a"/>
            <enumeration value="8b"/>
            <enumeration value="8c"/>
            <enumeration value="8d"/>
            <enumeration value="12a"/>
            <enumeration value="12b"/>
            <enumeration value="17a"/>
            <enumeration value="17b"/>
            <enumeration value="30a"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentProfile" access="readOnly" dmr:version="1.4">
        <description>
          Indicates which VDSL2 profile is currently in use on the line.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="AllowedProfiles" nullValue=""/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PowerManagementState" access="readOnly" dmr:version="1.4">
        <description>
          The power management state of the line.
        </description>
        <syntax>
          <string>
            <enumeration value="L0"/>
            <enumeration value="L1"/>
            <enumeration value="L3"/>
            <enumeration value="L4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SuccessFailureCause" access="readOnly" dmr:version="1.4">
        <description>
          The success failure cause of the initialization. An enumeration of the following integer values:
          * 0: Successful
          * 1: Configuration error.  This error occurs with inconsistencies in configuration parameters, e.g. when the line is initialized in an xDSL Transmission system where an xTU does not support the configured Maximum Delay or the configured Minimum or Maximum Data Rate for one or more bearer channels.
          * 2: Configuration not feasible on the line.  This error occurs if the Minimum Data Rate cannot be reached on the line with the Minimum Noise Margin, Maximum PSD level, Maximum Delay and Maximum Bit Error Ratio for one or more bearer channels.
          * 3: Communication problem.  This error occurs, for example, due to corrupted messages or bad syntax messages or if no common mode can be selected in the G.994.1 handshaking procedure or due to a timeout..
          * 4: No peer xTU detected.  This error occurs if the peer xTU is not powered or not connected or if the line is too long to allow detection of a peer xTU.
          * 5: Any other or unknown Initialization Failure cause.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="5"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastStateTransmittedDownstream" access="readOnly" dmr:version="1.4">
        <description>
          This parameter represents the last successful transmitted initialization state in the downstream direction in the last full initialization performed on the line.  Initialization states are defined in the individual xDSL Recommendations and are counted from 0 (if G.994.1 is used) or 1 (if G.994.1 is not used) up to Showtime.  This parameter needs to be interpreted along with the xDSL Transmission System.
          This parameter is available only when, after a failed full initialization, the line diagnostics procedures are activated on the line.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastStateTransmittedUpstream" access="readOnly" dmr:version="1.4">
        <description>
          This parameter represents the last successful transmitted initialization state in the upstream direction in the last full initialization performed on the line.  Initialization states are defined in the individual xDSL Recommendations and are counted from 0 (if G.994.1 is used) or 1 (if G.994.1 is not used) up to Showtime.  This parameter needs to be interpreted along with the xDSL Transmission System.
          This parameter is available only when, after a failed full initialization, the line diagnostics procedures are activated on the line.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPBOKLE" access="readOnly" dmr:version="1.4">
        <description>
          This parameter contains the estimated electrical loop length expressed in dB at 1MHz, kle (see O-UPDATE in section 12.2.4.2.1.2/G.993.2).  The value SHALL be coded as an unsigned 16 bit number in the range 0 (coded as 0) to 128 dB (coded as 1280) in steps of 0.1 dB.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1280"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MREFPSDds" access="readOnly" dmr:version="1.4">
        <description>
          This parameter SHALL contain the set of breakpoints exchanged in the MREFPSDds fields of the O-PRM message of G.993.2. Base64 encoded of the binary representation defined in Table 12-19/G.993.2 (maximum length is 145 octets, which requires 196 bytes for Base64 encoding).
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="145"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="MREFPSDus" access="readOnly" dmr:version="1.4">
        <description>
          This parameter SHALL contain the set of breakpoints exchanged in the MREFPSDus fields of the R-PRM message of G.993.2. Base64 encoded of the binary representation defined in Table 12-19/G.993.2 (maximum length is 145 octets, which requires 196 bytes for Base64 encoding).
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="145"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="LIMITMASK" access="readOnly" dmr:version="1.4">
        <description>
          Indicates the enabled VDSL2 Limit PSD mask of the selected PSD mask class.  Bit mask as specified in ITU-T Recommendation G.997.1.
          Note:  For a VDSL2-capable multimode device operating in a mode other than VDSL2, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="US0MASK" access="readOnly" dmr:version="1.4">
        <description>
          Indicates the allowed VDSL2 US0 PSD masks for Annex A operation.  Bit mask as specified in see ITU-T Recommendation G.997.1.
          Note:  For a VDSL2-capable multimode device operating in a mode other than VDSL2, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DataPath" access="readOnly" dmr:version="1.0">
        <description>
          Indicates whether the data path is fast (lower latency) or interleaved (lower error rate).  {{enum}}
          Note1:  This parameter is only applicable to G.992.1.
          Note2:  For an ADSL1-capable multimode device operating in a mode other than ADSL1, the value of this parameter SHOULD be set to {{enum|None}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Interleaved"/>
            <enumeration value="Fast"/>
            <enumeration value="None"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterleaveDepth" access="readOnly" dmr:version="1.0">
        <description>
          ADSL1 Interleaved depth.  This variable is only applicable to ADSL1 and only if {{param|DataPath}} = {{enum|Interleaved|DataPath}}.  Otherwise, the value of this parameter MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LPATH" access="readOnly" dmr:version="1.4">
        <description>
          Reports the index of the latency path supporting the bearer channel.  For single-latency connections, LPATH = 0.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="INTLVDEPTH" access="readOnly" dmr:version="1.4">
        <description>
          Reports the interleaver depth D for the latency path indicated in LPATH. 
          Note:  See ITU-T Recommendation G.997.1.  For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="INTLVBLOCK" access="readOnly" dmr:version="1.4">
        <description>
          Reports the interleaver block length in use on the latency path indicated in LPATH.  
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ActualInterleavingDelay" access="readOnly" dmr:version="1.4">
        <description>
          Reports the actual delay, in milliseconds, of the latency path due to interleaving. 
          Note:  In G.997.1, this parameter is called "Actual Interleaving Delay." See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ACTINP" access="readOnly" dmr:version="1.4">
        <description>
          Reports the actual impulse noise protection (INP) provided by the latency path indicated in LPATH.  The value is the actual INP in the L0 (i.e., Showtime) state.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="INPREPORT" access="readOnly" dmr:version="1.4">
        <description>
          Reports whether the value reported in ACTINP was computed assuming the receiver does not use erasure decoding.  Valid values are 0 (computed per the formula assuming no erasure decoding) and 1 (computed by taking into account erasure decoding capabilities of receiver).
          Note:  See ITU-T Recommendation G.997.1.  For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NFEC" access="readOnly" dmr:version="1.4">
        <description>
          Reports the size, in octets, of the Reed-Solomon codeword in use on the latency path indicated in LPATH.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="RFEC" access="readOnly" dmr:version="1.4">
        <description>
          Reports the number of redundancy bytes per Reed-Solomon codeword on the latency path indicated in LPATH.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="LSYMB" access="readOnly" dmr:version="1.4">
        <description>
          Reports the number of bits per symbol assigned to the latency path indicated in LPATH.  This value does not include overhead due to trellis coding.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="TRELLISds" access="readOnly" dmr:version="1.4">
        <description>
          Reports whether trellis coding is enabled in the downstream direction.  A value of 1 indicates that trellis coding is in use, and a value of 0 indicates that the trellis is disabled.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="TRELLISus" access="readOnly" dmr:version="1.4">
        <description>
          Reports whether trellis coding is enabled in the upstream direction.  A value of 1 indicates that trellis coding is in use, and a value of 0 indicates that the trellis is disabled.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTSNRMODEds" access="readOnly" dmr:version="1.4">
        <description>
          Reports whether the OPTIONAL virtual noise mechanism is in use in the downstream direction.  A value of 1 indicates the virtual noise mechanism is not in use, and a value of 2 indicates the virtual noise mechanism is in use.  
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ACTSNRMODEus" access="readOnly" dmr:version="1.4">
        <description>
          Reports whether the OPTIONAL virtual noise mechanism is in use in the upstream direction.  A value of 1 indicates the virtual noise mechanism is not in use, and a value of 2 indicates the virtual noise mechanism is in use. 
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VirtualNoisePSDds" access="readOnly" dmr:version="1.4">
        <description>
          Reports the virtual noise PSD for the downstream direction. Base64 encoded of the binary representation defined in G.997.1 by the parameter called TXREFVNds (maximum length is 97 octets, which requires 132 bytes for Base64 encoding).
          See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to {{empty}}.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="97"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="VirtualNoisePSDus" access="readOnly" dmr:version="1.4">
        <description>
          Reports the virtual noise PSD for the upstream direction. Base64 encoded of the binary representation defined in G.997.1by the parameter called TXREFVNus (maximum length is 49 octets, which requires 68 bytes for Base64 encoding).
          See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to {{empty}}.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="49"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="ACTUALCE" access="readOnly" dmr:version="1.4">
        <description>
          Reports the actual cyclic extension, as the value of m, in use for the connection.  
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 99.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LineNumber" access="readOnly" dmr:version="1.0">
        <description>
          Signifies the line pair that the modem is using to connection.  {{param}} = 1 is the innermost pair.
        </description>
        <syntax>
          <int>
            <range minInclusive="1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="UpstreamCurrRate" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current physical layer aggregate data rate (expressed in Kbps) of the upstream DSL connection.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DownstreamCurrRate" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current physical layer aggregate data rate (expressed in Kbps) of the downstream DSL connection.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UpstreamMaxRate" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current attainable rate (expressed in Kbps) of the upstream DSL channel.
          Note:  This parameter is related to the G.997.1 parameter ATTNDRus, which is measured in bits/s.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DownstreamMaxRate" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current attainable rate (expressed in Kbps) of the downstream DSL channel.
          Note:  This parameter is related to the G.997.1 parameter ATTNDRds, which is measured in bits/s.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UpstreamNoiseMargin" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current signal-to-noise ratio margin (expressed in 0.1 dB) in the upstream direction.
          Note:  In G.997.1, this parameter is called SNRMus.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="DownstreamNoiseMargin" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current signal-to-noise ratio margin (expressed in 0.1 dB) in the downstream direction.
          Note:  In G.997.1, this parameter is called SNRMds.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="SNRMpbus" access="readOnly" dmr:version="1.4">
        <description>
          The current signal-to-noise ratio margin of each upstream band.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMpbds" access="readOnly" dmr:version="1.4">
        <description>
          The current signal-to-noise ratio margin of each band.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="INMIATOds" access="readOnly" dmr:version="1.4">
        <description>
          The Impulse Noise Monitoring (INM) Inter Arrival Time (IAT) Offset, measured in DMT symbols, that the xTU receiver uses to determine in which bin of the IAT histogram the IAT is reported.
          Note:  In G.997.1, this parameter is called INMIATO.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="3" maxInclusive="511"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INMIATSds" access="readOnly" dmr:version="1.4">
        <description>
          The Impulse Noise Monitoring (INM)  Inter Arrival Time (IAT) Step that the xTU receiver uses to determine in which bin of the IAT histogram the IAT is reported.
          Note:  In G.997.1, this parameter is called INMIATS.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INMCCds" access="readOnly" dmr:version="1.4">
        <description>
          The Impulse Noise Monitoring (INM) Cluster Continuation value, measured in DMT symbols, that the xTU receiver uses in the cluster indication process.
          Note:  In G.997.1, this parameter is called INMCC.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="64"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INMINPEQMODEds" access="readOnly" dmr:version="1.4">
        <description>
          The Impulse Noise Monitoring (INM) Equivalent Impulse Noise Protection (INP) Mode that the xTU receiver uses in the computation of the Equivalent INP.
          Note:  In G.997.1, this parameter is called INM_INPEQ_MODE.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="3"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UpstreamAttenuation" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current upstream signal loss (expressed in 0.1 dB).
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="DownstreamAttenuation" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current downstream signal loss (expressed in 0.1 dB).
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="UpstreamPower" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current output power at the CPE's DSL interface (expressed in 0.1 dBmV).
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="DownstreamPower" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current received power at the CPE's DSL interface (expressed in 0.1 dBmV).
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ATURVendor" access="readOnly" dmr:version="1.0">
        <description>
          ATU-R vendor identifier as defined in G.994.1 and T1.413.  In the case of G.994.1 this corresponds to the four-octet provider code, which MUST be represented as eight hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value "00000000".
        </description>
        <syntax>
          <string>
            <size maxLength="8"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATURCountry" access="readOnly" dmr:version="1.0">
        <description>
          T.35 country code of the ATU-R vendor as defined in G.994.1, where the two-octet value defined in G.994.1 MUST be represented as four hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value "0000".
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATURANSIStd" access="readOnly" dmr:version="1.0">
        <description>
          ATU-R T1.413 Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATURANSIRev" access="readOnly" dmr:version="1.0">
        <description>
          ATU-R Vendor Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCVendor" access="readOnly" dmr:version="1.0">
        <description>
          ATU-C vendor identifier as defined in G.994.1 and T1.413.  In the case of G.994.1 this corresponds to the four-octet provider code, which MUST be represented as eight hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value "00000000".
        </description>
        <syntax>
          <string>
            <size maxLength="8"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATUCCountry" access="readOnly" dmr:version="1.0">
        <description>
          T.35 country code of the ATU-C vendor as defined in G.994.1, where the two-octet value defined in G.994.1 MUST be represented as four hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value "0000".
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATUCANSIStd" access="readOnly" dmr:version="1.0">
        <description>
          ATU-C T1.413 Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCANSIRev" access="readOnly" dmr:version="1.0">
        <description>
          ATU-C Vendor Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalStart" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of seconds since the beginning of the period used for collection of ''Total'' statistics.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ShowtimeStart" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of seconds since the most recent DSL Showtime - the beginning of the period used for collection of ''Showtime'' statistics.
          Showtime is defined as successful completion of the DSL link establishment process.  The ''Showtime'' statistics are those collected since the most recent establishment of the DSL link.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastShowtimeStart" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of seconds since the second most recent DSL Showtime-the beginning of the period used for collection of ''LastShowtime'' statistics.
          If the CPE has not retained information about the second most recent Showtime (e.g., on reboot), the start of ''LastShowtime'' statistics MAY temporarily coincide with the start of ''Showtime'' statistics.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CurrentDayStart" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of seconds since the beginning of the period used for collection of ''CurrentDay'' statistics.
          The CPE MAY align the beginning of each CurrentDay interval with days in the UTC time zone, but does not have to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QuarterHourStart" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of seconds since the beginning of the period used for collection of ''QuarterHour'' statistics.
          The CPE MAY align the beginning of each QuarterHour interval with real-time quarter-hour intervals, but does not have to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains statistics for a WAN DSL physical interface.
      </description>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Total." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains DSL total statistics.
      </description>
      <parameter name="ReceiveBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of successfully received blocks, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TransmitBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of successfully transmitted blocks, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellDelin" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of cell-delineation errors (total seconds with NCD or LCD failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkRetrain" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of link-retrain errors (Full Initialization Count as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InitErrors" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of initialization errors (LINIT failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LInit" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          LInit is a flag to signal that a failure occurred as defined in G.997.1.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InitTimeouts" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of initialization timeout errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LossOfFraming" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of loss-of-framing errors (LOF failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOF" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          This parameter corresponds to LOF as defined in ITU-T Rec. G.997.1. LOF is a flag to signal that a failure occurred.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of errored seconds (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Total number of errored seconds detected by the ATU-C (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of severely errored seconds (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCSeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Total number of severely errored seconds detected by the ATU-C (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of FEC errors detected (FEC-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of FEC errors detected by the ATU-C (FEC-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of HEC errors detected (HEC-P as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of HEC errors detected by the ATU-C (HEC-PFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of CRC errors detected (CV-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of CRC errors detected by the ATU-C (CV-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Showtime." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains DSL statistics accumulated since the most recent DSL Showtime.
      </description>
      <parameter name="ReceiveBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of successfully received blocks since the most recent DSL Showtime, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TransmitBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of successfully transmitted blocks since the most recent DSL Showtime, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellDelin" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of cell-delineation errors since the most recent DSL Showtime (total seconds with NCD or LCD failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkRetrain" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of link-retrain errors since the most recent DSL Showtime (Full Initialization Count as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InitErrors" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of initialization errors since the most recent DSL Showtime (LINIT failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LInit" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          LInit is a flag to signal that a failure occurred as defined in G.997.1.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InitTimeouts" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of initialization timeout errors since the most recent DSL Showtime.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LossOfFraming" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of loss-of-framing errors since the most recent DSL Showtime (LOF failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOF" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          This parameter corresponds to LOF as defined in ITU-T Rec. G.997.1. LOF is a flag to signal that a failure occurred.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of errored seconds since the most recent DSL Showtime (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of errored seconds since the most recent DSL Showtime detected by the ATU-C (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of severely errored seconds since the most recent DSL Showtime (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCSeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of severely errored seconds since the most recent DSL Showtime detected by the ATU-C (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of FEC errors detected since the most recent DSL Showtime (FEC-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of FEC errors detected by the ATU-C since the most recent DSL Showtime (FEC-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of HEC errors detected since the most recent DSL Showtime (HEC-P as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of HEC errors detected by the ATU-C since the most recent DSL Showtime (HEC-PFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of CRC errors detected since the most recent DSL Showtime (CV-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of CRC errors detected by the ATU-C since the most recent DSL Showtime (CV-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.LastShowtime." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains DSL statistics accumulated since the second most recent DSL Showtime.
      </description>
      <parameter name="ReceiveBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of successfully received blocks since the second most recent DSL Showtime, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TransmitBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of successfully transmitted blocks since the second most recent DSL Showtime, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellDelin" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of cell-delineation errors since the second most recent DSL Showtime (total seconds with NCD or LCD failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkRetrain" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of link-retrain errors since the second most recent DSL Showtime (Full Initialization Count as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InitErrors" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of initialization errors since the second most recent DSL Showtime (LINIT failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LInit" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          LInit is a flag to signal that a failure occurred as defined in G.997.1.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InitTimeouts" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of initialization timeout errors since the second most recent DSL Showtime.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LossOfFraming" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of loss-of-framing errors since the second most recent DSL Showtime (LOF failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOF" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          This parameter corresponds to LOF as defined in ITU-T Rec. G.997.1. LOF is a flag to signal that a failure occurred.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of errored seconds since the second most recent DSL Showtime (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of errored seconds since the second most recent DSL Showtime detected by the ATU-C (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of severely errored seconds since the second most recent DSL Showtime (SES-L as defined in ITU-T Rec. G.997.1). 
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCSeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of severely errored seconds since the second most recent DSL Showtime detected by the ATU-C (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of FEC errors detected since the second most recent DSL Showtime (FEC-C as defined in ITU-T Rec. G.997.1). 
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of FEC errors detected by the ATU-C since the second most recent DSL Showtime (FEC-CFE as defined in ITU-T Rec. G.997.1). 
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of HEC errors detected since the second most recent DSL Showtime (HEC-P as defined in ITU-T Rec. G.997.1). 
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of HEC errors detected by the ATU-C since the second most recent DSL Showtime (HEC-PFE as defined in ITU-T Rec. G.997.1). 
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of CRC errors detected since the second most recent DSL Showtime (CV-C as defined in ITU-T Rec. G.997.1). 
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Number of CRC errors detected by the ATU-C since the second most recent DSL Showtime (CV-CFE as defined in ITU-T Rec. G.997.1). 
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.TestParams." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.4">
      <description>
        This object contains the DSL test parameters that are available during the L0 (i.e., Showtime) state.
      </description>
      <parameter name="HLOGGds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLOGpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGGus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|HLOGpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Downstream logarithmic channel characteristics per sub-carrier group.  The maximum number of elements is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''. 
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream logarithmic channel characteristics per sub-carrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNGds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|QLNpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNGus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|QLNpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNpsds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Downstream quiet line noise per subcarrier group.  The maximum number of elements is 256 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter should be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="QLNpsus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream quiet line noise per subcarrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter should be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="QLNMTds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|QLNpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNMTus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|QLNpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|SNRpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|SNRpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRpsds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Downstream SNR per subcarrier group.  The maximum number of elements is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter should be set to ''None''.   
          Note: {{param}} is first measured during initialization and is updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="SNRpsus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream SNR per subcarrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter should be set to ''None''.   
          Note: {{param}} is first measured during initialization and is updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMTds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|SNRpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRMTus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|SNRpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LATNds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Downstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2. Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="LATNus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of upstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Downstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig." access="readOnly" minEntries="0" maxEntries="1" dmr:version="1.0">
      <description>
        This object models physical layer properties specific to a single Ethernet physical connection used for Internet access on a CPE.  This object is required for a CPE with an Ethernet WAN interface, and is exclusive of any other ''WAN*InterfaceConfig'' object within a given ''WANDevice'' instance.  Note that this object is not related to the Ethernet protocol layer sometimes used in associated with a DSL connection.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables this interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.0">
        <description>
          Indicates the status of this interface.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="NoLink"/>
            <enumeration value="Error" optional="true"/>
            <enumeration value="Disabled"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="1.0">
        <description>
          The physical address of the interface.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readWrite" dmr:version="1.0">
        <description>
          The maximum upstream and downstream bit rate available to this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="10"/>
            <enumeration value="100"/>
            <enumeration value="Auto" status="deleted"/>
            <enumeration value="1000"/>
            <enumeration value="10000"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DuplexMode" access="readWrite" dmr:version="1.0">
        <description>
          The duplex mode available to this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Half"/>
            <enumeration value="Full"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" dmr:version="1.4">
        <description>
          Rate to shape this connection's egress traffic to.  For leaky bucket (constant rate shaping), this is the constant rate.  For token bucket (variable rate shaping), this is the average rate.
          If &lt;= 100, in percent of the rate of the highest rate-constrained layer over which the packet will travel on egress.
          If &gt; 100, in bits per second.
          A value of -1 indicates no shaping.
          For example, for packets destined for a WAN DSL interface, if the ATM layer is rate-constrained, then the rate is calculated relative to this rate.  Otherwise, the rate is calculated relative to the physical-layer DSL rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ShapingBurstSize" access="readWrite" dmr:version="1.4">
        <description>
          Burst size in bytes.  For both leaky bucket (constant rate shaping) and token bucket (variable rate shaping) this is the bucket size and is therefore the maximum burst size.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains statistics for an Ethernet WAN interface on a CPE device.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of bytes sent over the interface since the CPE was last reset.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of bytes received over the interface since the CPE was last reset.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of packets sent over the interface since the CPE was last reset.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Total number of packets received over the interface since the CPE was last reset.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLConnectionManagement." access="readOnly" status="obsoleted" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object is intended for a CPE with a DSL modem WAN interface.
        Note - This object was originally created to allow ''WANConnection'' devices and services to be added dynamically in the IGD object model in TR-064 because UPnP Device Architecture 1.0 did not contain this capability natively.  Because in TR-069 objects can be created and removed using the AddObject and DeleteObject RPCs, ''WANConnection'' interfaces can be managed using these TR-069 mechanisms directly.  Therefore, unlike the TR-064 equivalent, the {{object|ConnectionService}} table within this object is Read-Only in the TR-069 ''InternetGatewayDevice'' data model context.
        This object is OBSOLETED because it serves no purpose.
      </description>
      <parameter name="ConnectionServiceNumberOfEntries" access="readOnly" status="obsoleted" dmr:version="1.0">
        <description>
          Number of table entries in the ConnectionService table.
          This parameter is OBSOLETED because it is within an OBSOLETED object.  The CPE MAY return a value of 0 for this parameter, regardless of the number of connection services, in which case no {{object|ConnectionService}} instances will exist.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLConnectionManagement.ConnectionService.{i}." access="readOnly" numEntriesParameter="ConnectionServiceNumberOfEntries" status="obsoleted" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        This table contains an entry for each connection service.
        This object is OBSOLETED because it is within an OBSOLETED object.
      </description>
      <uniqueKey>
        <parameter ref="WANConnectionService"/>
      </uniqueKey>
      <parameter name="WANConnectionDevice" access="readOnly" status="obsoleted" dmr:version="1.0">
        <description>
          Specifies a WAN connection device object associated with this connection instance.  The content is the full hierarchical parameter name of the WAN connection device.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2''.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WANConnectionService" access="readOnly" status="obsoleted" dmr:version="1.0">
        <description>
          Specifies a WAN connection object associated with this connection instance.  The content is the full hierarchical parameter name of the layer 3 connection object.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DestinationAddress" access="readOnly" status="obsoleted" dmr:version="1.0">
        <description>
          Destination address of the WANConnectionDevice entry.  One of:
          * ''PVC: VPI/VCI''
          * ''SVC: ATM connection name''
          * ''SVC: ATM address''
          The "PVC:" or "SVC:" prefix is part of the parameter value and MUST be followed by 0 or 1 space characters.  For example, possible values for this parameter are "PVC:8/23" or "PVC: 0/35".
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkType" access="readOnly" status="obsoleted" dmr:version="1.0">
        <description>
          Link Type of the ''WANConnectionDevice'' entry.  One of Link Types as described in ''WANDSLLinkConfig''.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionType" access="readOnly" status="obsoleted" dmr:version="1.0">
        <description>
          Connection Type of the ''WANPPPConnection'' or ''WANIPConnection'' entry. One of ''PossibleConnectionTypes'' as described in ''WAN**Connection'' service.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" status="obsoleted" dmr:version="1.0">
        <description>
          User-readable name of the connection.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object is to provide diagnostic information for a CPE with an ADSL2 or ADSL2+ modem WAN interface, but MAY also be used for ADSL.
      </description>
      <parameter name="LoopDiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Indicates availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test, which brings down the DSL connection while the test is operating.  When writing, the only allowed value is {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the corresponding reason in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object instance) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ACTPSDds" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Downstream actual power spectral density.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTPSDus" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Upstream actual power spectral density.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTATPds" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Downstream actual aggregate transmitter power.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTATPus" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Upstream actual aggregate transmitter power.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINSCds" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Downstream linear representation scale.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINSCus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Scaling used to represent the upstream linear channel characteristics.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINGds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLINpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLINGus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLINpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGGds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLOGpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGGus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|HLOGpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Downstream logarithmic channel characteristics per sub-carrier group.  The maximum number of elements is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream logarithmic channel characteristics per sub-carrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.  
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LATNpbds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Downstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2. Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="LATNpbus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of upstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Downstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLINpsds" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Downstream linear channel characteristics per subcarrier group.  Maximum number of complex pairs is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of pairs will depend on the value of {{param|HLINGds}} but will not exceed 512.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note: HLIN is not applicable in PLOAM for G.992.1 or G.992.2.  
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINpsus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream linear channel characteristics per sub-carrier group.  Maximum number of complex pairs is 64 for G.992.3, and G.992.5.  For G.993.2, the number of pairs will depend on the value of {{param|HLINGus}} but will not exceed 512.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  HLIN is not applicable in PLOAM for G.992.1 or G.992.2.  
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="QLNGds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|QLNpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNGus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|QLNpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNpsds" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Downstream quiet line noise per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGds}} but will not exceed 512.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  QLN is not applicable in PLOAM for G.992.1 or G.992.2.  
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="QLNpsus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream quiet line noise per subcarrier group.  The maximum number of elements is 64 for G.992.3, and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  QLN is not applicable in PLOAM for G.992.1 or G.992.2. 
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="QLNMTds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|QLNpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNMTus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|QLNpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|SNRpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|SNRpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRpsds" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Downstream SNR per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGds}} but will not exceed 512.   Interpretation of the value is as defined in ITU-T Rec. G.997.1.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  SNRps is not applicable in PLOAM for G.992.1 or G.992.2. 
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="SNRpsus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream SNR per subcarrier group.  The maximum number of elements is 64 for G.992.3, and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  SNRps is not applicable in PLOAM for G.992.1 or G.992.2. 
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMTds" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|SNRpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRMTus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates the number of symbols over which {{param|SNRpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BITSpsds" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Downstream bit allocation per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="BITSpsus" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Upstream bit allocation per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="GAINSpsds" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Downstream gain allocation per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          This parameter is DEPRECATED.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." access="readWrite" numEntriesParameter="WANConnectionNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        Each instance contains objects associated with a given WAN link.  In the case of DSL, each instance corresponds to either a single ATM VC or a PTM Ethernet link.  On creation of a ''WANConnectionDevice'' instance, there are initially no connection objects contained within.  In the case of Ethernet (interface or link), only one ''WANConnectionDevice'' instance is supported.
      </description>
      <parameter name="WANIPConnectionNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|WANIPConnection}} in this ''WANConnectionDevice''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="WANPPPConnectionNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|WANPPPConnection}} in this ''WANConnectionDevice''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig." access="readOnly" minEntries="0" maxEntries="1" dmr:version="1.0">
      <description>
        This object models the ATM layer properties specific to a single physical connection of a DSL modem used for Internet access on a CPE.  This object is intended for a CPE with a DSL modem WAN interface, and is exclusive of any other ''WAN*LinkConfig'' object within a given ''WANConnectionDevice'' instance.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the link.  On creation of a ''WANConnectionDevice'', this object is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LinkStatus" access="readOnly" dmr:version="1.0">
        <description>
          Status of the link.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Initializing"/>
            <enumeration value="Unavailable"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkType" access="readWrite" dmr:version="1.0">
        <description>
          Indicates the type of DSL connection and refers to the complete stack of protocol used for this connection.  {{enum}}
          The value {{enum|PPPoE}} has always been DEPRECATED and {{enum|EoA}} SHOULD be used instead (see {{bibref|TR-098a2|Annex B}}).  The ACS MUST NOT set this parameter to {{enum|PPPoE}} and the CPE MUST reject attempts to do so.
        </description>
        <syntax>
          <string>
            <enumeration value="EoA">
              <description>
                RFC 2684 {{bibref|RFC2684}} bridged Ethernet over ATM
              </description>
            </enumeration>
            <enumeration value="IPoA">
              <description>
                RFC 2684 {{bibref|RFC2684}} routed IP over ATM
              </description>
            </enumeration>
            <enumeration value="PPPoA">
              <description>
                RFC 2364 {{bibref|RFC2634}} PPP over ATM
              </description>
            </enumeration>
            <enumeration value="PPPoE" status="deprecated">
              <description>
                RFC 2516 {{bibref|RFC2516}} PPP over Ethernet on RFC 2684 {{bibref|RFC2684}} bridged Ethernet over ATM
              </description>
            </enumeration>
            <enumeration value="CIP">
              <description>
                RFC 2225 {{bibref|RFC2225}} Classical IP over ATM
              </description>
            </enumeration>
            <enumeration value="Unconfigured"/>
          </string>
          <default type="object" value="Unconfigured"/>
        </syntax>
      </parameter>
      <parameter name="AutoConfig" access="readOnly" dmr:version="1.0">
        <description>
          Indicates if the CPE is currently using some auto configuration mechanisms for this connection.  If this variable is {{true}}, all writable variables in this connection instance become read-only. Any attempt to change one of these variables SHOULD fail and an error SHOULD be returned.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ModulationType" access="readOnly" dmr:version="1.0">
        <description>
          Indicates the type of DSL modulation used on the interface associated with this connection (duplication from ''WANDSLInterfaceConfig'').
        </description>
        <syntax>
          <string>
            <enumeration value="ADSL_G.dmt"/>
            <enumeration value="ADSL_G.lite"/>
            <enumeration value="ADSL_G.dmt.bis"/>
            <enumeration value="ADSL_re-adsl"/>
            <enumeration value="ADSL_2plus"/>
            <enumeration value="ADLS_four"/>
            <enumeration value="ADSL_ANSI_T1.413"/>
            <enumeration value="G.shdsl"/>
            <enumeration value="IDSL"/>
            <enumeration value="HDSL"/>
            <enumeration value="SDSL"/>
            <enumeration value="VDSL"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DestinationAddress" access="readWrite" dmr:version="1.0">
        <description>
          Destination address of this link.  One of:
          * ''PVC: VPI/VCI''
          * ''SVC: ATM connection name''
          * ''SVC: ATM address''
          The "PVC:" or "SVC:" prefix is part of the parameter value and MUST be followed by 0 or 1 space characters.  For example, possible values for this parameter are "PVC:8/23" or "PVC: 0/35".
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATMEncapsulation" access="readWrite" dmr:version="1.0">
        <description>
          Identifies the connection encapsulation that will be used.
        </description>
        <syntax>
          <string>
            <enumeration value="LLC"/>
            <enumeration value="VCMUX"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FCSPreserved" access="readWrite" dmr:version="1.0">
        <description>
          This flag tells if a checksum SHOULD be added in the ATM payload. It does not refer to the checksum of one of the ATM cells or AALX packets. In case of LLC or VCMUX encapsulation, this ATM checksum is the FCS field described in RFC 2684 {{bibref|RFC2684}}. It is only applicable in the upstream direction.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="VCSearchList" access="readWrite" dmr:version="1.0">
        <description>
          Ordered list of VPI/VCI pairs to search if a link using the {{param|DestinationAddress}} cannot be established.  In the form:
          : ''VPI1/VCI1, VPI2/VCI2, ...''
          Example:
          : ''0/35, 8/35, 1/35''
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ATMAAL" access="readOnly" dmr:version="1.0">
        <description>
          Describes the ATM Adaptation Layer (AAL) currently in use on the PVC.
        </description>
        <syntax>
          <string>
            <enumeration value="AAL1"/>
            <enumeration value="AAL2"/>
            <enumeration value="AAL3"/>
            <enumeration value="AAL4"/>
            <enumeration value="AAL5"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATMTransmittedBlocks" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current count of successfully transmitted cells.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMReceivedBlocks" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current count of successfully received cells.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMQoS" access="readWrite" dmr:version="1.0">
        <description>
          Describes the ATM Quality Of Service (QoS) being used on the VC.
        </description>
        <syntax>
          <string>
            <enumeration value="UBR"/>
            <enumeration value="CBR"/>
            <enumeration value="GFR"/>
            <enumeration value="VBR-nrt"/>
            <enumeration value="VBR-rt"/>
            <enumeration value="UBR+"/>
            <enumeration value="ABR"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATMPeakCellRate" access="readWrite" dmr:version="1.0">
        <description>
          Specifies the upstream peak cell rate in cells per second.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMMaximumBurstSize" access="readWrite" dmr:version="1.0">
        <description>
          Specifies the upstream maximum burst size in cells.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMSustainableCellRate" access="readWrite" dmr:version="1.0">
        <description>
          Specifies the upstream sustainable cell rate, in cells per second, used for traffic shaping.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AAL5CRCErrors" access="readOnly" status="deprecated" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Count of the AAL5 layer cyclic redundancy check errors.
          This parameter is DEPRECATED because it overlaps with the {{param|ATMCRCErrors}} parameter. If present, it MUST have the same value as the {{param|ATMCRCErrors}} parameter if AAL5 is in use, or 0 if AAL5 is not in use.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Count of the ATM layer cyclic redundancy check (CRC) errors.
          This refers to CRC errors at the ATM adaptation layer (AAL). The AAL in use is indicated by the {{param|ATMAAL}} parameter. The value of the {{param}} parameter MUST be 0 for AAL types that have no CRCs.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Count of the number of Header Error Check related errors at the ATM layer.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANATMF5LoopbackDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object is provides access to an ATM-layer F5 OAM loopback test.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Indicates availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object instance) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
          <default type="object" value="None"/>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" dmr:version="1.0">
        <description>
          Number of repetitions of the ping test to perform before reporting the results.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="1.0">
        <description>
          Timeout in milliseconds for the ping test.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Result parameter indicating the number of successful pings (those in which a successful response was received prior to the timeout) in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Result parameter indicating the number of failed pings in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Result parameter indicating the average response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Result parameter indicating the minimum response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Result parameter indicating the maximum response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}." access="readWrite" numEntriesParameter="WANIPConnectionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        This object enables configuration of IP connections on the WAN interface of a CPE.
        If the ''Layer2Bridging'' object is implemented, the view that it provides of the CPE's underlying bridging configuration MUST be consistent with the view provided by any ''LANDevice'' and ''WAN**Connection'' objects.  The implications of this are explained in {{bibref|TR-098a2|Annex A.6}}.
      </description>
      <uniqueKey>
        <parameter ref="ExternalIPAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the connection instance.  On creation of a ''WANIPConnection'' instance, it is initially disabled.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ConnectionStatus" access="readOnly" dmr:version="1.0">
        <description>
          Current status of the connection.  {{enum}}
          The value {{enum|Disconneting}} is DEPRECATED because it is a typo.  The ACS MUST treat {{enum|Disconneting}} and {{enum|Disconnecting}} the same.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured"/>
            <enumeration value="Connecting"/>
            <enumeration value="Connected"/>
            <enumeration value="PendingDisconnect"/>
            <enumeration value="Disconneting" status="deprecated"/>
            <enumeration value="Disconnecting"/>
            <enumeration value="Disconnected"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PossibleConnectionTypes" access="readOnly" dmr:version="1.0">
        <description>
          Types of connections possible for this connection instance.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Unconfigured"/>
            <enumeration value="IP_Routed"/>
            <enumeration value="IP_Bridged"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionType" access="readWrite" dmr:version="1.0">
        <description>
          Specifies the connection type of the connection instance.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured"/>
            <enumeration value="IP_Routed"/>
            <enumeration value="IP_Bridged"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="1.0">
        <description>
          User-readable name of this connection.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Uptime" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The time in seconds that this connection has been up.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastConnectionError" access="readOnly" dmr:version="1.0">
        <description>
          The cause of failure for the last connection setup attempt.
        </description>
        <syntax>
          <string>
            <enumeration value="ERROR_NONE"/>
            <enumeration value="ERROR_COMMAND_ABORTED"/>
            <enumeration value="ERROR_NOT_ENABLED_FOR_INTERNET"/>
            <enumeration value="ERROR_USER_DISCONNECT"/>
            <enumeration value="ERROR_ISP_DISCONNECT"/>
            <enumeration value="ERROR_IDLE_DISCONNECT"/>
            <enumeration value="ERROR_FORCED_DISCONNECT"/>
            <enumeration value="ERROR_NO_CARRIER"/>
            <enumeration value="ERROR_IP_CONFIGURATION"/>
            <enumeration value="ERROR_UNKNOWN"/>
          </string>
          <default type="object" value="ERROR_NONE"/>
        </syntax>
      </parameter>
      <parameter name="AutoDisconnectTime" access="readWrite" dmr:version="1.0">
        <description>
          The time in seconds since the establishment of the connection after which connection termination is automatically initiated by the CPE.  This occurs irrespective of whether the connection is being used or not.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IdleDisconnectTime" access="readWrite" dmr:version="1.0">
        <description>
          The time in seconds that if the connection remains idle, the CPE automatically terminates the connection.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="WarnDisconnectDelay" access="readWrite" dmr:version="1.0">
        <description>
          Time in seconds the Status remains in the pending disconnect state before transitioning to disconnecting state to drop the connection.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RSIPAvailable" access="readOnly" dmr:version="1.0">
        <description>
          Indicates if Realm-specific IP (RSIP) is available as a feature on the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NATEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Indicates if Network Address Translation (NAT) is enabled for this connection.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AddressingType" access="readWrite" dmr:version="1.0">
        <description>
          The method used to assign an address to the WAN side interface of the CPE for this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP"/>
            <enumeration value="Static"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExternalIPAddress" access="readWrite" activeNotify="forceDefaultEnabled" forcedInform="true" dmr:version="1.0">
        <description>
          This is the external IP address used by NAT for this connection.  This parameter is configurable only if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.
          If Active Notification is enabled, the CPE MUST initiate an Inform whenever either the value of this parameter changes or the default WAN connection changes to a different connection.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readWrite" dmr:version="1.0">
        <description>
          Subnet mask of the WAN interface.  This parameter is configurable only if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DefaultGateway" access="readWrite" dmr:version="1.0">
        <description>
          The IP address of the default gateway for this connection.  This parameter is configurable only if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="DNSEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Whether or not the device SHOULD attempt to query a DNS server across this connection.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DNSOverrideAllowed" access="readWrite" dmr:version="1.0">
        <description>
          Whether or not a manually set, non-empty DNS address can be overridden by a DNS entry received from the WAN.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readWrite" dmr:version="1.0">
        <description>
          DNS server IP addresses for this connection.  Support for more than three DNS Servers is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxMTUSize" access="readWrite" dmr:version="1.0">
        <description>
          The maximum allowed size of an Ethernet frame from LAN-side devices.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="1540"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readWrite" dmr:version="1.0">
        <description>
          The physical address of the ''WANIPConnection'' if applicable.  Configurable only if {{param|MACAddressOverride}} is present and {{true}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddressOverride" access="readWrite" dmr:version="1.0">
        <description>
          Whether the value of {{param|MACAddress}} parameter can be overridden. If {{false}}, the CPE's default value is used (or restored if it had previously been overridden).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ConnectionTrigger" access="readWrite" dmr:version="1.0">
        <description>
          Trigger used to establish the IP connection.  {{enum}}
          The above values are defined as follows:
          * {{enum|OnDemand}}: If this IP connection is disconnected for any reason, it is to remain disconnected until the CPE has one or more packets to communicate over this connection, at which time the CPE automatically attempts to reestablish the connection.
          * {{enum|AlwaysOn}}: If this IP connection is disconnected for any reason, the CPE automatically attempts to reestablish the connection (and continues to attempt to reestablish the connection as long it remains disconnected).
          * {{enum|Manual}}: If this IP connection is disconnected for any reason, it is to remain disconnected until the user of the CPE explicitly instructs the CPE to reestablish the connection.
          Note that the reason for an IP connection becoming disconnected to begin with might be either external to the CPE, such as non-renewal of a DHCP lease or momentary disconnection of the physical interface, or internal to the CPE, such as use of the {{param|IdleDisconnectTime}} and/or {{param|AutoDisconnectTime}} parameters in this object.
          Note also that the means by which a CPE would keep an IP connection disconnected (while waiting for the designated trigger) if it is otherwise physically connected and has an IP address is a local matter specific to the implementation of the CPE.
        </description>
        <syntax>
          <string>
            <enumeration value="OnDemand"/>
            <enumeration value="AlwaysOn"/>
            <enumeration value="Manual"/>
          </string>
          <default type="object" value="OnDemand"/>
        </syntax>
      </parameter>
      <parameter name="RouteProtocolRx" access="readWrite" dmr:version="1.0">
        <description>
          Defines the Rx protocol to be used.
        </description>
        <syntax>
          <string>
            <enumeration value="Off"/>
            <enumeration value="RIPv1" optional="true"/>
            <enumeration value="RIPv2" optional="true"/>
            <enumeration value="OSPF" optional="true"/>
          </string>
          <default type="object" value="Off"/>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" dmr:version="1.1">
        <description>
          Rate to shape this connection's egress traffic to.  For leaky bucket (constant rate shaping), this is the constant rate.  For token bucket (variable rate shaping), this is the average rate.
          If &lt;= 100, in percent of the rate of the highest rate-constrained layer over which the packet will travel on egress.
          If &gt; 100, in bits per second.
          A value of -1 indicates no shaping.
          For example, for packets destined for a WAN DSL interface, if the ATM layer is rate-constrained, then the rate is calculated relative to this rate.  Otherwise, the rate is calculated relative to the physical-layer DSL rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ShapingBurstSize" access="readWrite" dmr:version="1.1">
        <description>
          Burst size in bytes.  For both leaky bucket (constant rate shaping) and token bucket (variable rate shaping) this is the bucket size and is therefore the maximum burst size.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0" status="deleted"/>
        </syntax>
      </parameter>
      <parameter name="PortMappingNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Total number of port mapping entries.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.4">
      <description>
        This object contains DHCP client configuration parameters.
      </description>
      <parameter name="SentDHCPOptionNumberOfEntries" access="readOnly" dmr:version="1.4">
        <description>
          The number of entries in the {{object|SentDHCPOption}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ReqDHCPOptionNumberOfEntries" access="readOnly" dmr:version="1.4">
        <description>
          The number of entries in the {{object|ReqDHCPOption}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient.SentDHCPOption.{i}." access="readWrite" numEntriesParameter="SentDHCPOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="1.4">
      <description>
        Each instance of this object represents a DHCP option that MUST, if enabled, be sent in DHCP client requests.  All sent DHCP options MUST be listed.
      </description>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.4">
        <description>
          Enables or disables this SentDHCPOption table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="1.4">
        <description>
          Option tag as defined in RFC 2132 {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="1.4">
        <description>
          Base64 encoded option value.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="255"/>
          </base64>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient.ReqDHCPOption.{i}." access="readWrite" numEntriesParameter="ReqDHCPOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="1.4">
      <description>
        Each instance of this object represents a DHCP option that MUST, if enabled, be requested in DHCP client requests. All requested DHCP options MUST be listed.
      </description>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.4">
        <description>
          Enables or disables this ReqDHCPOption table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="1.4">
        <description>
          Position of the option in the DHCP client request.  A value of 1 indicates the first entry.
          When this value is modified, if the value matches that of an existing entry, the Order value for the existing entry and all lower Order entries is incremented to ensure uniqueness of this value. A deletion causes Order values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value on creation of a ReqDHCPOption table entry MUST be one greater than the largest current value.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="1.4">
        <description>
          Option tag as defined in RFC 2132 {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="1.4">
        <description>
          Base64 encoded most recently received DHCP option value.
          If no option value has been received, then the value MUST represent {{empty}}.
          Received DHCP option values MAY, but need not, persist across CPE reboots.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="255"/>
          </base64>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.PortMapping.{i}." access="readWrite" numEntriesParameter="PortMappingNumberOfEntries" enableParameter="PortMappingEnabled" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        Port mapping table.
        This table MUST contain all NAT port mappings associated with this connection, including static and dynamic port mappings programmatically created via local control protocol, such as UPnP.
        This table MUST NOT contain dynamic NAT binding entries associated with the normal operation of NAT.
        At most one entry in an instance of this table can exist with all of the same values for {{param|RemoteHost}}, {{param|ExternalPort}}, and {{param|PortMappingProtocol}}.  If the ACS attempts to set the parameters of an existing entry such that this requirement would be violated, the CPE MUST reject the request.  In this case, the SetParameterValues response MUST include a SetParameterValuesFault element for each parameter in the corresponding request whose modification would have resulted in such a violation.  On creation of a new table entry, the CPE MUST choose default values for {{param|ExternalPort}} and {{param|PortMappingProtocol}} such that the new entry does not conflict with any existing entry.
      </description>
      <uniqueKey>
        <parameter ref="RemoteHost"/>
        <parameter ref="ExternalPort"/>
        <parameter ref="PortMappingProtocol"/>
      </uniqueKey>
      <parameter name="PortMappingEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the port mapping instance.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PortMappingLeaseDuration" access="readWrite" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Determines the time to live, in seconds, of a port-mapping lease, where "time to live" means the number of seconds before the port mapping expires. 
          A value of 0 means the port mapping is static. Support for dynamic (non-static) port mappings is OPTIONAL.  That is, the only value for {{param}} that MUST be supported is 0.
          For a dynamic (non-static) port mapping, when this parameter is read, the value represents the time remaining on the port-mapping lease.  That is, for a dynamic port mapping, the value counts down toward 0.  When a dynamic port-mapping lease expires, the CPE MUST automatically terminate that port mapping, and MUST automatically delete the corresponding ''PortMapping'' table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RemoteHost" access="readWrite" dmr:version="1.0">
        <description>
          This parameter is the IP address of the source of inbound packets.  {{empty}} indicates a "wildcard" (this will be a wildcard in most cases).  CPE are REQUIRED only to support wildcards.
          When {{param}} is a wildcard, all traffic sent to the {{param|ExternalPort}} on the WAN interface of the gateway is forwarded to the {{param|InternalClient}} on the {{param|InternalPort}}.
          When {{param}} is specified as one external IP address, the NAT will only forward inbound packets from this {{param}} to the {{param|InternalClient}}, all other packets will be dropped. 
          If a CPE supports non-wildcard values for {{param}}, it MAY additionally support the ability to have more than one port mapping with the same {{param|ExternalPort}} and {{param|PortMappingProtocol}}, but with differing values of {{param}}.
          When wildcard values are used for {{param}} and/or {{param|ExternalPort}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param}}, explicit {{param|ExternalPort}}
          # Explicit {{param}}, wildcard {{param|ExternalPort}}
          # Wildcard {{param}}, explicit {{param|ExternalPort}}
          # Wildcard {{param}}, wildcard {{param|ExternalPort}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
          At most one entry in this table can exist with all of the same values for {{param}}, {{param|ExternalPort}}, and {{param|PortMappingProtocol}}.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ExternalPort" access="readWrite" dmr:version="1.0">
        <description>
          The external port (or the first port of a range of external ports) that the NAT gateway would listen on for connection requests to a corresponding {{param|InternalPort}}. Inbound packets to this external port on the WAN interface SHOULD be forwarded to {{param|InternalClient}} on the {{param|InternalPort}}.
          A value of zero (0) represents a "wildcard".  If this value is a wildcard, connection requests on all external ports (that are not otherwise mapped) will be forwarded to {{param|InternalClient}}.  In the wildcard case, the value(s) of {{param|InternalPort}} on {{param|InternalClient}} are ignored.
          When wildcard values are used for {{param|RemoteHost}} and/or {{param}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param|RemoteHost}}, explicit {{param}}
          # Explicit {{param|RemoteHost}}, wildcard {{param}}
          # Wildcard {{param|RemoteHost}}, explicit {{param}}
          # Wildcard {{param|RemoteHost}}, wildcard {{param}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
          At most one entry in this table can exist with all of the same values for {{param|RemoteHost}}, {{param}}, and {{param|PortMappingProtocol}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ExternalPortEndRange" access="readWrite" dmr:version="1.4">
        <description>
          Indicates the last port of the external port range that starts with {{param|ExternalPort}}.
          If an external port range is specified, then the behavior described for {{param|ExternalPort}} applies to all ports within the range.
          A value of zero (0) indicates that no external port range is specified, i.e. that the range consists only of {{param|ExternalPort}}.
          If {{param|ExternalPort}} is zero (wildcard), the value of this parameter MUST be ignored.
          If specified, the value of this parameter MUST be greater than or equal to the value of {{param|ExternalPort}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="InternalPort" access="readWrite" dmr:version="1.0">
        <description>
          The port on {{param|InternalClient}} that the gateway SHOULD forward connection requests to.  A value of zero (0) is not allowed.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PortMappingProtocol" access="readWrite" dmr:version="1.0">
        <description>
          The protocol of the port mapping.  {{enum}}
          At most one entry in this table can exist with all of the same values for {{param|RemoteHost}}, {{param|ExternalPort}}, and {{param}}.
        </description>
        <syntax>
          <string>
            <enumeration value="TCP"/>
            <enumeration value="UDP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InternalClient" access="readWrite" dmr:version="1.0">
        <description>
          The IP address or DNS host name of an internal client (on the LAN).
          Support for an IP address is mandatory.  If {{param}} is specified as an IP address and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with the original IP address.
          Support for DNS host names is OPTIONAL.  If {{param}} is specified as a DNS host name and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with this LAN device.  In this case, it is the responsibility of the CPE to maintain the name-to-address mapping in the event of IP address changes.  This can be accomplished, for example, by assigning the DNS host name via use of DHCP option 12 (Host Name) or option 81 (FQDN).  Note that the ACS can learn the host name associated with a given LAN device via the ''Hosts'' table ({{object|InternetGatewayDevice.LANDevice.{i}.Hosts}}).
          Read access to this parameter MUST always return the exact value that was last set by the ACS.  For example, if the internal client is set to a DNS host name, it MUST read back as a DNS host name and not as an IP address.
          {{empty}} indicates an unconfigured {{param}}. If this parameter is unconfigured, this port mapping MUST NOT be operational.
          It MUST be possible to set the {{param}} to the broadcast IP address 255.255.255.255 for UDP mappings. This is to enable multiple NAT clients to use the same well-known port simultaneously.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PortMappingDescription" access="readWrite" dmr:version="1.0">
        <description>
          User-readable description of this port mapping.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains statistics for all connections within the same ''WANConnectionDevice'' that share a common MAC address.  The contents of this object SHOULD be identical for each such connection.
        This object is intended only for ''WANConnectionDevice''s that can support an Ethernet-layer on this interface (e.g., ''PPPoE'', ''IPoE'').
      </description>
      <parameter name="EthernetBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes transmitted, including framing characters, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes received, including framing characters, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets transmitted over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets which were received over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets that could not be transmitted because of errors, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetDiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetDiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetMulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission, including those that were discarded or not sent, which were addressed to a multicast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetMulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a multicast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission, including those that were discarded or not sent, which were addressed to a broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets which were discarded because of an unknown or unsupported protocol, received over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}." access="readWrite" numEntriesParameter="WANPPPConnectionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        This object enables configuration of PPP connections on the WAN interface of a CPE.
        If the ''Layer2Bridging'' object is implemented, the view that it provides of the CPE's underlying bridging configuration MUST be consistent with the view provided by any ''LANDevice'' and ''WAN**Connection'' objects.  The implications of this are explained in {{bibref|TR-098a2|Annex A.6}}.
      </description>
      <uniqueKey>
        <parameter ref="ExternalIPAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the connection instance.  On creation of a ''WANPPPConnection'' instance, it is initially disabled.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="1.4">
        <description>
          When set to {{true}}, the device MUST tear down the existing PPP connection represented by this object and establish a new one.  
          The device MUST initiate the reset after completion of the current CWMP session.  The device MAY delay resetting the connection in order to avoid interruption of a user service such as an ongoing voice call.  
          When read, this parameter always returns {{false}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ConnectionStatus" access="readOnly" dmr:version="1.0">
        <description>
          Current status of the connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured"/>
            <enumeration value="Connecting"/>
            <enumeration value="Authenticating"/>
            <enumeration value="Connected"/>
            <enumeration value="PendingDisconnect"/>
            <enumeration value="Disconnecting"/>
            <enumeration value="Disconnected"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PossibleConnectionTypes" access="readOnly" dmr:version="1.0">
        <description>
          Types of connections possible for this connection instance.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Unconfigured"/>
            <enumeration value="IP_Routed"/>
            <enumeration value="DHCP_Spoofed"/>
            <enumeration value="PPPoE_Bridged"/>
            <enumeration value="PPPoE_Relay"/>
            <enumeration value="PPTP_Relay"/>
            <enumeration value="L2TP_Relay"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionType" access="readWrite" dmr:version="1.0">
        <description>
          Specifies the connection type of the connection instance.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured"/>
            <enumeration value="IP_Routed"/>
            <enumeration value="DHCP_Spoofed"/>
            <enumeration value="PPPoE_Bridged"/>
            <enumeration value="PPPoE_Relay"/>
            <enumeration value="PPTP_Relay"/>
            <enumeration value="L2TP_Relay"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PPPoESessionID" access="readOnly" dmr:version="1.4">
        <description>
          Represents the PPPoE Session ID.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DefaultGateway" access="readOnly" dmr:version="1.4">
        <description>
          Represents the IP Address of the remote end Default Gateway established through PPPoE.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="1.0">
        <description>
          User-readable name of this connection.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Uptime" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The time in seconds that this connection has been up.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastConnectionError" access="readOnly" dmr:version="1.0">
        <description>
          The cause of failure for the last connection setup attempt.
        </description>
        <syntax>
          <string>
            <enumeration value="ERROR_NONE"/>
            <enumeration value="ERROR_ISP_TIME_OUT"/>
            <enumeration value="ERROR_COMMAND_ABORTED"/>
            <enumeration value="ERROR_NOT_ENABLED_FOR_INTERNET"/>
            <enumeration value="ERROR_BAD_PHONE_NUMBER"/>
            <enumeration value="ERROR_USER_DISCONNECT"/>
            <enumeration value="ERROR_ISP_DISCONNECT"/>
            <enumeration value="ERROR_IDLE_DISCONNECT"/>
            <enumeration value="ERROR_FORCED_DISCONNECT"/>
            <enumeration value="ERROR_SERVER_OUT_OF_RESOURCES"/>
            <enumeration value="ERROR_RESTRICTED_LOGON_HOURS"/>
            <enumeration value="ERROR_ACCOUNT_DISABLED"/>
            <enumeration value="ERROR_ACCOUNT_EXPIRED"/>
            <enumeration value="ERROR_PASSWORD_EXPIRED"/>
            <enumeration value="ERROR_AUTHENTICATION_FAILURE"/>
            <enumeration value="ERROR_NO_DIALTONE"/>
            <enumeration value="ERROR_NO_CARRIER"/>
            <enumeration value="ERROR_NO_ANSWER"/>
            <enumeration value="ERROR_LINE_BUSY"/>
            <enumeration value="ERROR_UNSUPPORTED_BITSPERSECOND"/>
            <enumeration value="ERROR_TOO_MANY_LINE_ERRORS"/>
            <enumeration value="ERROR_IP_CONFIGURATION"/>
            <enumeration value="ERROR_UNKNOWN"/>
          </string>
          <default type="object" value="ERROR_NONE"/>
        </syntax>
      </parameter>
      <parameter name="AutoDisconnectTime" access="readWrite" dmr:version="1.0">
        <description>
          The time in seconds since the establishment of the connection after which connection termination is automatically initiated by the CPE.  This occurs irrespective of whether the connection is being used or not.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IdleDisconnectTime" access="readWrite" dmr:version="1.0">
        <description>
          The time in seconds that if the connection remains idle, the CPE automatically terminates the connection.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="WarnDisconnectDelay" access="readWrite" dmr:version="1.0">
        <description>
          Time in seconds the Status remains in the pending disconnect state before transitioning to disconnecting state to drop the connection.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RSIPAvailable" access="readOnly" dmr:version="1.0">
        <description>
          Indicates if Realm-specific IP (RSIP) is available as a feature on the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NATEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Indicates if Network Address Translation (NAT) is enabled for this connection.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="1.0">
        <description>
          Username to be used for authentication.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="1.0">
        <description>
          Password to be usef for authentication.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PPPEncryptionProtocol" access="readOnly" dmr:version="1.0">
        <description>
          Describes the PPP encryption protocol used between the WAN device and the ISP POP.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="MPPE"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PPPCompressionProtocol" access="readOnly" dmr:version="1.0">
        <description>
          Describes the PPP compression protocol used between the WAN device and the ISP POP.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="Van Jacobsen"/>
            <enumeration value="STAC LZS"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PPPAuthenticationProtocol" access="readOnly" dmr:version="1.0">
        <description>
          Describes the PPP authentication protocol used between the WAN device and the ISP POP.
        </description>
        <syntax>
          <string>
            <enumeration value="PAP"/>
            <enumeration value="CHAP"/>
            <enumeration value="MS-CHAP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExternalIPAddress" access="readWrite" activeNotify="forceDefaultEnabled" forcedInform="true" dmr:version="1.0">
        <description>
          This is the external IP address used by NAT for this connection.
          If Active Notification is enabled, the CPE MUST initiate an Inform whenever either the value of this parameter changes or the default WAN connection changes to a different connection.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="RemoteIPAddress" access="readOnly" dmr:version="1.0">
        <description>
          The remote IP address for this connection.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxMRUSize" access="readWrite" dmr:version="1.0">
        <description>
          The maximum allowed size of frames sent from the remote peer.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="1540"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CurrentMRUSize" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The current MRU in use over this connection.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="1540"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DNSEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Whether or not the device SHOULD attempt to query a DNS server across this connection.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DNSOverrideAllowed" access="readWrite" dmr:version="1.0">
        <description>
          Whether or not a manually set, non-empty DNS address can be overridden by a DNS entry received from the WAN.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readWrite" dmr:version="1.0">
        <description>
          DNS server IP addresses for this connection.  Support for more than three DNS Servers is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readWrite" dmr:version="1.0">
        <description>
          The physical address of the ''WANPPPConnection'' if applicable.  Configurable only if {{param|MACAddressOverride}} is present and {{true}}.
          If {{param|TransportType}} is {{enum|PPPoA|TransportType}}, the value of this parameter is irrelevant and MUST be {{empty}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddressOverride" access="readWrite" dmr:version="1.0">
        <description>
          Whether the value of {{param|MACAddress}} parameter can be overridden. If {{false}}, the CPE's default value is used (or restored if it had previously been overridden).
          If {{param|TransportType}} is {{enum|PPPoA|TransportType}}, the value of this parameter is irrelevant and MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TransportType" access="readOnly" dmr:version="1.0">
        <description>
          PPP transport type of the connection.
        </description>
        <syntax>
          <string>
            <enumeration value="PPPoA"/>
            <enumeration value="PPPoE"/>
            <enumeration value="L2TP">
              <description>
                for future use
              </description>
            </enumeration>
            <enumeration value="PPTP">
              <description>
                for future use
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="PPPoEACName" access="readWrite" dmr:version="1.0">
        <description>
          PPPoE Access Concentrator.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PPPoEServiceName" access="readWrite" dmr:version="1.0">
        <description>
          PPPoE Service Name.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ConnectionTrigger" access="readWrite" dmr:version="1.0">
        <description>
          Trigger used to establish the PPP connection.  {{enum}}
          The above values are defined as follows:
          * {{enum|OnDemand}}: If this PPP connection is disconnected for any reason, it is to remain disconnected until the CPE has one or more packets to communicate over this connection, at which time the CPE automatically attempts to reestablish the connection.
          * {{enum|AlwaysOn}}: If this PPP connection is disconnected for any reason, the CPE automatically attempts to reestablish the connection (and continues to attempt to reestablish the connection as long it remains disconnected).
          * {{enum|Manual}}: If this PPP connection is disconnected for any reason, it is to remain disconnected until the user of the CPE explicitly instructs the CPE to reestablish the connection.
          Note that the reason for a PPP connection becoming disconnected to begin with might be either external to the CPE, such as termination by the BRAS or momentary disconnection of the physical interface, or internal to the CPE, such as use of the {{param|IdleDisconnectTime}} and/or {{param|AutoDisconnectTime}} parameters in this object.
        </description>
        <syntax>
          <string>
            <enumeration value="OnDemand"/>
            <enumeration value="AlwaysOn"/>
            <enumeration value="Manual"/>
          </string>
          <default type="object" value="OnDemand"/>
        </syntax>
      </parameter>
      <parameter name="RouteProtocolRx" access="readWrite" dmr:version="1.0">
        <description>
          Defines the Rx protocol to be used.
        </description>
        <syntax>
          <string>
            <enumeration value="Off"/>
            <enumeration value="RIPv1" optional="true"/>
            <enumeration value="RIPv2" optional="true"/>
            <enumeration value="OSPF" optional="true"/>
          </string>
          <default type="object" value="Off"/>
        </syntax>
      </parameter>
      <parameter name="PPPLCPEcho" access="readOnly" dmr:version="1.0">
        <description>
          PPP LCP Echo period in seconds.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PPPLCPEchoRetry" access="readOnly" dmr:version="1.0">
        <description>
          Number of PPP LCP Echo retries within an echo period.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" dmr:version="1.1">
        <description>
          Rate to shape this connection's egress traffic to.  For leaky bucket (constant rate shaping), this is the constant rate.  For token bucket (variable rate shaping), this is the average rate.
          If &lt;= 100, in percent of the rate of the highest rate-constrained layer over which the packet will travel on egress. 
          If &gt; 100, in bits per second.
          A value of -1 indicates no shaping.
          For example, for packets destined for a WAN DSL interface, if the ATM layer is rate-constrained, then the rate is calculated relative to this rate.  Otherwise, the rate is calculated relative to the physical-layer DSL rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ShapingBurstSize" access="readWrite" dmr:version="1.1">
        <description>
          Burst size in bytes.  For both leaky bucket (constant rate shaping) and token bucket (variable rate shaping) this is the bucket size and is therefore the maximum burst size.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0" status="deleted"/>
        </syntax>
      </parameter>
      <parameter name="PortMappingNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Total number of port mapping entries.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.PortMapping.{i}." access="readWrite" numEntriesParameter="PortMappingNumberOfEntries" enableParameter="PortMappingEnabled" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <description>
        Port mapping table.
        This table MUST contain all NAT port mappings associated with this connection, including static and dynamic port mappings programmatically created via local control protocol, such as UPnP.
        This table MUST NOT contain dynamic NAT binding entries associated with the normal operation of NAT.
        At most one entry in an instance of this table can exist with all of the same values for {{param|RemoteHost}}, {{param|ExternalPort}}, and {{param|PortMappingProtocol}}.  If the ACS attempts to set the parameters of an existing entry such that this requirement would be violated, the CPE MUST reject the request.  In this case, the SetParameterValues response MUST include a SetParameterValuesFault element for each parameter in the corresponding request whose modification would have resulted in such a violation.  On creation of a new table entry, the CPE MUST choose default values for {{param|ExternalPort}} and {{param|PortMappingProtocol}} such that the new entry does not conflict with any existing entry.
      </description>
      <uniqueKey>
        <parameter ref="RemoteHost"/>
        <parameter ref="ExternalPort"/>
        <parameter ref="PortMappingProtocol"/>
      </uniqueKey>
      <parameter name="PortMappingEnabled" access="readWrite" dmr:version="1.0">
        <description>
          Enables or disables the port mapping instance.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PortMappingLeaseDuration" access="readWrite" activeNotify="canDeny" dmr:version="1.0">
        <description>
          Determines the time to live, in seconds, of a port-mapping lease, where "time to live" means the number of seconds before the port mapping expires. 
          A value of 0 means the port mapping is static. Support for dynamic (non-static) port mappings is OPTIONAL.  That is, the only value for {{param}} that MUST be supported is 0.
          For a dynamic (non-static) port mapping, when this parameter is read, the value represents the time remaining on the port-mapping lease.  That is, for a dynamic port mapping, the value counts down toward 0.  When a dynamic port-mapping lease expires, the CPE MUST automatically terminate that port mapping, and MUST automatically delete the corresponding ''PortMapping'' table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RemoteHost" access="readWrite" dmr:version="1.0">
        <description>
          This parameter is the IP address of the source of inbound packets.  {{empty}} indicates a "wildcard" (this will be a wildcard in most cases).  CPE are REQUIRED only to support wildcards.
          When {{param}} is a wildcard, all traffic sent to the {{param|ExternalPort}} on the WAN interface of the gateway is forwarded to the {{param|InternalClient}} on the {{param|InternalPort}}.
          When {{param}} is specified as one external IP address, the NAT will only forward inbound packets from this {{param}} to the {{param|InternalClient}}, all other packets will be dropped. 
          If a CPE supports non-wildcard values for {{param}}, it MAY additionally support the ability to have more than one port mapping with the same {{param|ExternalPort}} and {{param|PortMappingProtocol}}, but with differing values of {{param}}.
          When wildcard values are used for {{param}} and/or {{param|ExternalPort}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param}}, explicit {{param|ExternalPort}}
          # Explicit {{param}}, wildcard {{param|ExternalPort}}
          # Wildcard {{param}}, explicit {{param|ExternalPort}}
          # Wildcard {{param}}, wildcard {{param|ExternalPort}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
          At most one entry in this table can exist with all of the same values for {{param}}, {{param|ExternalPort}}, and {{param|PortMappingProtocol}}.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ExternalPort" access="readWrite" dmr:version="1.0">
        <description>
          The external port (or the first port of a range of external ports) that the NAT gateway would listen on for connection requests to a corresponding {{param|InternalPort}}. Inbound packets to this external port on the WAN interface SHOULD be forwarded to {{param|InternalClient}} on the {{param|InternalPort}}.
          A value of zero (0) represents a "wildcard".  If this value is a wildcard, connection request on all external ports (that are not otherwise mapped) will be forwarded to {{param|InternalClient}}.  In the wildcard case, the value(s) of {{param|InternalPort}} on {{param|InternalClient}} are ignored.
          When wildcard values are used for {{param|RemoteHost}} and/or {{param}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param|RemoteHost}}, explicit {{param}}
          # Explicit {{param|RemoteHost}}, wildcard {{param}}
          # Wildcard {{param|RemoteHost}}, explicit {{param}}
          # Wildcard {{param|RemoteHost}}, wildcard {{param}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
          At most one entry in this table can exist with all of the same values for {{param|RemoteHost}}, {{param}}, and {{param|PortMappingProtocol}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ExternalPortEndRange" access="readWrite" dmr:version="1.4">
        <description>
          Indicates the last port of the external port range that starts with {{param|ExternalPort}}.
          If an external port range is specified, then the behavior described for {{param|ExternalPort}} applies to all ports within the range.
          A value of zero (0) indicates that no external port range is specified, i.e. that the range consists only of {{param|ExternalPort}}.
          If {{param|ExternalPort}} is zero (wildcard), the value of this parameter MUST be ignored.
          If specified, the value of this parameter MUST be greater than or equal to the value of {{param|ExternalPort}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="InternalPort" access="readWrite" dmr:version="1.0">
        <description>
          The port on {{param|InternalClient}} that the gateway SHOULD forward connection requests to.  A value of zero (0) is not allowed.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PortMappingProtocol" access="readWrite" dmr:version="1.0">
        <description>
          The protocol of the port mapping.  {{enum}}
          At most one entry in this table can exist with all of the same values for {{param|RemoteHost}}, {{param|ExternalPort}}, and {{param}}.
        </description>
        <syntax>
          <string>
            <enumeration value="TCP"/>
            <enumeration value="UDP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InternalClient" access="readWrite" dmr:version="1.0">
        <description>
          The IP address or DNS host name of an internal client (on the LAN).
          Support for an IP address is mandatory.  If {{param}} is specified as an IP address and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with the original IP address.
          Support for DNS host names is OPTIONAL.  If {{param}} is specified as a DNS host name and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with this LAN device.  In this case, it is the responsibility of the CPE to maintain the name-to-address mapping in the event of IP address changes.  This can be accomplished, for example, by assigning the DNS host name via use of DHCP option 12 (Host Name) or option 81 (FQDN).  Note that the ACS can learn the host name associated with a given LAN device via the ''Hosts'' table ({{object|InternetGatewayDevice.LANDevice.{i}.Hosts}}).
          Read access to this parameter MUST always return the exact value that was last set by the ACS.  For example, if the internal client is set to a DNS host name, it MUST read back as a DNS host name and not as an IP address.
          {{empty}} indicates an unconfigured {{param}}. If this parameter is unconfigured, this port mapping MUST NOT be operational.
          It MUST be possible to set the {{param}} to the broadcast IP address 255.255.255.255 for UDP mappings. This is to enable multiple NAT clients to use the same well-known port simultaneously.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PortMappingDescription" access="readWrite" dmr:version="1.0">
        <description>
          User-readable description of this port mapping.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.0">
      <description>
        This object contains statistics for all connections within the same ''WANConnectionDevice'' that share a common MAC address.  The contents of this object SHOULD be identical for each such connection.
        This object is intended only for ''WANConnectionDevice''s that can support an Ethernet-layer on this interface (e.g., ''PPPoE'', ''IPoE'').
      </description>
      <parameter name="EthernetBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes transmitted, including framing characters, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of bytes received, including framing characters, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets transmitted over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.0">
        <description>
          The total number of packets which were received over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets that could not be transmitted because of errors, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetDiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetDiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.  One possible reason for discarding such a packet could be to free up buffer space. 
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetMulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission, including those that were discarded or not sent, which were addressed to a multicast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetMulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a multicast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets requested for transmission, including those that were discarded or not sent, which were addressed to a broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of received packets which were addressed to a broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          The total number of packets which were discarded because of an unknown or unsupported protocol, received over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.CaptivePortal." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.4">
      <description>
        This object contains parameters relating to the captive portal configuration on the CPE.
        The captive portal configuration defines the CPE's WAN-destined  HTTP (port 80) traffic redirect behavior.
        When the captive portal is disabled, WAN-destined HTTP (port 80) traffic MUST be permitted to all destinations.
        When the captive portal is enabled, WAN-destined HTTP (port 80) traffic MUST be permitted only to destinations listed in the {{param|AllowedList}}; traffic to all other destinations MUST be redirected to the {{param|CaptivePortalURL}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="1.4">
        <description>
          Enables or disables the captive portal.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="1.4">
        <description>
          Indicates the status of the captive portal.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_URLEmpty">
              <description>
                {{param|CaptivePortalURL}} is {{empty}}
              </description>
            </enumeration>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AllowedList" access="readWrite" dmr:version="1.4">
        <description>
          IP addresses to which HTTP (port 80) traffic MUST always be permitted, regardless of whether the captive portal is enabled.
          Each entry in the list MUST be either an IP address or an IP subnet specified using variable length subnet mask (VLSM) syntax.
          An IP subnet is specified as an IP address followed (with no intervening white space) by "/n", where  n is an integer in the range  0-32; this is equivalent to a subnet mask consisting of n 1s followed by 32 minus n 0s.
          For example, 1.2.3.4 specifies a single IP address, and 1.2.3.4/24 specifies a class C subnet with subnet mask 255.255.255.0.
          The maximum length of a single entry (plus comma) is 19 characters so 10000 bytes is sufficient for more than 500 IP addresses and/or IP subnets.
        </description>
        <syntax>
          <list>
            <size maxLength="10000"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="CaptivePortalURL" access="readWrite" dmr:version="1.4">
        <description>
          Captive portal URL to which WAN-destined HTTP (port 80) traffic to destinations not listed in the {{param|AllowedList}} will be redirected.
          The captive portal URL MUST be an HTTP (not HTTPS) URL.
          The CPE MUST permit the captive portal URL to be set to {{empty}}, which has the effect of disabling the captive portal (if {{param|Enable}} is {{true}} and the captive portal URL is {{empty}}, {{param|Status}} MUST be {{enum|Error_URLEmpty|Status}}).
        </description>
        <syntax>
          <string>
            <size maxLength="2000"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.TraceRouteDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.4">
      <description>
        This object is defines access to an IP-layer trace-route test for the specified IP interface.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Indicates availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_MaxHopCountExceeded" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="1.4">
        <description>
          {{reference|the WAN or LAN IP-layer interface over which the test is to be performed}}  This identifies the source IP address to use when performing the test.
          The following is a WAN interface example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''
          The following is a LAN interface example: ''InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1''
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite" dmr:version="1.4">
        <description>
          Host name or address of the host to find a route to
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfTries" access="readWrite" dmr:version="1.4">
        <description>
          Number of tries per hop. Set prior to running Diagnostic.  By default, the CPE SHOULD set this value to 3.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="3"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="1.4">
        <description>
          Timeout in milliseconds for the trace route test.  By default the CPE SHOULD set this value to 5000.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DataBlockSize" access="readWrite" dmr:version="1.4">
        <description>
          Size of the data block in bytes to be sent for each trace route.  By default, the CPE SHOULD set this value to 38.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="1.4">
        <description>
          DiffServ codepoint to be used for the test packets.  By default the CPE SHOULD set this value to 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxHopCount" access="readWrite" dmr:version="1.4">
        <description>
          The maximum number of hop used in outgoing probe packets (max TTL).  By default the CPE SHOULD set this value to 30.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="64"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Result parameter indicating the response time in milliseconds the most recent trace route test.  If a route could not be determined, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RouteHopsNumberOfEntries" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Number of entries in the {{object|RouteHops}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.{i}." access="readOnly" numEntriesParameter="RouteHopsNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.4" dmr:noUniqueKeys="true">
      <description>
        Contains the array of results returned.  If a route could not be determined, this array will be empty
      </description>
      <parameter name="HopHost" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Result parameter indicating the Host Name if DNS is able to resolve or IP Address of a hop along the discovered route.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HopHostAddress" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          If this parameter is not {{empty}} it will contain the last IP address of the host returned for this hop and the {{param|HopHost}} will contain the Host Name returned from the reverse DNS query.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HopErrorCode" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Contains the error code returned for this hop  This code is directly from the ICMP CODE field.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HopRTTimes" access="readOnly" activeNotify="canDeny" dmr:version="1.4">
        <description>
          Contains one or more round trip times in milliseconds (one for each repetition) for this hop.
        </description>
        <syntax>
          <list>
            <size maxLength="16"/>
          </list>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.NSLookupDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="1.5">
      <description>
        This object defines access to an IP-layer NS Lookup test for the specified IP interface.
        When initiated, the NS Lookup test will contact {{param|DNSServer}} and look up {{param|HostName}} {{param|NumberOfRepetitions}} times.
        There will be a {{object|Result}} instance for each time the device performs a DNS lookup, which is determined by the value of {{param|NumberOfRepetitions}}.
        Any previous {{object|Result}} instances are removed when a new test is initiated.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="1.5">
        <description>
          Indicates availability of diagnostic data. {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the DiagnosticsState to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the Error values listed above.
          If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code "8 DIAGNOSTICS COMPLETE" in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error_DNSServerNotResolved" access="readOnly">
              <description>
                Unable to resolve DNSServer Name
              </description>
            </enumeration>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="1.5">
        <description>
          {{reference}} This parameter specifies the IP-layer interface over which the test is to be performed (i.e. the source IP address to use when performing the test). 
          If {{empty}} is specified, the CPE MUST use its routing policy (Forwarding table entries), if necessary, to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostName" access="readWrite" dmr:version="1.5">
        <description>
          Specifies the Host Name that NS Lookup is to look for. The current domain name MUST be used unless the name is a fully qualified name.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DNSServer" access="readWrite" dmr:version="1.5">
        <description>
          Specifies the DNS Server name or IP address that NS Lookup is to use for the lookup. The name of this server will be resolved using the default DNS server unless an IP address is provided.
          If {{empty}} is specified, the device's default DNS server will be used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="1.5">
        <description>
          Timeout in {{units}} that indicates that a request has failed.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" dmr:version="1.5">
        <description>
          The number of times the device SHOULD repeat the execution of the NSLookup using the same input parameters.  If the diagnostics test fails the CPE MAY terminate the test without completing the full number of repetitions. 
          Each repetition will use a Result instance to hold the NSLookup result data.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          Number of successfully executed repetitions.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ResultNumberOfEntries" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          {{numentries}}
          Total number of Result entries from the most recent invocation of the test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.NSLookupDiagnostics.Result.{i}." access="readOnly" numEntriesParameter="ResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="1.5" dmr:noUniqueKeys="true">
      <description>
        Results from the most recent invocation of the test, one instance per repetition.
      </description>
      <parameter name="Status" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          Result Parameter to represent whether the NS Lookup was successful or not.  
          Errors for individual Result instances do not get bubbled up to {{param|#.DiagnosticsState}}.  
          A failure on a specific attempt does not mean that the overall test failed, but a failure on all attempts means that {{param|#.DiagnosticsState}} SHOULD be {{enum|Error_Other|#.DiagnosticsState}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Success"/>
            <enumeration value="Error_DNSServerNotAvailable"/>
            <enumeration value="Error_HostNameNotResolved"/>
            <enumeration value="Error_Timeout"/>
            <enumeration value="Error_Other"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AnswerType" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          Result parameter to represent whether the answer is Authoritative or not.
        </description>
        <syntax>
          <string>
            <enumeration value="None">
              <description>
                Indicates that the NS Lookup failed to find the host.
              </description>
            </enumeration>
            <enumeration value="Authoritative"/>
            <enumeration value="NonAuthoritative"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostNameReturned" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          Result parameter to represent the fully qualified name for the Host Name in the calling parameter (e.g. HostName.DomainName); if no response was provided, then this parameter is {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPAddresses" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          {{list}} Indicates the IP Address results returned by the NS Lookup; if no response was provided, then this parameter is {{empty}}.
        </description>
        <syntax>
          <list maxItems="10">
            <size/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DNSServerIP" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          Result parameter to represent the actual DNS Server IP address that the NS Lookup used.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="1.5">
        <description>
          Response time (for the first response packet) in {{units}}, or 0 if no response was received.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The WiFi object is based on the WiFi Alliance 802.11 specifications ({{bibref|802.11-2007}}). It defines interface objects ({{object|Radio}} and {{object|SSID}}), and application objects ({{object|AccessPoint}} and {{object|EndPoint}}).
      </description>
      <parameter name="RadioNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SSIDNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AccessPointNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EndPointNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.Radio.{i}." access="readOnly" numEntriesParameter="RadioNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        This object models an 802.11 wireless radio on a device (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
        If the device can establish more than one connection simultaneously (e.g. a dual radio device), a separate {{object}} instance MUST be used for each physical radio of the device. See {{bibref|TR-181i2|Appendix III.1}} for additional information.
        Note: A dual-band single-radio device (e.g. an 802.11a/b/g radio) can be configured to operate at 2.4 or 5 GHz frequency bands, but only a single frequency band is used to transmit/receive at a given time. Therefore, a single {{object}} instance is used even for a dual-band radio.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the radio.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the radio (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface). 
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the radio as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the radio entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readOnly" dmr:version="2.0">
        <description>
          The maximum PHY bit rate supported by this interface (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SupportedFrequencyBands" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items indicate the frequency bands at which the radio can operate.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="2.4GHz"/>
            <enumeration value="5GHz"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingFrequencyBand" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the frequency band at which the radio is operating. 
          If the radio supports multiple bands, and {{param}} is changed, then all parameters whose value is not valid for the new frequency band (e.g. {{param|Channel}}) MUST be set to a valid value (according to some CPE vendor-specific behavior).
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="SupportedFrequencyBands"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedStandards" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items indicate which IEEE 802.11 standards this {{object}} instance can support simultaneously, in the frequency band specified by {{param|OperatingFrequencyBand}}.  {{enum}}
          Each value indicates support for the indicated standard.
          If {{param|OperatingFrequencyBand}} is set to {{enum|2.4GHz|OperatingFrequencyBand}}, only values {{enum|b}}, {{enum|g}}, {{enum|n}} are allowed.
          If {{param|OperatingFrequencyBand}} is set to {{enum|5GHz|OperatingFrequencyBand}}, only values {{enum|a}}, {{enum|n}}, {{enum|ac}} are allowed.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="a">
              <description>
                {{bibref|802.11a-1999}}
              </description>
            </enumeration>
            <enumeration value="b">
              <description>
                {{bibref|802.11b-1999}}
              </description>
            </enumeration>
            <enumeration value="g">
              <description>
                {{bibref|802.11g-2003}}
              </description>
            </enumeration>
            <enumeration value="n">
              <description>
                {{bibref|802.11n-2009}}
              </description>
            </enumeration>
            <enumeration value="ac">
              <description>
                {{bibref|802.11ac-2013}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingStandards" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} List items indicate which IEEE 802.11 standard this {{object}} instance is configured for.
          Each value indicates support for the indicated standard.
          If {{param|OperatingFrequencyBand}} is set to {{enum|2.4GHz|OperatingFrequencyBand}}, only values {{enum|b}}, {{enum|g}}, {{enum|n}} are allowed.
          If {{param|OperatingFrequencyBand}} is set to {{enum|5GHz|OperatingFrequencyBand}}, only values {{enum|a}}, {{enum|n}}, {{enum|ac}} are allowed.
          For example, a value of "g,b" (or "b,g" - order is not important) means that the 802.11g standard {{bibref|802.11g-2003}} is used with a backwards-compatible mode for 802.11b {{bibref|802.11b-1999}}. A value of "g" means that only the 802.11g standard can be used.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="SupportedStandards"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PossibleChannels" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items represent possible radio channels for the wireless standard (a, b, g, n) and the regulatory domain. 
          Ranges in the form "n-m" are permitted.
          For example, for 802.11b and North America, would be "1-11".
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ChannelsInUse" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent channels that the radio determines to be currently in use (including any that it is using itself).
          Ranges in the form "n-m" are permitted.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Channel" access="readWrite" dmr:version="2.0">
        <description>
          The current radio channel used by the connection. To request automatic channel selection, set {{param|AutoChannelEnable}} to {{true}}.
          Whenever {{param|AutoChannelEnable}} is {{true}}, the value of the {{param}} parameter MUST be the channel selected by the automatic channel selection procedure.
          Note: Valid {{param}} values depend on the {{param|OperatingFrequencyBand}} and {{param|RegulatoryDomain}} values specified.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AutoChannelSupported" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether automatic channel selection is supported by this radio. If {{false}}, then {{param|AutoChannelEnable}} MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AutoChannelEnable" access="readWrite" dmr:version="2.0">
        <description>
          Enable or disable automatic channel selection.
          Set to {{false}} to disable the automatic channel selection procedure, in which case the currently selected channel remains selected.
          Set to {{true}} to enable the automatic channel selection procedure. This procedure MUST automatically select the channel, and MAY also change it subsequently.
          {{param}} MUST automatically change to {{false}} whenever the channel is manually selected, i.e. whenever the {{param|Channel}} parameter is written.
          Whenever {{param}} is {{true}}, the value of the {{param|Channel}} parameter MUST be the channel selected by the automatic channel selection procedure.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AutoChannelRefreshPeriod" access="readWrite" dmr:version="2.0">
        <description>
          The time period in {{units}} between two consecutive automatic channel selections. A value of 0 means that the automatic channel selection is done only at boot time.
          This parameter is significant only if {{param|AutoChannelEnable}} is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="OperatingChannelBandwidth" access="readWrite" dmr:version="2.0">
        <description>
          The preferred channel bandwidth to be used (applicable to 802.11n and 802.11ac specifications only).
        </description>
        <syntax>
          <string>
            <enumeration value="20MHz"/>
            <enumeration value="40MHz">
              <description>
                wide mode
              </description>
            </enumeration>
            <enumeration value="80MHz">
              <description>
                802.11ac only
              </description>
            </enumeration>
            <enumeration value="160MHz">
              <description>
                802.11ac only
              </description>
            </enumeration>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentOperatingChannelBandwidth" access="readOnly" dmr:version="2.11">
        <description>
          The channel bandwidth currently in use.
        </description>
        <syntax>
          <string>
            <enumeration value="20MHz"/>
            <enumeration value="40MHz"/>
            <enumeration value="80MHz"/>
            <enumeration value="160MHz"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExtensionChannel" access="readWrite" dmr:version="2.0">
        <description>
          The secondary extension channel position, applicable when operating in wide channel mode (i.e. when {{param|OperatingChannelBandwidth}} is set to {{enum|40MHz|OperatingChannelBandwidth}} or {{enum|Auto|OperatingChannelBandwidth}}).
        </description>
        <syntax>
          <string>
            <enumeration value="AboveControlChannel"/>
            <enumeration value="BelowControlChannel"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GuardInterval" access="readWrite" dmr:version="2.0">
        <description>
          The guard interval value between OFDM symbols (applicable to 802.11n and 802.11ac specifications only).
        </description>
        <syntax>
          <string>
            <enumeration value="400nsec"/>
            <enumeration value="800nsec"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MCS" access="readWrite" dmr:version="2.0">
        <description>
          The Modulation Coding Scheme index (applicable to 802.11n and 802.11ac specifications only). Values from 0 to 15 MUST be supported ({{bibref|802.11n-2009}}). Values from 0 to 9 MUST be supported for {{bibref|802.11ac-2013}}.  A value of -1 indicates automatic selection of the MCS index.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="15"/>
            <range minInclusive="16" maxInclusive="31"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="TransmitPowerSupported" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items represent supported transmit power levels as {{units}} of full power. For example, "0,25,50,75,100". 
          A -1 item indicates auto mode (automatic decision by CPE). Auto mode allows the ''Radio'' to adjust transmit power accordingly. For example, this can be useful for power-save modes such as EU-CoC, where the ''Radio'' can adjust power according to activity in the CPE.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <int>
            <range minInclusive="-1" maxInclusive="100"/>
            <units value="percentage"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="TransmitPower" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the current transmit power level as a {{units}} of full power. The value MUST be one of the values reported by the {{param|TransmitPowerSupported}} parameter. A value of -1 indicates auto mode (automatic decision by CPE).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="100"/>
            <units value="percentage"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="IEEE80211hSupported" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether IEEE 802.11h {{bibref|802.11h-2003}} functionality is supported by this radio. The value can be {{true}} only if the 802.11a or the 802.11n@5GHz standard is supported (i.e. {{param|SupportedFrequencyBands}} includes {{enum|5GHz|SupportedFrequencyBands}} and {{param|SupportedStandards}} includes {{enum|a|SupportedStandards}} and/or {{enum|n|SupportedStandards}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IEEE80211hEnabled" access="readWrite" dmr:version="2.0">
        <description>
          Indicates whether IEEE 802.11h functionality is enabled on this radio. The value can be {{true}} only if the 802.11a or the 802.11n@5GHz standard is supported and enabled (i.e. {{param|OperatingFrequencyBand}} is {{enum|5GHz|OperatingFrequencyBand}} and {{param|OperatingStandards}} includes {{enum|a|OperatingStandards}} and/or {{enum|n|OperatingStandards}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RegulatoryDomain" access="readWrite" dmr:version="2.0">
        <description>
          The 802.11d Regulatory Domain. First two octets are {{bibref|ISO3166-1}} two-character country code. The third octet is either " " (all environments), "O" (outside) or "I" (inside).
        </description>
        <syntax>
          <string>
            <size minLength="3" maxLength="3"/>
            <pattern value="[A-Z][A-Z][ OI]"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RetryLimit" access="readWrite" dmr:version="2.8">
        <description>
          The maximum number of retransmissions of a short packet i.e. a packet that is no longer than the {{param|RTSThreshold}}. This corresponds to IEEE 802.11 parameter ''dot11ShortRetryLimit''  {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CCARequest" access="readWrite" dmr:version="2.8">
        <description>
          A request for the clear channel assessment (CCA) report in the format specified in {{bibref|802.11-2012|Clause 8.4.2.23.3}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="11" maxLength="11"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="CCAReport" access="readOnly" dmr:version="2.8">
        <description>
          The clear channel assessment (CCA) report in the format specified in {{bibref|802.11-2012|Clause 8.4.2.24.3}}.
          When read, the value of this parameter MUST correspond to {{param|CCARequest}}.  How this is achieved is a local matter to the CPE.
          If this parameter is read before a CCARequest has been issued, then its value is {{empty}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="12" maxLength="12"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="RPIHistogramRequest" access="readWrite" dmr:version="2.8">
        <description>
          A request for a received power indicator (RPI) histogram in the format specified in {{bibref|802.11-2012|Clause 8.4.2.23.4}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="11" maxLength="11"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="RPIHistogramReport" access="readOnly" dmr:version="2.8">
        <description>
          Received power indicator (RPI) histogram report in the format specified in {{bibref|802.11-2012|Clause 8.4.2.24.4}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="19" maxLength="19"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="FragmentationThreshold" access="readWrite" dmr:version="2.8">
        <description>
          This specifies the current maximum size, in {{units}}, of the MPDU that can be delivered to the PHY. This parameter is based on ''dot11FragmentationThreshold'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="octets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RTSThreshold" access="readWrite" dmr:version="2.8">
        <description>
          This indicates the number of {{units}} in an MPDU, below which an RTS/CTS handshake is not performed. This parameter is based on ''dot11RTSThreshold'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="octets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LongRetryLimit" access="readWrite" dmr:version="2.8">
        <description>
          This indicates the maximum number of transmission attempts of a frame, the length of which is greater than {{param|RTSThreshold}}, that will be made before a failure condition is indicated. This parameter is based on ''dot11LongRetryLimit'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BeaconPeriod" access="readWrite" dmr:version="2.8">
        <description>
          Time interval between transmitting beacons (expressed in {{units}}). This parameter is based on ''dot11BeaconPeriod'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DTIMPeriod" access="readWrite" dmr:version="2.8">
        <description>
          This specifies the number of beacon intervals that elapse between transmission of Beacon frames containing a TIM element whose DTIM Count field is 0. This parameter is based on ''dot11DTIMPeriod'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketAggregationEnable" access="readWrite" dmr:version="2.8">
        <description>
          This determines whether or not packet aggregation (commonly called "frame aggregation") is enabled. This applies only to 802.11n.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PreambleType" access="readWrite" dmr:version="2.8">
        <description>
          The type of preamble. Longer preambles (more overhead) are needed by 802.11g to coexist with legacy systems 802.11 and 802.11b.
        </description>
        <syntax>
          <string>
            <enumeration value="short"/>
            <enumeration value="long"/>
            <enumeration value="auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BasicDataTransmitRates" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} The set of data rates, in ''Mbps'', that have to be supported by all stations that desire to join this BSS. The stations have to be able to receive and transmit at each of the data rates listed in {{param}}. For example, a value of "1,2", indicates that stations support 1 Mbps and 2 Mbps. Most control packets use a data rate in {{param}}.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OperationalDataTransmitRates" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} Maximum access point data transmit rates in ''Mbps'' for unicast frames (a superset of {{param|BasicDataTransmitRates}}). Given the value of {{param|BasicDataTransmitRates}} from the example above, {{param}} might be "1,2,5.5,11", indicating that unicast frames can additionally be transmitted at 5.5 Mbps and 11 Mbps.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SupportedDataTransmitRates" access="readOnly" dmr:version="2.8">
        <description>
          {{list}} Data transmit rates in ''Mbps'' for unicast frames at which the access point will permit a station to connect (a subset of {{param|OperationalDataTransmitRates}}). Given the values of {{param|BasicDataTransmitRates}} and {{param|OperationalDataTransmitRates}} from the examples above, {{param}} might be "1,2,5.5", indicating that the AP will only permit connections at 1 Mbps, 2 Mbps and 5.5 Mbps, even though it could theoretically accept connections at 11 Mbps.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.Radio.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface. Packet counters here count 802.11 WiFi frames. See {{bibref|TR-181i2a5|Appendix III}} for further details. The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2a5|Section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PLCPErrorCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were received with a detected Physical Layer Convergence Protocol (PLCP) header error.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FCSErrorCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were received with a detected FCS error. This parameter is based on dot11FCSErrorCount from {{bibref|802.11-2012|Annex C}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InvalidMACCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were received with a detected invalid MAC header error.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsOtherReceived" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were received, but which were destined for a MAC address that is not associated with this interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Noise" access="readOnly" dmr:version="2.8">
        <description>
          An indicator of average noise strength received at this radio, measured in {{units}}. This measurement of non-IEEE 802.11 noise power is made by sampling the channel when virtual carrier sense indicates idle and this radio is neither transmitting nor receiving a frame.
        </description>
        <syntax>
          <int>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.NeighboringWiFiDiagnostic." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        This object defines access to other WiFi SSIDs that this device is able to receive.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
            <enumeration value="Completed" access="readOnly" status="deprecated"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ResultNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.NeighboringWiFiDiagnostic.Result.{i}." access="readOnly" numEntriesParameter="ResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        Neighboring SSID table. This table models the other WiFi SSIDs that this device is able to receive.
      </description>
      <uniqueKey>
        <parameter ref="BSSID"/>
      </uniqueKey>
      <parameter name="Radio" access="readOnly" dmr:version="2.7">
        <description>
          The Radio that detected the neighboring WiFi SSID.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="InternetGatewayDevice.WiFi.Radio." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SSID" access="readOnly" dmr:version="2.7">
        <description>
          The current service set identifier in use by the neighboring WiFi SSID. The value MAY be empty for hidden SSIDs.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BSSID" access="readOnly" dmr:version="2.7">
        <description>
          The BSSID used for the neighboring WiFi SSID.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Mode" access="readOnly" dmr:version="2.7">
        <description>
          The mode the neighboring WiFi radio is operating in.
        </description>
        <syntax>
          <string>
            <enumeration value="AdHoc"/>
            <enumeration value="Infrastructure"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Channel" access="readOnly" dmr:version="2.7">
        <description>
          The current radio channel used by the neighboring WiFi radio.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SignalStrength" access="readOnly" dmr:version="2.7">
        <description>
          An indicator of radio signal strength (RSSI) of the neighboring WiFi radio measured in {{units}}, as an average of the last 100 packets received.
        </description>
        <syntax>
          <int>
            <range minInclusive="-200" maxInclusive="0"/>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SecurityModeEnabled" access="readOnly" dmr:version="2.7">
        <description>
          The type of encryption the neighboring WiFi SSID advertises.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="WEP"/>
            <enumeration value="WPA"/>
            <enumeration value="WPA2"/>
            <enumeration value="WPA-WPA2"/>
            <enumeration value="WPA-Enterprise"/>
            <enumeration value="WPA2-Enterprise"/>
            <enumeration value="WPA-WPA2-Enterprise"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EncryptionMode" access="readOnly" dmr:version="2.7">
        <description>
          The type of encryption the neighboring WiFi SSID advertises.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="TKIP"/>
            <enumeration value="AES"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingFrequencyBand" access="readOnly" dmr:version="2.7">
        <description>
          Indicates the frequency band at which the radio this SSID instance is operating.
        </description>
        <syntax>
          <string>
            <enumeration value="2.4GHz"/>
            <enumeration value="5GHz"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedStandards" access="readOnly" dmr:version="2.7">
        <description>
          {{list}} List items indicate which IEEE 802.11 standards this {{object}} instance can support simultaneously, in the frequency band specified by {{param|OperatingFrequencyBand}}. {{enum}}
          Each value indicates support for the indicated standard.
          If {{param|OperatingFrequencyBand}} is set to {{enum|2.4GHz|OperatingFrequencyBand}}, only values {{enum|b}}, {{enum|g}}, {{enum|n}} are allowed.
          If {{param|OperatingFrequencyBand}} is set to {{enum|5GHz|OperatingFrequencyBand}}, only values {{enum|a}}, {{enum|n}}, {{enum|ac}} are allowed.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="a">
              <description>
                {{bibref|802.11a-1999}}
              </description>
            </enumeration>
            <enumeration value="b">
              <description>
                {{bibref|802.11b-1999}}
              </description>
            </enumeration>
            <enumeration value="g">
              <description>
                {{bibref|802.11g-2003}}
              </description>
            </enumeration>
            <enumeration value="n">
              <description>
                {{bibref|802.11n-2009}}
              </description>
            </enumeration>
            <enumeration value="ac">
              <description>
                {{bibref|802.11ac-2013}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingStandards" access="readOnly" dmr:version="2.7">
        <description>
          {{list}} List items indicate which IEEE 802.11 standard that is detected for this {{object}}.
          Each value indicates support for the indicated standard.
          If {{param|OperatingFrequencyBand}} is set to {{enum|2.4GHz|##.Radio.{i}.SupportedFrequencyBands}}, only values {{enum|b}}, {{enum|g}}, {{enum|n}} are allowed.
          If {{param|OperatingFrequencyBand}} is set to {{enum|5GHz|##.Radio.{i}.SupportedFrequencyBands}}, only values {{enum|a}}, {{enum|n}}, {{enum|ac}} are allowed.
          For example, a value of "g,b" (or "b,g" - order is not important) means that the 802.11g standard {{bibref|802.11g-2003}} is used with a backwards-compatible mode for 802.11b {{bibref|802.11b-1999}}. A value of "g" means that only the 802.11g standard can be used.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="SupportedStandards"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingChannelBandwidth" access="readOnly" dmr:version="2.7">
        <description>
          Indicates the bandwidth at which the channel is operating.
        </description>
        <syntax>
          <string>
            <enumeration value="20MHz"/>
            <enumeration value="40MHz"/>
            <enumeration value="80MHz"/>
            <enumeration value="160MHz"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BeaconPeriod" access="readOnly" dmr:version="2.7">
        <description>
          Time interval (in {{units}}) between transmitting beacons.
        </description>
        <syntax>
          <unsignedInt>
            <units value="ms"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Noise" access="readOnly" dmr:version="2.7">
        <description>
          Indicator of average noise strength (in {{units}}) received from the neighboring WiFi radio.
        </description>
        <syntax>
          <int>
            <range minInclusive="-200" maxInclusive="0"/>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="BasicDataTransferRates" access="readOnly" dmr:version="2.7">
        <description>
          {{list}} Basic data transmit rates (in Mbps) for the SSID.  For example, if {{param}} is "1,2", this indicates that the SSID is operating with basic rates of 1 Mbps and 2 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SupportedDataTransferRates" access="readOnly" dmr:version="2.7">
        <description>
          {{list}} Data transmit rates (in Mbps) for unicast frames at which the SSID will permit a station to connect. For example, if {{param}} is "1,2,5.5", this indicates that the SSID will only permit connections at 1 Mbps, 2 Mbps and 5.5 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="DTIMPeriod" access="readOnly" dmr:version="2.7">
        <description>
          The number of beacon intervals that elapse between transmission of Beacon frames containing a TIM element whose DTIM count field is 0. This value is transmitted in the DTIM Period field of beacon frames. {{bibref|802.11-2012}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="ms"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.SSID.{i}." access="readWrite" numEntriesParameter="SSIDNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        WiFi SSID table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}), where table entries model the MAC layer. A WiFi SSID entry is typically stacked on top of a {{object|#.Radio}} object.
        WiFi SSID is also a multiplexing layer, i.e. more than one {{object}} can be stacked above a single {{object|#.Radio}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="BSSID"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the SSID entry.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the SSID entry (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface). 
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the SSID entry as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the SSID entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="BSSID" access="readOnly" dmr:version="2.0">
        <description>
          The Basic Service Set ID. 
          This is the MAC address of the access point, which can either be local (when this instance models an access point SSID) or remote (when this instance models an end point SSID).
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC address of this interface. 
          If this instance models an access point SSID, {{param}} is the same as {{param||BSSID}}. 
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="SSID" access="readWrite" dmr:version="2.0">
        <description>
          The current service set identifier in use by the connection. The SSID is an identifier that is attached to packets sent over the wireless LAN that functions as an ID for joining a particular radio network (BSS).
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.SSID.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface. Packet counters here count 802.11 WiFi frames. See {{bibref|TR-181i2a5|Appendix III}} for further details. The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2a5|Section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors. These can be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly" dmr:version="2.7">
        <description>
          The total number of transmitted packets which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FailedRetransCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were not transmitted successfully due to the number of retransmission attempts exceeding an 802.11 retry limit. This parameter is based on dot11FailedCount from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RetryCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were successfully transmitted after one or more retransmissions. This parameter is based on dot11RetryCount from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MultipleRetryCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were successfully transmitted after more than one retransmission. This parameter is based on dot11MultipleRetryCount from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ACKFailureCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of expected ACKs that were never received. This parameter is based on dot11ACKFailureCount from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AggregatedPacketCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of aggregated packets that were transmitted. This applies only to 802.11n and 802.11ac.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.AccessPoint.{i}." access="readWrite" numEntriesParameter="AccessPointNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object models an 802.11 connection from the perspective of a wireless access point. Each {{object}} entry is associated with a particular {{object|#.SSID}} interface instance via the {{param|SSIDReference}} parameter. 
        For enabled table entries, if {{param|SSIDReference}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SSIDReference"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this access point.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the status of this access point.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="SSIDReference" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.SSID." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SSIDAdvertisementEnabled" access="readWrite" dmr:version="2.0">
        <description>
          Indicates whether or not beacons include the SSID name.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RetryLimit" access="readWrite" status="deprecated" dmr:version="2.0">
        <description>
          The maximum number of retransmission for a packet. This corresponds to IEEE 802.11 parameter ''dot11ShortRetryLimit''.
          This parameter is DEPRECATED because it is really a {{object|#.Radio}} attribute.  Use {{param|#.Radio.{i}.RetryLimit}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="WMMCapability" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether this access point supports WiFi Multimedia (WMM) Access Categories (AC).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UAPSDCapability" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether this access point supports WMM Unscheduled Automatic Power Save Delivery (U-APSD).
          Note: U-APSD support implies WMM support.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="WMMEnable" access="readWrite" dmr:version="2.0">
        <description>
          Whether WMM support is currently enabled. When enabled, this is indicated in beacon frames.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UAPSDEnable" access="readWrite" dmr:version="2.0">
        <description>
          Whether U-APSD support is currently enabled. When enabled, this is indicated in beacon frames.
          Note: U-APSD can only be enabled if WMM is also enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxAssociatedDevices" access="readWrite" dmr:version="2.4">
        <description>
          The maximum number of devices that can simultaneously be connected to the access point.
          A value of 0 means that there is no specific limit.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="IsolationEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables device isolation.
          A value of {{true}} means that the devices connected to the Access Point are isolated from all other devices within the home network (as is typically the case for a Wireless Hotspot).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddressControlEnabled" access="readWrite" dmr:version="2.9">
        <description>
          Indicates whether or not MAC Address Control is enabled on this {{object|#}}.  MAC Address Control limits client devices to those whose hardware addresses match the {{param|AllowedMACAddress}} list.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AllowedMACAddress" access="readWrite" dmr:version="2.9">
        <description>
          Hardware addresses of client devices that are allowed to associate with this {{object|#}} if {{param|MACAddressControlEnabled}} is {{true}}.
        </description>
        <syntax>
          <list/>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.AccessPoint.{i}.Security." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains security related parameters that apply to a CPE acting as an Access Point {{bibref|802.11-2007}}.
      </description>
      <parameter name="Reset" access="readWrite" dmr:version="2.4">
        <description>
          When set to {{true}}, this {{object|#}} instance's WiFi security settings are reset to their factory default values. The affected settings include {{param|ModeEnabled}}, {{param|WEPKey}}, {{param|PreSharedKey}} , {{param|KeyPassphrase}} and {{param|#.WPS.PIN}} (if applicable).
          If the parameter cannot be set, the CPE MUST reject the request as an invalid parameter value. Possible failure reasons include a lack of default values or if {{param|ModeEnabled}} is an Enterprise type, i.e. {{enum|WPA-Enterprise|ModesSupported}}, {{enum|WPA2-Enterprise|ModesSupported}} or {{enum|WPA-WPA2-Enterprise|ModesSupported}}.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ModesSupported" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates which security modes this {{object|#}} instance is capable of supporting.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="None"/>
            <enumeration value="WEP-64"/>
            <enumeration value="WEP-128"/>
            <enumeration value="WPA-Personal"/>
            <enumeration value="WPA2-Personal"/>
            <enumeration value="WPA-WPA2-Personal"/>
            <enumeration value="WPA-Enterprise"/>
            <enumeration value="WPA2-Enterprise"/>
            <enumeration value="WPA-WPA2-Enterprise"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModeEnabled" access="readWrite" dmr:version="2.0">
        <description>
          Indicates which security mode is enabled.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="ModesSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WEPKey" access="readWrite" dmr:version="2.0">
        <description>
          A WEP key expressed as a hexadecimal string.
          {{param}} is used only if {{param|ModeEnabled}} is set to {{enum|WEP-64|ModeEnabled}} or {{enum|WEP-128|ModeEnabled}}.
          A 5 byte {{param}} corresponds to security mode {{enum|WEP-64|ModeEnabled}} and a 13 byte {{param}} corresponds to security mode {{enum|WEP-128|ModeEnabled}}.
        </description>
        <syntax hidden="true">
          <hexBinary>
            <size minLength="5" maxLength="5"/>
            <size minLength="13" maxLength="13"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="PreSharedKey" access="readWrite" dmr:version="2.0">
        <description>
          A literal PreSharedKey (PSK) expressed as a hexadecimal string.
          {{param}} is only used if {{param|ModeEnabled}} is set to {{enum|WPA-Personal|ModeEnabled}} or {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA-WPA2-Personal|ModeEnabled}}.
          If {{param|KeyPassphrase}} is written, then {{param}} is immediately generated. The ACS SHOULD NOT set both the {{param|KeyPassphrase}} and the {{param}} directly (the result of doing this is undefined).
        </description>
        <syntax hidden="true">
          <hexBinary>
            <size maxLength="32"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="KeyPassphrase" access="readWrite" dmr:version="2.0">
        <description>
          A passphrase from which the {{param|PreSharedKey}} is to be generated, for {{enum|WPA-Personal|ModeEnabled}} or {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA-WPA2-Personal|ModeEnabled}} security modes.
          If {{param}} is written, then {{param|PreSharedKey}} is immediately generated. The ACS SHOULD NOT set both the {{param}} and the {{param|PreSharedKey}} directly (the result of doing this is undefined). The key is generated as specified by WPA, which uses PBKDF2 from PKCS #5: Password-based Cryptography Specification Version 2.0 ({{bibref|RFC2898}}).
        </description>
        <syntax hidden="true">
          <string>
            <size minLength="8" maxLength="63"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RekeyingInterval" access="readWrite" dmr:version="2.0">
        <description>
          The interval (expressed in {{units}}) in which the keys are re-generated. 
          This is applicable to WPA, WPA2 and Mixed (WPA-WPA2) modes in Personal or Enterprise mode (i.e. when {{param|ModeEnabled}} is set to a value other than {{enum|None|ModeEnabled}} or {{enum|WEP-64|ModeEnabled}} or {{enum|WEP-128|ModeEnabled}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="3600"/>
        </syntax>
      </parameter>
      <parameter name="RadiusServerIPAddr" access="readWrite" dmr:version="2.0">
        <description>
          The IP Address of the RADIUS server used for WLAN security. {{param}} is only applicable when {{param|ModeEnabled}} is an Enterprise type (i.e. {{enum|WPA-Enterprise|ModeEnabled}}, {{enum|WPA2-Enterprise|ModeEnabled}} or {{enum|WPA-WPA2-Enterprise|ModeEnabled}}).
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="SecondaryRadiusServerIPAddr " access="readWrite" dmr:version="2.5">
        <description>
          The IP Address of a secondary RADIUS server used for WLAN security. {{param}} is only applicable when {{param|ModeEnabled}} is an Enterprise type (i.e. {{enum|WPA-Enterprise|ModeEnabled}}, {{enum|WPA2-Enterprise|ModeEnabled}} or {{enum|WPA-WPA2-Enterprise|ModeEnabled}}).
          The client can forward requests to the secondary server in the event that the primary server is down or unreachable, or after a number of tries to the primary server fail, or in a round-robin fashion {{bibref|RFC2865}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="RadiusServerPort" access="readWrite" dmr:version="2.0">
        <description>
          The port number of the RADIUS server used for WLAN security. {{param}} is only applicable when {{param|ModeEnabled}} is an Enterprise type (i.e. {{enum|WPA-Enterprise|ModeEnabled}}, {{enum|WPA2-Enterprise|ModeEnabled}} or {{enum|WPA-WPA2-Enterprise|ModeEnabled}}).
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="1812"/>
        </syntax>
      </parameter>
      <parameter name="SecondaryRadiusServerPort" access="readWrite" dmr:version="2.5">
        <description>
          The port number of the secondary RADIUS server used for WLAN security. {{param}} is only applicable when {{param|ModeEnabled}} is an Enterprise type (i.e. {{enum|WPA-Enterprise|ModeEnabled}}, {{enum|WPA2-Enterprise|ModeEnabled}} or {{enum|WPA-WPA2-Enterprise|ModeEnabled}}).
          If this parameter is not implemented, the secondary RADIUS server will use the same port number as the primary RADIUS server.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="1812"/>
        </syntax>
      </parameter>
      <parameter name="RadiusSecret" access="readWrite" dmr:version="2.0">
        <description>
          The secret used for handshaking with the RADIUS server {{bibref|RFC2865}}.
        </description>
        <syntax hidden="true">
          <string/>
        </syntax>
      </parameter>
      <parameter name="SecondaryRadiusSecret" access="readWrite" dmr:version="2.5">
        <description>
          The secret used for handshaking with the secondary RADIUS server {{bibref|RFC2865}}.
          If this parameter is not implemented, the secondary RADIUS server will use the same secret as the primary RADIUS server.
        </description>
        <syntax hidden="true">
          <string/>
        </syntax>
      </parameter>
      <parameter name="MFPConfig" access="readWrite" dmr:version="2.11">
        <description>
          Management Frame Protection configuration applicable when {{param|ModeEnabled}} is set to {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA2-Enterprise|ModeEnabled}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Optional"/>
            <enumeration value="Required"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.AccessPoint.{i}.WPS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains parameters related to Wi-Fi Protected Setup for this access point (as specified in {{bibref|WPSv1.0}} or {bibref|WPSv2.0}}).
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables WPS functionality for this access point.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsSupported" access="readOnly" dmr:version="2.0">
        <description>
          WPS configuration methods supported by the device. {{enum}}
          This parameter corresponds directly to the "Config Methods" attribute of {{bibref|WPS 2.0}}.
          The {{enum|USBFlashDrive}} and {{enum|Ethernet}} are only applicable in WPS 1.0 and are deprecated in WPS 2.x. The {{enum|PhysicalPushButton}}, {{enum|VirtualPushButton}}, {{enum|PhysicalDisplay}} and {{enum|VirtualDisplay}} are applicable to WPS 2.x only.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="USBFlashDrive"/>
            <enumeration value="Ethernet"/>
            <enumeration value="Label"/>
            <enumeration value="Display"/>
            <enumeration value="ExternalNFCToken"/>
            <enumeration value="IntegratedNFCToken"/>
            <enumeration value="NFCInterface"/>
            <enumeration value="PushButton"/>
            <enumeration value="PIN"/>
            <enumeration value="PhysicalPushButton"/>
            <enumeration value="PhysicalDisplay"/>
            <enumeration value="VirtualPushButton"/>
            <enumeration value="VirtualDisplay"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsEnabled" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} Indicates WPS configuration methods enabled on the device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="ConfigMethodsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.11">
        <description>
          {{list}} Indicates the current status of WPS. If the device goes to {{enum|SetupLocked}} the WPS needs to be disabled and re-enabled to come out of state.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Error"/>
            <enumeration value="Unconfigured"/>
            <enumeration value="Configured"/>
            <enumeration value="SetupLocked"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.11">
        <description>
          The Wi-Fi Simple Configuration version supported by the device, a string of the form ''m.n'' where ''m'' is the major version and ''n'' is the minor version.
          For example, a value of ''1.0'' denotes WSC 1.0 and a value of ''2.0'' denotes WSC 2.0.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PIN" access="readWrite" dmr:version="2.11">
        <description>
          Represents the Device PIN used for PIN based pairing between WPS peers. This PIN is either a four digit number or an eight digit number.
          {{hidden}}
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="8"/>
            <pattern value="\d{4}|\d{8}"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.AccessPoint.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="AssociatedDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        A table of the devices currently associated with the access point.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The MAC address of an associated device.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="OperatingStandard" access="readOnly" dmr:version="2.10">
        <description>
          The operating standard that this associated device is connected with.
        </description>
        <syntax>
          <string>
            <enumeration value="a">
              <description>
                {{bibref|802.11a-1999}}
              </description>
            </enumeration>
            <enumeration value="b">
              <description>
                {{bibref|802.11b-1999}}
              </description>
            </enumeration>
            <enumeration value="g">
              <description>
                {{bibref|802.11g-2003}}
              </description>
            </enumeration>
            <enumeration value="n">
              <description>
                {{bibref|802.11n-2009}}
              </description>
            </enumeration>
            <enumeration value="ac">
              <description>
                {{bibref|802.11ac-2013}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="AuthenticationState" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Whether an associated device has authenticated ({{true}}) or not ({{false}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="LastDataDownlinkRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The data transmit rate in {{units}} that was most recently used for transmission from the access point to the associated device.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="600000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastDataUplinkRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The data transmit rate in {{units}} that was most recently used for transmission from the associated device to the access point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="600000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SignalStrength" access="readOnly" dmr:version="2.0">
        <description>
          An indicator of radio signal strength of the uplink from the associated device to the access point, measured in {{units}}, as an average of the last 100 packets received from the device.
        </description>
        <syntax>
          <int>
            <range minInclusive="-200" maxInclusive="0"/>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Retransmissions" access="readOnly" dmr:version="2.0">
        <description>
          The number of {{units}} that had to be re-transmitted, from the last 100 packets sent to the associated device. Multiple re-transmissions of the same packet count as one.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
            <units value="packets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.0">
        <description>
          Whether or not this node is currently present in the WiFi AccessPoint network.
          The ability to list inactive nodes is OPTIONAL. If the CPE includes inactive nodes in this table, {{param}} MUST be set to {{false}} for each inactive node. The length of time an inactive node remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.AccessPoint.{i}.AssociatedDevice.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        These count bytes or packets sent to, or received from, this Associated Device, which is a WiFi station associated to this access point. Packet counters here count 802.11 WiFi frames.
        The CPE MUST reset these {{object}} parameters (unless otherwise stated in individual object or parameter descriptions) either when the {{param|##.Status}} of the parent {{object|##}} object transitions from {{enum|Disabled|##.Status}} to {{enum|Enabled|##.Status}}, or when it transitions from {{enum|Enabled|##.Status}} to {{enum|Disabled|##.Status}}.
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of bytes transmitted to the Associated Device, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of bytes received from the Associated Device, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of packets transmitted to the Associated Device.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of packets received from the Associated Device.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound packets that could not be transmitted because of errors. These might be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly" dmr:version="2.8">
        <description>
          The total number of transmitted packets which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="FailedRetransCount" access="readOnly" dmr:version="2.8">
        <description>
          The number of packets that were not transmitted successfully due to the number of retransmission attempts exceeding an 802.11 retry limit. This parameter is based on ''dot11FailedCount'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="RetryCount" access="readOnly" dmr:version="2.8">
        <description>
          The number of packets that were successfully transmitted after one or more retransmissions. This parameter is based on ''dot11RetryCount'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="MultipleRetryCount" access="readOnly" dmr:version="2.8">
        <description>
          The number of packets that were successfully transmitted after more than one retransmission. This parameter is based on ''dot11MultipleRetryCount'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.AccessPoint.{i}.AC.{i}." access="readOnly" minEntries="4" maxEntries="4" dmr:version="2.8">
      <description>
        This object contains parameters related to WiFi QoS for different 802.11e access categories (priorities). Access categories are: BE, BK, VI, and VO. These parameters can help control and monitor 802.11e Enhanced distributed channel access (EDCA). The size of this table is fixed, with four entries which are identified by the {{param|AccessCategory}} parameter as follows: 
        * BE (Best Effort) 
        * BK (Background)
        * VI (Video)
        * VO (Voice)
      </description>
      <uniqueKey>
        <parameter ref="AccessCategory"/>
      </uniqueKey>
      <parameter name="AccessCategory" access="readOnly" dmr:version="2.8">
        <description>
          This identifies the access category.
        </description>
        <syntax>
          <string>
            <enumeration value="BE"/>
            <enumeration value="BK"/>
            <enumeration value="VI"/>
            <enumeration value="VO"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="AIFSN" access="readWrite" dmr:version="2.8">
        <description>
          Arbitration Inter Frame Spacing (Number). This is the number of time slots in the arbitration interframe space.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="2" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMin" access="readWrite" dmr:version="2.8">
        <description>
          Exponent of Contention Window (Minimum). This encodes the values of CWMin as an exponent: CWMin = 2^ECWMin - 1. For example, if ECWMin is 8, then CWMin is 2^8 - 1, or 255, (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMax" access="readWrite" dmr:version="2.8">
        <description>
          Exponent of Contention Window (Maximum). This encodes the values of CWMax as an exponent: CWMax = 2^ECWMax - 1. For example, if ECWMax is 8, then CWMax is 2^8 - 1, or 255, (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TxOpMax" access="readWrite" dmr:version="2.8">
        <description>
          Maximum transmit opportunity, in multiples of {{units}}. A TXOP time interval of 0 means it is limited to a single MAC protocol data unit (MPDU).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="32 microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AckPolicy" access="readWrite" dmr:version="2.8">
        <description>
          Ack Policy, where False="Do Not Acknowledge" and True="Acknowledge"
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogramIntervals" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} Definition of the histogram intervals for counting the transmit queue length in packets. Each value indicates the maximum value of the interval. For example, "0,1,4,8," defines the five intervals: 0 packets in queue, 1 packet in queue, 2 to 4 packets in queue, 5 to 8 packets in queue, and 9 or more packets in queue. (No value after the last comma means no upper bound.) If this parameter is set to {{empty}}, no {{param|Stats.OutQLenHistogram}} stats will be collected.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogramSampleInterval" access="readWrite" dmr:version="2.8">
        <description>
          The time between recording samples of the current transmit queue in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.AccessPoint.{i}.AC.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object contains statistics for different 802.11e access categories (priorities).
        Packet counters here count 802.11 WiFi frames. 
        If there are not separate stats for each access category, (e.g., 802.11e is not used and there is only one queue), then only access category 0 = BE applies (e.g., the statistics for the single queue are in access category 0 = BE).
        The CPE MUST reset the Access Point's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the Access Point becomes operationally down due to a previous administrative down (i.e. the Access Point's Status parameter transitions to a Diasbled state) or when the Access Point becomes administratively up (i.e. the Access Point's Enable parameter transitions from false to true). Administrative and operational status is discussed in [Section 4.2.2/TR-181i2].
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} transmitted in this access category, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received in this access category, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} transmitted in this access category.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received in this access category.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound {{units}} in this access category that could not be transmitted because of errors. These might be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of inbound {{units}} in this access category that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound {{units}} in this access category which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of inbound {{units}} in this access category which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly" dmr:version="2.8">
        <description>
          The total number of transmitted {{units}} in this access category which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogram" access="readOnly" dmr:version="2.8">
        <description>
          {{list}} Histogram of the total length of the transmit queue of this access category in packets (1 packet, 2 packets, etc.) according to the intervals defined by {{param|#.OutQLenHistogramIntervals}}, with samples taken each {{param|#.OutQLenHistogramSampleInterval}}. Example: "12,5,1,0,2,0,0,1".
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.AccessPoint.{i}.Accounting." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.5">
      <description>
        This object contains the parameters related to RADIUS accounting functionality for the access point.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.5">
        <description>
          Enables or disables accounting functionality for the access point.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ServerIPAddr" access="readWrite" dmr:version="2.5">
        <description>
          The IP Address of the RADIUS accounting server.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="SecondaryServerIPAddr" access="readWrite" dmr:version="2.5">
        <description>
          The IP Address of a secondary RADIUS accounting server.
          The client can forward requests to the secondary server in the event that the primary server is down or unreachable, or after a number of tries to the primary server fail, or in a round-robin fashion. {{bibref|RFC2866}}
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ServerPort" access="readWrite" dmr:version="2.5">
        <description>
          The port number of the RADIUS server used for accounting. The default port is 1813 as defined in {{bibref|RFC2866}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="1813"/>
        </syntax>
      </parameter>
      <parameter name="SecondaryServerPort" access="readWrite" dmr:version="2.5">
        <description>
          The port number of the secondary RADIUS server used for accounting. The default port is 1813 as defined in {{bibref|RFC2866}}.
          If this parameter is not implemented, the secondary RADIUS server will use the same port number as the primary RADIUS server.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="1813"/>
        </syntax>
      </parameter>
      <parameter name="Secret" access="readWrite" dmr:version="2.5">
        <description>
          The secret used for handshaking with the RADIUS accounting server {{bibref|RFC2865}}.
        </description>
        <syntax hidden="true">
          <string/>
        </syntax>
      </parameter>
      <parameter name="SecondarySecret" access="readWrite" dmr:version="2.5">
        <description>
          The secret used for handshaking with the secondary RADIUS accounting server {{bibref|RFC2865}}.
          If this parameter is not implemented, the secondary RADIUS server will use the same secret as the primary RADIUS server.
        </description>
        <syntax hidden="true">
          <string/>
        </syntax>
      </parameter>
      <parameter name="InterimInterval" access="readWrite" dmr:version="2.5">
        <description>
          Specifies the default interim accounting interval in {{units}}, which is used for service accounting when the ''Acct-Interim-Interval'' attribute is not configured. {{bibref|RFC2869|Section 2.1}}
          The value MUST NOT be smaller than 60.  The value SHOULD NOT be smaller than  600, and careful consideration should be given to its impact on network traffic {{bibref|RFC2869|Section 5.16}}.
          A value of 0 means no interim accounting messages are sent.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="0"/>
            <range minInclusive="60"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.EndPoint.{i}." access="readWrite" numEntriesParameter="EndPointNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object models an 802.11 connection from the perspective of a wireless end point. Each {{object}} entry is associated with a particular {{object|#.SSID}} interface instance via the {{param|SSIDReference}} parameter, and an associated active {{object|Profile}} instance via the {{param|ProfileReference}} parameter. The active profile is responsible for specifying the actual SSID and security settings used by the end point.
        For enabled table entries, if {{param|SSIDReference}} or {{param|ProfileReference}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SSIDReference"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this end point.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the status of this end point.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="ProfileReference" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} This is the currently active profile, which specifies the SSID and security settings to be used by the end point.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="Profile." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SSIDReference" access="readOnly" dmr:version="2.0">
        <description>
          {{reference}} {{param}} is determined based on the {{param|Profile.{i}.SSID}} within the associated {{param|ProfileReference}}) endpoint profile. {{param}} MUST be {{empty}} if {{param|ProfileReference}} is {{empty}} (i.e. only when an active profile is assigned can the associated SSID interface be determined).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.SSID." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ProfileNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.EndPoint.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this end point.
      </description>
      <parameter name="LastDataDownlinkRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The data transmit rate in {{units}} that was most recently used for transmission from the access point to the end point device.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="600000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastDataUplinkRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The data transmit rate in {{units}} that was most recently used for transmission from the end point to the access point device.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="600000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SignalStrength" access="readOnly" dmr:version="2.0">
        <description>
          An indicator of radio signal strength of the downlink from the access point to the end point, measured in {{units}}, as an average of the last 100 packets received from the device.
        </description>
        <syntax>
          <int>
            <range minInclusive="-200" maxInclusive="0"/>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Retransmissions" access="readOnly" dmr:version="2.0">
        <description>
          The number of {{units}} that had to be re-transmitted, from the last 100 packets sent to the access point. Multiple re-transmissions of the same packet count as one.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
            <units value="packets"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.EndPoint.{i}.Security." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains security related parameters that apply to a WiFi end point {{bibref|802.11-2007}}.
      </description>
      <parameter name="ModesSupported" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates which security modes this {{object|#}} instance is capable of supporting.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="None"/>
            <enumeration value="WEP-64"/>
            <enumeration value="WEP-128"/>
            <enumeration value="WPA-Personal"/>
            <enumeration value="WPA2-Personal"/>
            <enumeration value="WPA-WPA2-Personal"/>
            <enumeration value="WPA-Enterprise"/>
            <enumeration value="WPA2-Enterprise"/>
            <enumeration value="WPA-WPA2-Enterprise"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.EndPoint.{i}.Profile.{i}." access="readWrite" numEntriesParameter="ProfileNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        EndPoint Profile table.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SSID"/>
        <parameter ref="Location"/>
        <parameter ref="Priority"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this Profile.
          When there are multiple WiFi EndPoint Profiles, e.g. each instance supports a different SSID and/or different security configuration, this parameter can be used to control which of the instances are currently enabled.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the status of this Profile.  {{enum}}
          The {{enum|Active}} value is reserved for the instance that is actively connected. The {{enum|Available}} value represents an instance that is not currently active, but is also not disabled or in error. The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Active"/>
            <enumeration value="Available"/>
            <enumeration value="Error" optional="true"/>
            <enumeration value="Disabled"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="SSID" access="readWrite" dmr:version="2.0">
        <description>
          The profile identifier in use by the connection. The SSID is an identifier that is attached to packets sent over the wireless LAN that functions as an ID for joining a particular radio network (BSS).
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Location" access="readWrite" dmr:version="2.0">
        <description>
          Location of the profile. This value serves as a reminder from the user, describing the location of the profile. For example: "Home", "Office", "Neighbor House", "Airport", etc. An empty string is also valid.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Priority" access="readWrite" dmr:version="2.0">
        <description>
          The profile Priority defines one of the criteria used by the End Point to automatically select the "best" AP when several APs with known profiles are simultaneously available for association.
          In this situation, the End Point has to select the AP with the higher priority in its profile. If there are several APs with the same priority, providing different SSID or the same SSID, then the wireless end point has to select the APs according to other criteria like signal quality, SNR, etc.
          0 is the highest priority.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.EndPoint.{i}.Profile.{i}.Security." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains security related parameters that apply to a WiFi End Point profile {{bibref|802.11-2007}}.
      </description>
      <parameter name="ModeEnabled" access="readWrite" dmr:version="2.0">
        <description>
          Indicates which security mode is enabled.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="##.Security.ModesSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WEPKey" access="readWrite" dmr:version="2.0">
        <description>
          A WEP key expressed as a hexadecimal string.
          {{param}} is used only if {{param|ModeEnabled}} is set to {{enum|WEP-64|ModeEnabled}} or {{enum|WEP-128|ModeEnabled}}.
          A 5 byte {{param}} corresponds to security mode {{enum|WEP-64|ModeEnabled}} and a 13 byte {{param}} corresponds to security mode {{enum|WEP-128|ModeEnabled}}.
        </description>
        <syntax hidden="true">
          <hexBinary>
            <size minLength="5" maxLength="5"/>
            <size minLength="13" maxLength="13"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="PreSharedKey" access="readWrite" dmr:version="2.0">
        <description>
          A literal PreSharedKey (PSK) expressed as a hexadecimal string.
          {{param}} is only used if {{param|ModeEnabled}} is set to {{enum|WPA-Personal|ModeEnabled}} or {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA-WPA2-Personal|ModeEnabled}}.
          If {{param|KeyPassphrase}} is written, then {{param}} is immediately generated. The ACS SHOULD NOT set both the {{param|KeyPassphrase}} and the {{param}} directly (the result of doing this is undefined).
        </description>
        <syntax hidden="true">
          <hexBinary>
            <size maxLength="32"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="KeyPassphrase" access="readWrite" dmr:version="2.0">
        <description>
          A passphrase from which the {{param|PreSharedKey}} is to be generated, for {{enum|WPA-Personal|ModeEnabled}} or {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA-WPA2-Personal|ModeEnabled}} security modes.
          If {{param}} is written, then {{param|PreSharedKey}} is immediately generated. The ACS SHOULD NOT set both the {{param}} and the {{param|PreSharedKey}} directly (the result of doing this is undefined). The key is generated as specified by WPA, which uses PBKDF2 from PKCS #5: Password-based Cryptography Specification Version 2.0 {{bibref|RFC2898}}.
        </description>
        <syntax hidden="true">
          <string>
            <size minLength="8" maxLength="63"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MFPConfig" access="readWrite" dmr:version="2.11">
        <description>
          Management Frame Protection configuration applicable when {{param|ModeEnabled}} is set to {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA2-Enterprise|ModeEnabled}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Optional"/>
            <enumeration value="Required"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.EndPoint.{i}.WPS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains parameters related to Wi-Fi Protected Setup {{bibref|WPSv1.0}} for this end point.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables WPS functionality for this end point.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsSupported" access="readOnly" dmr:version="2.0">
        <description>
          WPS configuration methods supported by the device. {{enum}}
          This parameter corresponds directly to the "Config Methods" attribute of {{bibref|WPS 2.0}}.
          The {{enum|USBFlashDrive}} and {{enum|Ethernet}} are only applicable in WPS 1.0 and are deprecated in WPS 2.x. The {{enum|PhysicalPushButton}}, {{enum|VirtualPushButton}}, {{enum|PhysicalDisplay}} and {{enum|VirtualDisplay}} are applicable to WPS 2.x only.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="USBFlashDrive"/>
            <enumeration value="Ethernet"/>
            <enumeration value="Label"/>
            <enumeration value="Display"/>
            <enumeration value="ExternalNFCToken"/>
            <enumeration value="IntegratedNFCToken"/>
            <enumeration value="NFCInterface"/>
            <enumeration value="PushButton"/>
            <enumeration value="PIN"/>
            <enumeration value="PhysicalPushButton"/>
            <enumeration value="PhysicalDisplay"/>
            <enumeration value="VirtualPushButton"/>
            <enumeration value="VirtualDisplay"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsEnabled" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} Indicates the WPS configuration methods enabled on the device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="ConfigMethodsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.11">
        <description>
          {{list}} Indicates the current status of WPS in EndPoint.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Error"/>
            <enumeration value="Unconfigured"/>
            <enumeration value="Configured"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.11">
        <description>
          The Wi-Fi Simple Configuration version supported by the device, a string of the form ''m.n'' where ''m'' is the major version and ''n'' is the minor version.
          For example, a value of ''1.0'' denotes WSC 1.0 and a value of ''2.0'' denotes WSC 2.0.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PIN" access="readWrite" dmr:version="2.11">
        <description>
          Represents the Device PIN used for PIN based pairing between WPS peers. This PIN is either a four digit number or an eight digit number.
          {{hidden}}
        </description>
        <syntax hidden="true">
          <unsignedInt>
            <range minInclusive="4" maxInclusive="4"/>
            <range minInclusive="8" maxInclusive="8"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.EndPoint.{i}.AC.{i}." access="readOnly" minEntries="4" maxEntries="4" dmr:version="2.8">
      <description>
        This object contains parameters related to WiFi QoS for different 802.11e access categories (priorities). Access categories are: BE, BK, VI, and VO. These parameters can help control and monitor 802.11e Enhanced distributed channel access (EDCA). The size of this table is fixed, with four entries which are identified by the {{param|AccessCategory}} parameter as follows: 
        * BE (Best Effort) 
        * BK (Background)
        * VI (Video)
        * VO (Voice)
      </description>
      <uniqueKey>
        <parameter ref="AccessCategory"/>
      </uniqueKey>
      <parameter name="AccessCategory" access="readOnly" dmr:version="2.8">
        <description>
          This identifies the access category.
        </description>
        <syntax>
          <string>
            <enumeration value="BE"/>
            <enumeration value="BK"/>
            <enumeration value="VI"/>
            <enumeration value="VO"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="AIFSN" access="readWrite" dmr:version="2.8">
        <description>
          Arbitration Inter Frame Spacing (Number). This is the number of time slots in the arbitration interframe space.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="2" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMin" access="readWrite" dmr:version="2.8">
        <description>
          Exponent of Contention Window (Minimum). This encodes the values of CWMin as an exponent: CWMin = 2^ECWMin - 1. For example, if ECWMin is 8, then CWMin is 2^8 - 1, or 255, (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMax" access="readWrite" dmr:version="2.8">
        <description>
          Exponent of Contention Window (Maximum). This encodes the values of CWMax as an exponent: CWMax = 2^ECWMax - 1. For example, if ECWMax is 8, then CWMax is 2^8 - 1, or 255, (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TxOpMax" access="readWrite" dmr:version="2.8">
        <description>
          Maximum transmit opportunity, in multiples of {{units}}. A TXOP time interval of 0 means it is limited to a single MAC protocol data unit (MPDU).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="32 microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AckPolicy" access="readWrite" dmr:version="2.8">
        <description>
          Ack Policy, where False="Do Not Acknowledge" and True="Acknowledge"
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogramIntervals" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} Definition of the histogram intervals for counting the transmit queue length in packets. Each value indicates the maximum value of the interval. For example, "0,1,4,8," defines the five intervals: 0 packets in queue, 1 packet in queue, 2 to 4 packets in queue, 5 to 8 packets in queue, and 9 or more packets in queue. (No value after the last comma means no upper bound.) If this parameter is set to an empty string, no {{param|Stats.OutQLenHistogram}} stats will be collected.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogramSampleInterval" access="readWrite" dmr:version="2.8">
        <description>
          The time between recording samples of the current transmit queue {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WiFi.EndPoint.{i}.AC.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object contains statistics for different 802.11e access categories (priorities).
        Packet counters here count 802.11 WiFi frames. 
        If there are not separate stats for each access category, (e.g., 802.11e is not used and there is only one queue), then only access category 0 = BE applies (e.g., the statistics for the single queue are in access category 0 = BE).
        The CPE MUST reset the EndPoint's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the EndPoint becomes operationally down due to a previous administrative down (i.e. the EndPoint's Status parameter transitions to a Diasbled state) or when the EndPoint becomes administratively up (i.e. the EndPoint's Enable parameter transitions from false to true). Administrative and operational status is discussed in [Section 4.2.2/TR-181i2].
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} transmitted in this access category, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received in this access category, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} transmitted in this access category.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received in this access category.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound {{units}} in this access category that could not be transmitted because of errors. These might be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of inbound {{units}} in this access category that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound {{units}} in this access category which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of inbound {{units}} in this access category which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly" dmr:version="2.8">
        <description>
          The total number of transmitted {{units}} in this access category which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogram" access="readOnly" dmr:version="2.8">
        <description>
          {{list}} Histogram of the total length of the transmit queue of this access category in packets (1 packet, 2 packets, etc.) according to the intervals defined by {{param|#.OutQLenHistogramIntervals}}, with samples taken each {{param|#.OutQLenHistogramSampleInterval}}. Example: "12,5,1,0,2,0,0,1"
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.PPP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Point-to-Point Protocol {{bibref|RFC1661}}. This object contains the {{object|Interface}} table.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SupportedNCPs" access="readOnly" dmr:version="2.2">
        <description>
          The Network Control Protocols (NCPs) that are supported by the device. {{enum}}
          Note that {{enum|IPv6CP}} is an IPv6 capability.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="ATCP">
              <description>
                AppleTalk Control Protocol {{bibref|RFC1378}}
              </description>
            </enumeration>
            <enumeration value="IPCP">
              <description>
                {{bibref|RFC1332}}
              </description>
            </enumeration>
            <enumeration value="IPXCP">
              <description>
                {{bibref|RFC1552}}
              </description>
            </enumeration>
            <enumeration value="NBFCP">
              <description>
                {{bibref|RFC2097}}
              </description>
            </enumeration>
            <enumeration value="IPv6CP">
              <description>
                {{bibref|RFC5072}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.PPP.Interface.{i}." access="readWrite" numEntriesParameter="InterfaceNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        PPP interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface). 
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, the device MUST tear down the existing PPP connection represented by this object and establish a new one.  
          The device MUST initiate the reset after completion of the current CWMP session.  The device MAY delay resetting the connection in order to avoid interruption of a user service such as an ongoing voice call.
          Reset on a disabled interface is a no-op (not an error).
        </description>
        <syntax hidden="true" command="true">
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ConnectionStatus" access="readOnly" dmr:version="2.0">
        <description>
          Current status of the connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured"/>
            <enumeration value="Connecting"/>
            <enumeration value="Authenticating"/>
            <enumeration value="Connected"/>
            <enumeration value="PendingDisconnect"/>
            <enumeration value="Disconnecting"/>
            <enumeration value="Disconnected"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastConnectionError" access="readOnly" dmr:version="2.0">
        <description>
          The cause of failure for the last connection setup attempt.
        </description>
        <syntax>
          <string>
            <enumeration value="ERROR_NONE"/>
            <enumeration value="ERROR_ISP_TIME_OUT"/>
            <enumeration value="ERROR_COMMAND_ABORTED"/>
            <enumeration value="ERROR_NOT_ENABLED_FOR_INTERNET"/>
            <enumeration value="ERROR_BAD_PHONE_NUMBER"/>
            <enumeration value="ERROR_USER_DISCONNECT"/>
            <enumeration value="ERROR_ISP_DISCONNECT"/>
            <enumeration value="ERROR_IDLE_DISCONNECT"/>
            <enumeration value="ERROR_FORCED_DISCONNECT"/>
            <enumeration value="ERROR_SERVER_OUT_OF_RESOURCES"/>
            <enumeration value="ERROR_RESTRICTED_LOGON_HOURS"/>
            <enumeration value="ERROR_ACCOUNT_DISABLED"/>
            <enumeration value="ERROR_ACCOUNT_EXPIRED"/>
            <enumeration value="ERROR_PASSWORD_EXPIRED"/>
            <enumeration value="ERROR_AUTHENTICATION_FAILURE"/>
            <enumeration value="ERROR_NO_DIALTONE"/>
            <enumeration value="ERROR_NO_CARRIER"/>
            <enumeration value="ERROR_NO_ANSWER"/>
            <enumeration value="ERROR_LINE_BUSY"/>
            <enumeration value="ERROR_UNSUPPORTED_BITSPERSECOND"/>
            <enumeration value="ERROR_TOO_MANY_LINE_ERRORS"/>
            <enumeration value="ERROR_IP_CONFIGURATION"/>
            <enumeration value="ERROR_UNKNOWN"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AutoDisconnectTime" access="readWrite" dmr:version="2.0">
        <description>
          The time in {{units}} since the establishment of the connection after which connection termination is automatically initiated by the CPE.  This occurs irrespective of whether the connection is being used or not.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IdleDisconnectTime" access="readWrite" dmr:version="2.0">
        <description>
          The time in {{units}} that if the connection remains idle, the CPE automatically terminates the connection.  A  value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="WarnDisconnectDelay" access="readWrite" dmr:version="2.0">
        <description>
          Time in {{units}} the {{param|ConnectionStatus}} remains in the {{enum|PendingDisconnect|ConnectionStatus}} state  before transitioning to disconnecting state to drop the connection.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.0">
        <description>
          Username to be used for authentication.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.0">
        <description>
          Password to be used for authentication.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EncryptionProtocol" access="readOnly" dmr:version="2.0">
        <description>
          Describes the PPP encryption protocol.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="MPPE"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CompressionProtocol" access="readOnly" dmr:version="2.0">
        <description>
          Describes the PPP compression protocol.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="Van Jacobson">
              <description>
                {{bibref|RFC1332}}
              </description>
            </enumeration>
            <enumeration value="STAC LZS">
              <description>
                {{bibref|RFC1974}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="AuthenticationProtocol" access="readOnly" dmr:version="2.0">
        <description>
          Describes the PPP authentication protocol.
        </description>
        <syntax>
          <string>
            <enumeration value="PAP"/>
            <enumeration value="CHAP"/>
            <enumeration value="MS-CHAP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxMRUSize" access="readWrite" dmr:version="2.0">
        <description>
          The maximum allowed size of frames sent from the remote peer.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="64" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="1500"/>
        </syntax>
      </parameter>
      <parameter name="CurrentMRUSize" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current MRU in use over this connection.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="64" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ConnectionTrigger" access="readWrite" dmr:version="2.0">
        <description>
          Trigger used to establish the PPP connection.  {{enum}}
          Note that the reason for a PPP connection becoming disconnected to begin with might be either external to the CPE, such as  termination by the BRAS or momentary disconnection of the physical interface, or internal to the CPE, such as use of the  {{param|IdleDisconnectTime}} and/or {{param|AutoDisconnectTime}} parameters in this object.
        </description>
        <syntax>
          <string>
            <enumeration value="OnDemand">
              <description>
                If this PPP connection is disconnected for any reason, it is to remain disconnected until the CPE has one  or more packets to communicate over this connection, at which time the CPE automatically attempts to reestablish the  connection.
              </description>
            </enumeration>
            <enumeration value="AlwaysOn">
              <description>
                If this PPP connection is disconnected for any reason, the CPE automatically attempts to reestablish the  connection (and continues to attempt to reestablish the connection as long it remains disconnected).
              </description>
            </enumeration>
            <enumeration value="Manual">
              <description>
                If this PPP connection is disconnected for any reason, it is to remain disconnected until the user of the  CPE explicitly instructs the CPE to reestablish the connection.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="LCPEcho" access="readOnly" dmr:version="2.0">
        <description>
          PPP LCP Echo period in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LCPEchoRetry" access="readOnly" dmr:version="2.0">
        <description>
          Number of PPP LCP Echo retries within an echo period.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPCPEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables IPCP ({{bibref|RFC1332}}) on this interface.  If this parameter is present, {{enum|IPCP|#.SupportedNCPs}} MUST be included in {{param|#.SupportedNCPs}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6CPEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables IPv6CP ({{bibref|RFC5072}}) on this interface.  If this parameter is present, {{enum|IPv6CP|#.SupportedNCPs}} MUST be included in {{param|#.SupportedNCPs}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.PPP.Interface.{i}.PPPoE." access="readOnly" minEntries="0" maxEntries="1" dmr:version="2.0">
      <description>
        PPPoE object that functionally groups PPPoE related parameters.
      </description>
      <parameter name="SessionID" access="readOnly" dmr:version="2.0">
        <description>
          Represents the PPPoE Session ID.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ACName" access="readWrite" dmr:version="2.0">
        <description>
          PPPoE Access Concentrator.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServiceName" access="readWrite" dmr:version="2.0">
        <description>
          PPPoE Service Name.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.PPP.Interface.{i}.IPCP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        IP Control Protocol (IPCP) client object for this PPP interface {{bibref|RFC1332}}. {{object}} only applies to IPv4.
      </description>
      <parameter name="LocalIPAddress" access="readOnly" dmr:version="2.0">
        <description>
          The local IPv4 address for this connection received via IPCP.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="RemoteIPAddress" access="readOnly" dmr:version="2.0">
        <description>
          The remote IPv4 address for this connection received via IPCP.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Items represent DNS Server IPv4 address(es) received via IPCP {{bibref|RFC1877}}.
        </description>
        <syntax>
          <list maxItems="2">
            <size/>
          </list>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PassthroughEnable" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the PPP Interface retrieved information is configured on the IP Interface stacked on top of this PPP Interface.
          If {{true}}, the PPP Interface retrieved information is propagated to the parameters in the referenced {{param|PassthroughDHCPPool}} object, replacing any existing configuration (including ''MinAddress'', ''MaxAddress'', ''SubnetMask'', ''IPRouters'', and ''DNSServers'').
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PassthroughDHCPPool" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}When {{param}} is set to {{empty}}, {{param|PassthroughEnable}} MUST be set to {{false}} (i.e. passthrough can not be enabled without a pool reference specified).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".DHCPv4.Server.Pool." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.PPP.Interface.{i}.IPv6CP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        IPv6 Control Protocol (IPv6CP) client object for this PPP interface {{bibref|RFC5072}}. {{object}} only applies to IPv6.
      </description>
      <parameter name="LocalInterfaceIdentifier" access="readOnly" dmr:version="2.2">
        <description>
          The interface identifier for the local end of the PPP link, negotiated using the IPv6CP ''Interface-Identifier'' option {{bibref|RFC5072|Section 4.1}}.
          The identifier is represented as the rightmost 64 bits of an IPv6 address (the leftmost 64 bits MUST be zero and MUST be ignored by the recipient).
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="RemoteInterfaceIdentifier" access="readOnly" dmr:version="2.2">
        <description>
          The interface identifier for the remote end of the PPP link, negotiated using the IPv6CP ''Interface-Identifier'' option {{bibref|RFC5072|Section 4.1}}.
          The identifier is represented as the rightmost 64 bits of an IPv6 address (the leftmost 64 bits MUST be zero and MUST be ignored by the recipient).
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.PPP.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.IP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        IP object that contains the {{object|Interface}}, {{object|ActivePort}}, and {{object|Diagnostics}} objects.
      </description>
      <parameter name="IPv6Capable" access="readOnly" dmr:version="2.2">
        <description>
          Indicates whether the device is IPv6 capable.
          Note: If {{false}}, it is expected that IPv6-related parameters, enumeration values, etc will not be implemented by the device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables the IPv6 stack, and so the use of IPv6 on the device. This affects only layer 3 and above.
          When {{false}}, IP interfaces that had been operationally up and passing IPv6 packets will now no longer be able to do so, and will be operationally down (unless also attached to an enabled IPv4 stack).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6Status" access="readOnly" dmr:version="2.2">
        <description>
          Indicates the status of the IPv6 stack.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ULAPrefix" access="readWrite" dmr:version="2.2">
        <description>
          The ULA /48 prefix {{bibref|RFC4193|Section 3}}.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.IP.Interface.{i}." access="readWrite" numEntriesParameter="InterfaceNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        IP interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). This table models the layer 3 IP interface.
        Each IP interface can be attached to the IPv4 and/or IPv6 stack.  The interface's IP addresses and prefixes are listed in the {{object|IPv4Address}}, {{object|IPv6Address}} and {{object|IPv6Prefix}} tables.
        Note that support for manipulating {{param|Loopback}} interfaces is OPTIONAL, so the implementation MAY choose not to create (or allow the ACS to create) {{object}} instances of type {{enum|Loopback|Type}}.
        When the ACS administratively disables the interface, i.e. sets {{param|Enable}} to {{false}}, the interface's automatically-assigned IP addresses and prefixes MAY be retained.  When the ACS administratively enables the interface, i.e. sets {{param|Enable}} to {{true}}, these IP addresses and prefixes MUST be refreshed.  It's up to the implementation to decide exactly what this means: it SHOULD take all reasonable steps to refresh everything but if it is unable, for example, to refresh a prefix that still has a significant lifetime, it might well choose to retain rather than discard it.
        Any {{enum|Tunneled|Type}} IP interface instances instantiated by the CPE MUST NOT have any statistics, writable parameters, IP addresses or IPv6 prefixes.  Any read-only parameters, e.g. {{param|Status}}, MUST return the same information as for the corresponding {{enum|Tunnel|Type}} interface.  The reason for these rules is that {{enum|Tunneled|Type}} IP interfaces exist only in order to be the targets of references (within the data model) and do not model any concepts over and above those already modeled by the {{enum|Tunnel|Type}} IP interfaces.
        Note that {{enum|Tunnel|Type}} and {{enum|Tunneled|Type}} IP interfaces are part of a legacy mechanism that is only used for {{object|##.IPv6rd}}, {{object|##.DSLite}} and {{object|##.IPsec}} tunnels and MUST NOT be used in any other context.  For all other tunneling mechanisms {{enum|Normal|Type}} IP interfaces are stacked above technology-specific Tunnel Interfaces, e.g. above {{object|##.GRE.Tunnel.{i}.Interface}} or {{object|##.MAP.Domain.{i}.Interface}} objects.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface (regardless of {{param|IPv4Enable}} and {{param|IPv6Enable}}).
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPv6Enable" access="readWrite" dmr:version="2.2">
        <description>
          If set to {{true}}, attaches this interface to the IPv6 stack.  If set to {{false}}, detaches this interface from the IPv6 stack.
          Once detached from the IPv6 stack, the interface will now no longer be able to pass IPv6 packets, and will be operationally down (unless also attached to an enabled IPv4 stack).
          For an IPv6 capable device, if {{param}} is not present this interface SHOULD be permanently attached to the IPv6 stack.
          Note that {{param}} is independent of {{param|Enable}}, and that to administratively enable an interface for IPv6 it is necessary for both {{param|Enable}} and {{param}} to be {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ULAEnable" access="readWrite" dmr:version="2.2">
        <description>
          Controls whether or not ULAs {{bibref|RFC4193}} are generated and used on this interface.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6PrefixNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.IP.Interface.{i}.IPv6Address.{i}." access="readWrite" numEntriesParameter="IPv6AddressNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This table contains the IP interface's IPv6 unicast addresses.  There MUST be an entry for each such address, including anycast addresses.
        There are several ways in which entries can be added to and deleted from this table, including:
        * Automatically via SLAAC {{bibref|RFC4862}}, which covers generation of link-local addresses (for all types of device) and global addresses (for non-router devices).
        * Automatically via DHCPv6 {{bibref|RFC3315}}, which covers generation of any type of address (subject to the configured DHCP server policy).
        * Manually via a GUI or some other local management interface.
        * Manually via factory default configuration.
        * By the ACS.
        This table MUST NOT include entries for the Subnet-Router anycast address {{bibref|RFC4291|Section 2.6.1}}.  Such entries would be identical to others but with a zero interface identifier, and would add no value.
        A loopback interface will always have address ''::1'' {{bibref|RFC4291|Section 2.5.3}} and MAY also have link-local address ''fe80::1''.
        This object is based on ''ipAddressTable'' from {{bibref|RFC4293}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="IPAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this {{object}} table entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="IPAddressStatus" access="readOnly" dmr:version="2.2">
        <description>
          The status of {{param|IPAddress}}, indicating whether it can be used for communication.  See also {{param|PreferredLifetime}} and {{param|ValidLifetime}}.  {{enum}}
          This parameter is based on ''ipAddressStatus'' and ''ipAddressStatusTC'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Preferred">
              <description>
                Valid address that can appear as the destination or source address of a packet.
              </description>
            </enumeration>
            <enumeration value="Deprecated">
              <description>
                Valid but deprecated address that is not intended to be used as a source address.
              </description>
            </enumeration>
            <enumeration value="Invalid">
              <description>
                Invalid address that is not intended to appear as the destination or source address of a packet.
              </description>
            </enumeration>
            <enumeration value="Inaccessible">
              <description>
                Valid address that is not accessible because the interface to which it is assigned is not operational.
              </description>
            </enumeration>
            <enumeration value="Unknown">
              <description>
                Address status cannot be determined for some reason.
              </description>
            </enumeration>
            <enumeration value="Tentative">
              <description>
                The uniqueness of the address on the link is being verified.
              </description>
            </enumeration>
            <enumeration value="Duplicate">
              <description>
                Invalid address that has been determined to be non-unique on the link.
              </description>
            </enumeration>
            <enumeration value="Optimistic">
              <description>
                Valid address that is available for use, subject to restrictions, while its uniqueness on a link is being verified.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Invalid"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="IPAddress" access="readWrite" dmr:version="2.2">
        <description>
          IPv6 address.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressAddr'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>
          Mechanism via which the IP address was assigned.  {{enum}}
          This parameter is based on ''ipOrigin'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <enumeration value="AutoConfigured">
              <description>
                Automatically generated. For example, a link-local address as specified by SLAAC {{bibref|RFC4862|Section 5.3}}, a global address as specified by SLAAC {{bibref|RFC4862|Section 5.5}}, or generated via CPE logic (e.g. from delegated prefix as specified by {{bibref|RFC3633}}), or from ULA /48 prefix as specified by {{bibref|RFC4193}}.
              </description>
            </enumeration>
            <enumeration value="DHCPv6">
              <description>
                Assigned by DHCPv6 {{bibref|RFC3315}}.
              </description>
            </enumeration>
            <enumeration value="IKEv2">
              <description>
                Assigned by IKEv2 {{bibref|RFC5996}}.
              </description>
            </enumeration>
            <enumeration value="MAP">
              <description>
                Assigned by MAP {{bibref|RFC7597}}, i.e. is this interface's ''MAP IPv6 address''
              </description>
            </enumeration>
            <enumeration value="WellKnown">
              <description>
                Specified by a standards organization, e.g. the ''::1'' loopback address, which is defined in {{bibref|RFC4291}}.
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                For example, present in the factory default configuration (but not {{enum|WellKnown}}), created by the ACS, or created by some other management entity (e.g. via a GUI).
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="Prefix" access="readWrite" dmr:version="2.2">
        <description>
          IPv6 address prefix.
          Some addresses, e.g. addresses assigned via the DHCPv6 IA_NA option, are not associated with a prefix, and some {{enum|WellKnown|#.IPv6Prefix.{i}.Origin}} prefixes might not be modeled.  In both of these cases {{param}} will be {{null}}.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressPrefix'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readWrite" dmr:version="2.2">
        <description>
          The time at which this address will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readWrite" dmr:version="2.2">
        <description>
          The time at which this address will cease to be valid (i.e. will become invalid), or {{null}} if unknown. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
      <parameter name="Anycast" access="readWrite" dmr:version="2.2">
        <description>
          Indicates whether this is an anycast address {{bibref|RFC4291|Section 2.6}}.  Anycast addresses are syntactically identical to unicast addresses and so need to be configured explicitly.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressType'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.IP.Interface.{i}.IPv6Prefix.{i}." access="readWrite" numEntriesParameter="IPv6PrefixNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This table contains the interface's IPv6 prefixes.  There MUST be an entry for each such prefix, not only for prefixes learned from router advertisements.
        There are several ways in which entries can be added to and deleted from this table, including:
        * Automatically via {{bibref|RFC4861}} Router Advertisements.  See also {{object|.RouterAdvertisement}}.
        * Automatically via DHCPv6 {{bibref|RFC3315}} prefix delegation {{bibref|RFC3633}}.  See also {{object|.DHCPv6.Client}}.
        * Automatically via internal CPE logic, e.g. creation of child prefixes derived from a parent prefix.
        * Manually via a GUI or some other local management interface.
        * Manually via factory default configuration.
        * By the ACS.
        The CPE MAY choose not to create {{object}} entries for {{enum|WellKnown|Origin}} prefixes or for the ULA /48 prefix {{bibref|RFC4193}}. If an {{object}} entry exists for the ULA /48 prefix, it MUST be on a downstream interface (i.e. an interface for which the physical layer interface object has ''Upstream'' = {{false}}).
        This object is based on ''ipAddressPrefixTable'' from {{bibref|RFC4293}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Prefix"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this {{object}} table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="PrefixStatus" access="readOnly" dmr:version="2.2">
        <description>
          The status of {{param|Prefix}}, indicating whether it can be used for communication.  See also {{param|PreferredLifetime}} and {{param|ValidLifetime}}.  {{enum}}
          This parameter is based on ''ipAddressStatus'' and ''ipAddressStatusTC'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Preferred">
              <description>
                Valid prefix.
              </description>
            </enumeration>
            <enumeration value="Deprecated">
              <description>
                Valid but deprecated prefix.
              </description>
            </enumeration>
            <enumeration value="Invalid">
              <description>
                Invalid prefix.
              </description>
            </enumeration>
            <enumeration value="Inaccessible">
              <description>
                Valid prefix that is not accessible because the interface to which it is assigned is not operational.
              </description>
            </enumeration>
            <enumeration value="Unknown">
              <description>
                Prefix status cannot be determined for some reason.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Invalid"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Prefix" access="readWrite" dmr:version="2.2">
        <description>
          IPv6 address prefix.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressPrefixPrefix'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>
          Mechanism via which the prefix was assigned or most recently updated. {{enum}}
          Note that:
          * {{enum|PrefixDelegation}} and {{enum|RouterAdvertisement}} prefixes can exist only on upstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{true}}),
          * {{enum|AutoConfigured}} and {{enum|WellKnown}} prefixes can exist on any interface, and
          * {{enum|Static}} and {{enum|Child}} prefixes can exist only on downstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{false}}).
          Also note that a {{enum|Child}} prefix's {{param|ParentPrefix}} will always be an {{enum|AutoConfigured}}, {{enum|PrefixDelegation}}, or {{enum|RouterAdvertisement}} prefix.
          This parameter is based on ''ipAddressOrigin'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <enumeration value="AutoConfigured">
              <description>
                Generated via internal CPE logic (e.g. the ULA /48 prefix) or derived from an internal prefix that is not modeled in any {{object}} table.
              </description>
            </enumeration>
            <enumeration value="PrefixDelegation">
              <description>
                Delegated via DHCPv6 {{bibref|RFC3633}} or some other protocol, e.g. IPv6rd {{bibref|RFC5969}}.  Also see {{param|StaticType}}.
              </description>
            </enumeration>
            <enumeration value="RouterAdvertisement">
              <description>
                Discovered via router advertisement {{bibref|RFC4861}} Prefix Information Option.
              </description>
            </enumeration>
            <enumeration value="WellKnown">
              <description>
                Specified by a standards organization, e.g. ''fe80::/10'' for link-local addresses, or ''::1/128'' for the loopback address, both of which are defined in {{bibref|RFC4291}}.
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                Created by the ACS, by some other management entity (e.g. via a GUI), or present in the factory default configuration (but not {{enum|WellKnown}}).  Unrelated to any shorter length prefix that might exist on the CPE.  Also see {{param|StaticType}}.  Can be used for RA (Prefix Information), DHCPv6 address assignment (IA_NA) or DHCPv6 prefix delegation (IA_PD).
              </description>
            </enumeration>
            <enumeration value="Child">
              <description>
                Derived from an associated {{enum|AutoConfigured}} or {{enum|PrefixDelegation}} parent prefix.  Also see {{param|StaticType}}, {{param|ParentPrefix}} and {{param|ChildPrefixBits}}.  Can be used for RA (Prefix Information), DHCPv6 address assignment (IA_NA) or DHCPv6 prefix delegation (IA_PD).
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="StaticType" access="readWrite" dmr:version="2.2">
        <description>
          Static prefix sub-type.  For a {{enum|Static|Origin}} prefix, this can be set to {{enum|PrefixDelegation}} or {{enum|Child}}, thereby creating an unconfigured prefix of the specified type that will be populated in preference to creating a new instance.  This allows the ACS to pre-create "prefix slots" with known path names that can be referenced from elsewhere in the data model before they have been populated.  {{enum}}
          This mechanism works as follows:
          * When this parameter is set to {{enum|PrefixDelegation}} or {{enum|Child}}, the instance becomes a "prefix slot" of the specified type.
          * Such an instance can be administratively enabled ({{param|Enable}} = {{true}}) but will remain operationally disabled ({{param|Status}} = {{enum|Disabled|Status}}) until it has been populated.
          * When a new prefix of of type T is needed, the CPE will look for a matching unpopulated instance, i.e. an instance with ({{param|Origin}},{{param}},{{param|Prefix}}) = ({{enum|Static|Origin}},T,"").  If the CPE finds at least one such instance it will choose one and populate it.  If already administratively enabled it will immediately become operationally enabled.  If the CPE finds no such instances, it will create and populate a new instance with ({{param|Origin}},{{param}}) = (T,T).  If the CPE finds more than one such instance, the algorithm via which it chooses which instance to populate is implementation-specific.
          * When a prefix that was populated via this mechanism becomes invalid, the CPE will reset {{param|Prefix}} to {{empty}}.  This does not affect the value of the {{param|Enable}} parameter.
          The prefix {{param}} can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Static">
              <description>
                Prefix is a "normal" {{enum|Static|Origin}} prefix.
              </description>
            </enumeration>
            <enumeration value="Inapplicable" access="readOnly">
              <description>
                Prefix is not {{enum|Static|Origin}}, so this parameter does not apply.
              </description>
            </enumeration>
            <enumeration value="PrefixDelegation">
              <description>
                Prefix will be populated when a {{enum|PrefixDelegation|Origin}} prefix needs to be created.
              </description>
            </enumeration>
            <enumeration value="Child">
              <description>
                Prefix will be populated when a {{enum|Child|Origin}} prefix needs to be created. In this case, the ACS needs also to set {{param|ParentPrefix}} and might want to set {{param|ChildPrefixBits}} (if parent prefix is not set, or goes away, then the child prefix will become operationally disabled).
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="ParentPrefix" access="readWrite" dmr:version="2.2">
        <description>
          Indicates the parent prefix from which this prefix was derived. The parent prefix is relevant only for {{enum|Child|Origin}} prefixes and for {{enum|Static|Origin}} {{enum|Child|StaticType}} prefixes (both of which will always be on downstream interfaces), i.e. for {{param|Origin}}={{enum|Child|Origin}} and for ({{param|Origin}},{{param|StaticType}}) = ({{enum|Static|Origin}},{{enum|Child|StaticType}}) prefixes.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}} (which makes sense only for a prefix whose {{param|StaticType}} is already or will be changed to {{enum|Child|StaticType}}).
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChildPrefixBits" access="readWrite" dmr:version="2.2">
        <description>
          A prefix that specifies the length of {{enum|Static|Origin}} {{enum|Child|StaticType}} prefixes and how they are derived from their {{param|ParentPrefix}}. It will be used if and only if it is not {{empty}} and is longer than the parent prefix (if it is not used, derivation of such prefixes is implementation-specific).  Any bits to the right of the parent prefix are set to the bits in this prefix.
          For example, for a parent prefix of fedc::/56, if this parameter had the value 123:4567:89ab:cdef::/64, the child /64 would be fedc:0:0:ef::/64.  For a parent prefix of fedc::/60, the child /64 would be fedc:0:0:f::/64.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="OnLink" access="readWrite" dmr:version="2.2">
        <description>
          On-link flag {{bibref|RFC4861|Section 4.6.2}} as received (in the RA) for RouterAdvertisement.  Indicates whether this prefix can be used for on-link determination.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressPrefixOnLinkFlag'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Autonomous" access="readWrite" dmr:version="2.2">
        <description>
          Autonomous address configuration flag {{bibref|RFC4861|Section 4.6.2}} as received (in the RA) for RouterAdvertisement.  Indicates whether this prefix can be used for generating global addresses as specified by SLAAC {{bibref|RFC4862}}.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressPrefixAutonomousFlag'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readWrite" dmr:version="2.2">
        <description>
          This parameter is based on ''ipAddressPrefixAdvPreferredLifetime'' from {{bibref|RFC4293}}. The time at which this prefix will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readWrite" dmr:version="2.2">
        <description>
          This parameter is based on ''ipAddressPrefixAdvValidLifetime'' from {{bibref|RFC4293}}.  The time at which this prefix will cease to be valid (i.e. will become invalid), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.Routing." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Routing object that contains the {{object|Router}} table and {{object|RIP}} protocol object.
      </description>
      <parameter name="RouterNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.Routing.Router.{i}." access="readWrite" numEntriesParameter="RouterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object allows the handling of the routing and forwarding configuration of the device.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this ''Router'' entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this ''Router'' entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="IPv6ForwardingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.Routing.Router.{i}.IPv6Forwarding.{i}." access="readWrite" numEntriesParameter="IPv6ForwardingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        Layer 3 IPv6 forwarding table.
        In addition to statically configured routes, this table MUST include dynamic routes learned through layer 3 routing protocols, including RIPng, OSPF, DHCPv6, and RA.  The CPE MAY reject attempts to delete or modify a dynamic route entry.
        For each incoming packet, the layer 3 forwarding decision is conceptually made as follows:
        * Only enabled table entries with a matching {{param|ForwardingPolicy}} are considered, i.e. those that either do not specify a {{param|ForwardingPolicy}}, or else specify a {{param|ForwardingPolicy}} that matches that of the incoming packet. 
        * Next, table entries that also have a matching destination prefix are considered, and the matching entry with the longest prefix length is applied to the packet (i.e. the entry with the most specific network). An unspecified destination address is a wild-card and always matches, but with a prefix length of zero.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack), then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        This object is based on ''inetCidrRouteTable'' from {{bibref|RFC4292}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="DestIPPrefix"/>
        <parameter ref="ForwardingPolicy"/>
        <parameter ref="NextHop"/>
        <parameter ref="Interface"/>
        <parameter ref="ForwardingMetric"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          Indicates the status of the forwarding entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="DestIPPrefix" access="readWrite" dmr:version="2.2">
        <description>
          Destination IPv6 prefix. {{empty}} indicates that it matches all destination prefixes (i.e. equivalent to "::/0"). All bits to the right of the prefix MUST be zero, e.g. 2001:edff:fe6a:f76::/64.
          Routes with a 128-bit prefix length (/128) are host routes for a specific IPv6 destination, e.g. 2001:db8:28:2:713e:a426:d167:37ab/128.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ForwardingPolicy" access="readWrite" dmr:version="2.2">
        <description>
          Identifier of a set of classes or flows that have the corresponding {{param}} value as defined in the {{object|.QoS}} object.
          A value of -1 indicates no {{param}} is specified.
          If specified, this forwarding entry is to apply only to traffic associated with the specified classes and flows.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="NextHop" access="readWrite" dmr:version="2.2">
        <description>
          IPv6 address of the next hop.
          Only one of {{param}} and {{param|Interface}} SHOULD be configured for a route. {{empty}} indicates no {{param}} is specified.
          If both are configured, {{param}} and {{param|Interface}} MUST be consistent with each other.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          {{reference}} Specifies the egress layer 3 interface associated with this entry. Example: ''InternetGatewayDevice.IPv6Specific.IP.Interface.1''. 
          Only one of {{param|NextHop}} and {{param}} SHOULD be configured for a route. {{empty}} indicates no {{param}} is specified.
          If both are configured, {{param|NextHop}} and {{param}} MUST be consistent with each other. 
          For a route that was configured by setting {{param|NextHop}} but not {{param}}, read access to {{param}} MUST return the full hierarchical parameter name for the route's egress interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>
          Protocol via which the IPv6 forwarding rule was learned.  {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="DHCPv6"/>
            <enumeration value="OSPF"/>
            <enumeration value="RA">
              <description>
                Router Advertisement Route Information Option {{bibref|RFC4191}}.
              </description>
            </enumeration>
            <enumeration value="RIPng">
              <description>
                RIPng for IPv6 {{bibref|RFC2080}}
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                For example, present in the factory default configuration, created by the ACS, or created by some other management entity (e.g. via a GUI).
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="ForwardingMetric" access="readWrite" dmr:version="2.2">
        <description>
          Forwarding metric.  A value of -1 indicates this metric is not used.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ExpirationTime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which the route will expire, or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          {{param}} is provided by an underlying dynamic routing protocol, e.g. by an {{bibref|RFC4191}} route information option.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.Routing.RouteInformation." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        Received Router Advertisement (RA) route information {{bibref|RFC4191}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables receiving route information from the RA.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.Routing.RouteInformation.InterfaceSetting.{i}." access="readOnly" numEntriesParameter="InterfaceSettingNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        IP Interface RA route information table. Contains received RA route information {{bibref|RFC4191}}. As such, the data in this table cannot be modified.
      </description>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="ForwardingEntryCreated"/>
            <enumeration value="NoForwardingEntry"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} This is the IP interface associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SourceRouter" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 Address of the router that sent the RA that included this route info.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="PreferredRouteFlag" access="readOnly" dmr:version="2.2">
        <description>
          Flag included in a specific Route Information Option within an RA message (Prf flag), as defined in {{bibref|RFC4191|Section 2.3}}. {{enum}}
          Note that this is not the Prf flag included in the base RA message. Also see {{bibref|RFC4191|Section 2.1}} which discusses how this flag is encoded on the wire.
        </description>
        <syntax>
          <string>
            <enumeration value="High"/>
            <enumeration value="Medium"/>
            <enumeration value="Low"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Prefix" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 address prefix, as received in an instance of the Route Information Option of a RA message.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
        </syntax>
      </parameter>
      <parameter name="RouteLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which {{param|Prefix}} will cease to be usable for use as a forwarding entry, or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          {{param}} is received in an instance of the Route Information Option of a RA message.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.NeighborDiscovery." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        The Neighbor Discovery Protocol (NDP) object {{bibref|RFC4861}}.  This object applies only to IPv6.  It contains an {{object|InterfaceSetting}} table that defines the NDP configuration for individual IP interfaces.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables Neighbor Discovery.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.NeighborDiscovery.InterfaceSetting.{i}." access="readWrite" numEntriesParameter="InterfaceSettingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        Per-interface Neighbor Discovery Protocol (NDP) configuration {{bibref|RFC4861}}.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack), then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          This is the IP interface associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="RetransTimer" access="readWrite" dmr:version="2.2">
        <description>
          Retransmission interval in {{units}}, as defined in {{bibref|RFC4861}}. For auto-configuration purposes, {{param}} specifies the delay between consecutive Neighbor Solicitation transmissions performed during Duplicate Address Detection (DAD) {{bibref|RFC4862|Section 5.4}}, as well as the time a node waits after sending the last Neighbor Solicitation before ending the DAD process.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="1000"/>
        </syntax>
      </parameter>
      <parameter name="RtrSolicitationInterval" access="readWrite" dmr:version="2.2">
        <description>
          Retransmission interval in {{units}}, as defined in {{bibref|RFC4861}}. For auto-configuration purposes, {{param}} specifies the delay between consecutive Router Solicitation transmissions.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="4"/>
        </syntax>
      </parameter>
      <parameter name="MaxRtrSolicitations" access="readWrite" dmr:version="2.2">
        <description>
          Maximum Number of Router Solicitation Transmission messages, as defined in {{bibref|RFC4861}}. For auto-configuration purposes {{param}} specifies the Maximum Number of Router Solicitation Transmission messages to help the host to conclude that there are no routers on the link.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="3"/>
        </syntax>
      </parameter>
      <parameter name="NUDEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables Neighbor Unreachability Detection (NUD) {{bibref|RFC4861|Section 7}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RSEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables Router Solicitation (RS) on {{param|Interface}} {{bibref|RFC4861|Section 4.1}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.RouterAdvertisement." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        The Router Advertisement (RA) object {{bibref|RFC4861}}. This object applies only to IPv6. It contains an {{object|InterfaceSetting}} table that defines the RA configuration for individual IP interfaces.
        Information received via router advertisement messages is automatically propagated to the relevant {{object|.IP.Interface}} sub-objects, e.g. to the {{object|.IP.Interface.{i}.IPv6Address}} and {{object|.IP.Interface.{i}.IPv6Prefix}} tables.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables Router Advertisement.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.RouterAdvertisement.InterfaceSetting.{i}." access="readWrite" numEntriesParameter="InterfaceSettingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        Per-interface Router Advertisement (RA) configuration {{bibref|RFC4861}}. Table entries are created for use in sending Router Advertisements. 
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack), then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
          Defines the value of the ''IsRouter'' and ''AdvSendAdvertisements'' flags from {{bibref|RFC4861|Section 4.2}}
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          This is the IP interface associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ManualPrefixes" access="readWrite" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          Manually-configured prefixes that will be sent in Router Advertisement messages.  Each referenced prefix MUST have a  {{param|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} of {{enum|Static|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} or {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}}.  Router Advertisement messages MUST include Prefix Information Options {{bibref|RFC4861}} for all ''Valid'' ({{param|.IP.Interface.{i}.IPv6Prefix.{i}.ValidLifetime}} is infinite or in the future) prefixes in this list.
          Prefixes MUST be associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8">
            <size/>
          </list>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Prefixes" access="readOnly" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          All prefixes that will be included in Router Advertisement (RA) messages sent out this interface. This list can include:
          * Prefixes from {{param|ManualPrefixes}} that are included in RA messages.
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|AutoConfigured|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8">
            <size/>
          </list>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxRtrAdvInterval" access="readWrite" dmr:version="2.2">
        <description>
          The maximum time allowed between sending unsolicited multicast Router Advertisements from the interface, in {{units}} (see {{bibref|RFC4861|Section 4.2}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="4" maxInclusive="1800"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="600"/>
        </syntax>
      </parameter>
      <parameter name="MinRtrAdvInterval" access="readWrite" dmr:version="2.2">
        <description>
          The minimum time allowed between sending unsolicited multicast Router Advertisements from the interface, in {{units}} (see {{bibref|RFC4861|Section 4.2}}).
          The value MUST be no greater than 3/4 * {{param|MaxRtrAdvInterval}}.
          Note: The ''1350'' maximum was derived from the RFC, based on 3/4 times the maximum value of {{param|MaxRtrAdvInterval}}. Similarly, the ''200'' default was derived from the RFC, based on 1/3 times the default value of {{param|MaxRtrAdvInterval}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="3" maxInclusive="1350"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="200"/>
        </syntax>
      </parameter>
      <parameter name="AdvDefaultLifetime" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Router Lifetime" field of Router Advertisement messages on this interface, in {{units}} (see {{bibref|RFC4861|Section 4.2}}).
          The value can be zero or between {{param|MaxRtrAdvInterval}} and 9000 {{units}}, but these limits can be overridden by specific documents that describe how IPv6 operates over different link layers. 
          A value of zero indicates that the router is not to be used as a default router.
          Note: The ''1800'' default was derived from the RFC, based on 3 times the default value of {{param|MaxRtrAdvInterval}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="1800"/>
        </syntax>
      </parameter>
      <parameter name="AdvManagedFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Managed address configuration" (M) flag field of Router Advertisement messages on this interafce (see {{bibref|RFC4861|Section 4.2}}, and {{bibref|RFC4862}}).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="AdvOtherConfigFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Other configuration" (O) flag field of Router Advertisement messages on this interface (see {{bibref|RFC4861|Section 4.2}}, and {{bibref|RFC4862}}).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="AdvMobileAgentFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Home agent" (H) flag field of Router Advertisement messages on this interface (see {{bibref|RFC3775|Section 7.1}}).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="AdvPreferredRouterFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Default Router Preference" (Prf) field of Router Advertisement messages on this interface, as defined in {{bibref|RFC4191|Section 2.2}}. {{enum}}
          Also see {{bibref|RFC4191|Section 2.1}} which discusses how this flag is encoded on the wire.
        </description>
        <syntax>
          <string>
            <enumeration value="High"/>
            <enumeration value="Medium"/>
            <enumeration value="Low"/>
          </string>
          <default type="object" value="Medium"/>
        </syntax>
      </parameter>
      <parameter name="AdvNDProxyFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Proxy" (P) flag field of Router Advertisement messages on this interface (see {{bibref|RFC4389|Section 4.1.3.3}}).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="AdvLinkMTU" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in MTU options of Router Advertisement messages on this interface. A value of zero indicates that no MTU options are included (see {{bibref|RFC4861|Section 4.6.4}}).
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AdvReachableTime" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Reachable Time" field of Router Advertisement messages on this interface, in {{units}} (see {{bibref|RFC4861|Section 4.2}}).
          The value zero means unspecified (by the router).
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="3600000"/>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AdvRetransTimer" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Retrans Timer" field of Router Advertisement messages on this interface (see {{bibref|RFC4861|Section 4.2}}).
          The value zero means unspecified (by the router).
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AdvCurHopLimit" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Cur Hop Limit" field of Router Advertisement messages on this interface (see {{bibref|RFC4861|Section 4.2}}).
          The value zero means unspecified (by the router).
          Note: The default can be overridden with the value specified in {{bibref|RFC3232}} that was in effect at the time of implementation.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.RouterAdvertisement.InterfaceSetting.{i}.Option.{i}." access="readWrite" numEntriesParameter="OptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This object specifies the options in a Router Advertisement (RA) message {{bibref|RFC4861|Section 4.6}}. {{object}} entries are created for use in sending Router Advertisements (enabled options MUST be included in RA messages sent). This includes support for sending DNS information in the RA message as described in {{bibref|RFC6106}}.
        This table is intended only for options that are not modeled elsewhere. For example, it is not appropriate for the MTU option (which is modeled via {{param|#.AdvLinkMTU}}).
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="2.2">
        <description>
          Option tag (type) {{bibref|RFC4861|Section 4.6}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.2">
        <description>
          A hexbinary encoded option value {{bibref|RFC4861|Section 4.6}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.Hosts." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object provides information about each of the hosts on the LAN, including those whose IP address was allocated by the CPE using DHCP as well as hosts with statically allocated IP addresses. It can also include non-IP  hosts.
      </description>
      <parameter name="HostNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.Hosts.Host.{i}." access="readOnly" numEntriesParameter="HostNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Host table.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="PhysAddress"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" status="deprecated" dmr:version="2.0">
        <description>
          A non-volatile handle used to reference this instance. {{param}} provides a mechanism for an ACS to label this instance for future reference. An initial unique value MUST be assigned when the CPE creates an instance of this object.
          This parameter is DEPRECATED because {{object}} is a transient object.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PhysAddress" access="readOnly" dmr:version="2.0">
        <description>
          Unique physical identifier of the host. For many layer 2 technologies this is typically a MAC address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.0">
        <description>
          Current IP Address of the host. {{empty}} if no address is available.
          If more than one IP address for this host is known, the CPE will choose a ''primary'' address.  All known IP addresses can be listed in the {{object|IPv4Address}} and {{object|IPv6Address}} tables.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="AddressSource" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          Indicates whether the IP address of the host was allocated by the CPE using DHCP, was assigned to the host statically, or was assigned using automatic IP address allocation.  {{enum}}
          This parameter is DEPRECATED because only {{enum|None}} and {{enum|DHCP}} made sense (the CPE doesn't know whether the address is {{enum|Static}} or {{enum|AutoIP}}).  The {{enum|DHCP}} case is now handled via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP"/>
            <enumeration value="Static"/>
            <enumeration value="AutoIP"/>
            <enumeration value="None"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DHCPClient" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} Each list item is the DHCPv4 or DHCPv6 server's client entry that corresponds to the host.
        </description>
        <syntax>
          <list maxItems="2">
            <size/>
          </list>
          <string>
            <pathRef refType="strong" targetParent=".DHCPv4.Server.Pool.{i}.Client. .DHCPv6.Server.Pool.{i}.Client." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LeaseTimeRemaining" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          DHCP lease time remaining in {{units}}.  A value of -1 indicates an infinite lease.  The value MUST be 0 (zero) if the {{param|AddressSource}} is not {{enum|DHCP|AddressSource}}.
          This parameter is DEPRECATED because DHCP lease/lifetime information can be accessed via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="AssociatedDevice" access="readOnly" dmr:version="2.2">
        <description>
          {{noreference}}The value MUST the path name of the ''AssociatedDevice'' (or equivalent) table row that models the host, or {{null}} if there is no such table.
          For example: ''InternetGatewayDevice.WiFi.AccessPoint.1.AssociatedDevice.2''
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Layer1Interface" access="readOnly" dmr:version="2.0">
        <description>
          {{noreference}}The value MUST be the path name of a row in a layer 1 interface table.  If the layer 1 device isn’t known, then {{param}} will be {{null}}.
          For example: ''InternetGatewayDevice.IPv6Specific.Ethernet.Interface.2''
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Layer3Interface" access="readOnly" dmr:version="2.0">
        <description>
          {{reference}}  If the entry represents a non-IP device, then {{param}} will be {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          Vendor Class Identifier DHCP option (Option 60) of the host.
          This is a normal string, e.g. "abc" is represented as "abc" and not say "616263" hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed.
          It MAY be defined when {{param|AddressSource}} is {{enum|DHCP|AddressSource}}. {{empty}} indicates this option is not used.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          This parameter is DEPRECATED because host-supplied DHCP options can be accessed via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          A hexbinary string, Client Identifier DHCP option (Option 61) for the specific IP connection of the client.  The option value is binary, so an exact match is REQUIRED.
          It MAY be defined when {{param|AddressSource}} is {{enum|DHCP|AddressSource}}. {{empty}} indicates this option is not used.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          This parameter is DEPRECATED because host-supplied DHCP options can be accessed via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          A hexbinary string, User Class Identifier DHCP option (Option 77) of the host.
          It MAY be defined when {{param|AddressSource}} is {{enum|DHCP|AddressSource}}. {{empty}} indicates this option is not used.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          This parameter is DEPRECATED because host-supplied DHCP options can be accessed via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="HostName" access="readOnly" dmr:version="2.0">
        <description>
          The device's host name or {{empty}} if unknown.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.0">
        <description>
          Whether or not the host is currently present on the LAN.  The method of presence detection is a local matter to  the CPE.
          The ability to list inactive hosts is OPTIONAL.  If the CPE includes inactive hosts in this table, {{param}} MUST be set to {{false}}  for each inactive host.  The length of time an inactive host remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ActiveLastChange" access="readOnly" dmr:version="2.10">
        <description>
          The datetime when {{param|Active}} last changed from {{true}} to {{false}} or from {{false}} to {{true}}.  The initial detection of a host SHOULD be treated as a transition from {{false}} to {{true}}, showing the datetime when the host was first detected.
          The ability to list inactive hosts is OPTIONAL. The length of time an inactive host remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.Hosts.Host.{i}.IPv6Address.{i}." access="readOnly" numEntriesParameter="IPv6AddressNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        The host's known IPv6 addresses.  This includes any addresses assigned via DHCP, which can also be accessed via the {{param|#.DHCPClient}} reference.
      </description>
      <uniqueKey>
        <parameter ref="IPAddress"/>
      </uniqueKey>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 address.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DNS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Properties for Domain Name Service (DNS).
      </description>
      <parameter name="SupportedRecordTypes" access="readOnly" dmr:version="2.2">
        <description>
          The DNS record types that are supported by the device. {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="A">
              <description>
                {{bibref|RFC1035}}
              </description>
            </enumeration>
            <enumeration value="AAAA">
              <description>
                {{bibref|RFC3596}}
              </description>
            </enumeration>
            <enumeration value="SRV">
              <description>
                {{bibref|RFC2782}}
              </description>
            </enumeration>
            <enumeration value="PTR">
              <description>
                {{bibref|RFC1035}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DNS.Client." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Client properties for Domain Name Service (DNS). The DNS client resolves FQDN on behalf of device internal (client) applications.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the DNS client.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the DNS client. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServerNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DNS.Client.Server.{i}." access="readWrite" numEntriesParameter="ServerNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This table contains the DNS Server IP address to be used by the DHCP Client (it does ''not'' model a DNS Server). Entries are either automatically created as result of DHCP (v4 or v6), IPCP, or RA received DNS server information, or are statically configured by the ACS.
      </description>
      <uniqueKey>
        <parameter ref="DNSServer"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="DNSServer" access="readWrite" dmr:version="2.0">
        <description>
          DNS server IP addresses.
          Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} This parameter specifies the IP interface over which the DNS query is sent.
          If {{empty}} is specified, the CPE MUST use its routing policy (Forwarding table entries), if necessary, to determine the appropriate interface.
          Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>
          Method used to assign the {{param|DNSServer}} address.  {{enum}}
          Table entries that are automatically created as result of DHCP, IPCP, or RA received DNS server information will have {{param}} set to {{enum|DHCPv4}}, {{enum|DHCPv6}}, {{enum|IPCP}}, or {{enum|RouterAdvertisement}}, as the case may be. Manually created table entires will have their {{param}} set to {{enum|Static}}.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP" status="deprecated">
              <description>
                Replaced by {{enum|DHCPv4}}.
              </description>
            </enumeration>
            <enumeration value="DHCPv4"/>
            <enumeration value="DHCPv6"/>
            <enumeration value="RouterAdvertisement"/>
            <enumeration value="IPCP"/>
            <enumeration value="Static"/>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DNS.Relay." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        DNS Relay object. The DNS proxy (or relay) function allows the forwarding of local network DNS queries to local or external DNS server(s) {{bibref|RFC5625}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the DNS Relay function.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the DNS relay. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ForwardNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DNS.Relay.Forwarding.{i}." access="readWrite" numEntriesParameter="ForwardNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        DNS Server forwarding policy to be used by the DNS Relay.  Entries are either automatically created as result of DHCP (v4 or v6), IPCP, or RA received DNS server information, or are statically configured by the ACS.
        Note: Management of re-directing queries to the device embedded DNS server is not defined in this version of the specification.
      </description>
      <uniqueKey>
        <parameter ref="DNSServer"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="DNSServer" access="readWrite" dmr:version="2.0">
        <description>
          DNS server IP addresses.
          Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Specifies the IP interface over which the DNS query is sent.
          If {{empty}} is specified, the CPE MUST use its routing policy (IP Forwarding table entries), if necessary, to determine the appropriate interface.
          Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>
          Method used to assign the {{param|DNSServer}} address.  {{enum}}
          Table entries that are automatically created as result of DHCP, IPCP, or RA received DNS server information will have {{param}} set to {{enum|DHCPv4}}, {{enum|DHCPv6}}, {{enum|IPCP}}, or {{enum|RouterAdvertisement}}, as the case may be. Manually created table entires will have their {{param}} set to {{enum|Static}}.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP" status="deprecated">
              <description>
                Replaced by {{enum|DHCPv4}}.
              </description>
            </enumeration>
            <enumeration value="DHCPv4"/>
            <enumeration value="DHCPv6"/>
            <enumeration value="RouterAdvertisement"/>
            <enumeration value="IPCP"/>
            <enumeration value="Static"/>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        The Dynamic Host Configuration Protocol (DHCP) IPv6 object {{bibref|RFC3315}}. This entire object applies to IPv6 only. It contains the {{object|Client}} and {{object|Server}} objects.
      </description>
      <parameter name="ClientNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Client.{i}." access="readWrite" numEntriesParameter="ClientNumberOfEntries" enableParameter="Enable" minEntries="1" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This object contains DHCPv6 client settings for an associated ''IP Interface'' indicated by {{param|Interface}}.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack), then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference.  If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}.  However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          {{reference}} The IP Interface associated with the {{object}} entry. This will reference an IPv6-capable interface (that is attached to the IPv6 stack), otherwise the table entry will be inoperable.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this table entry. {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="DUID" access="readOnly" dmr:version="2.2">
        <description>
          The client's DHCP Unique Identifier (DUID) {{bibref|RFC3315|Section 9}}. {{param}} is set by the CPE.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="130"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="RequestAddresses" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables inclusion of the ''Identity Association (IA) for Non-Temporary Address'' option OPTION_IA_NA(3) {{bibref|RFC3315|Section 22.4}} in Solicit messages.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="RequestPrefixes" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables inclusion of the ''Identity Association (IA) for Prefix Delegation'' option OPTION_IA_PD(25) {{bibref|RFC3633|Section 10}} in Solicit messages.
          Note that this is only appropriate for an upstream interface on a requesting router, e.g. for an RG WAN interface.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="RapidCommit" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables inclusion of the ''Rapid Commit'' option OPTION_RAPID_COMMIT(14) {{bibref|RFC3315|Section 22.14}} in Solicit messages.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Renew" access="readWrite" dmr:version="2.2">
        <description>
          When set to {{true}}, the {{object}} will renew its DHCPv6-supplied information (i.e. the CPE will do a renew or information request as needed, updating both stateful and stateless parameter values discovered by this Client instance).
        </description>
        <syntax command="true">
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SuggestedT1" access="readWrite" dmr:version="2.2">
        <description>
          T1 value, in {{units}}, that the client SHOULD use when sending IA options, e.g. OPTION_IA_NA {{bibref|RFC3315|Section 22.4}} and OPTION_IA_PD {{bibref|RFC3633|Section 10}}.
          A value of -1 indicates that no T1 value is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SuggestedT2" access="readWrite" dmr:version="2.2">
        <description>
          T2 value, in {{units}}, that the client SHOULD use when sending IA options, e.g. OPTION_IA_NA {{bibref|RFC3315|Section 22.4}} and OPTION_IA_PD {{bibref|RFC3633|Section 10}}.
          A value of -1 indicates that no T2 value is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SupportedOptions" access="readOnly" dmr:version="2.2">
        <description>
          {{list}} The options that the client is able to process in server responses.  This list MUST include both top-level and encapsulated options, e.g. if the client is able to process OPTION_IA_NA (3) with an encapsulated OPTION_IAADDR (5), the list would be expected to include both 3 and 5.
        </description>
        <syntax>
          <list/>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RequestedOptions" access="readWrite" dmr:version="2.2">
        <description>
          {{list}} An ordered list of the top-level options (i.e. not encapsulated options) that the client will explicitly request from the server.
          This parameter is intended only for options that are not necessary for the basic operation of the protocol, and are not modeled elsewhere.  For example, it is appropriate for OPTION_DNS_SERVERS {{bibref|RFC3646}} but is not appropriate for OPTION_SERVERID (which is part of the protocol), OPTION_IA_NA (which is modeled via {{param|RequestAddresses}}) or OPTION_IA_PD (which is modeled via {{param|RequestPrefixes}}).  However, the CPE MUST NOT reject an attempt to set this parameter to a value that includes options that it regards as inappropriate; instead, it MUST accept the requested options and handle them as best it can.
          Loosely speaking, these are the options that the client will include in OPTION_ORO {{bibref|RFC3315}} but the client is free to decide (in accordance with {{bibref|RFC3315}}) in which messages to request which option, whether also to request additional options, whether not to request inappropriate options, and in which order to request any options that are also in {{param|SupportedOptions}}.
        </description>
        <syntax>
          <list/>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ServerNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SentOptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ReceivedOptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Client.{i}.Server.{i}." access="readOnly" numEntriesParameter="ServerNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This is a transitory table that lists the discovered DHCPv6 servers (it does ''not'' model a local DHCP server). Table entries are automatically created to correspond with these servers. However, it is a local matter to the CPE when to delete old table entries.
      </description>
      <uniqueKey>
        <parameter ref="SourceAddress"/>
      </uniqueKey>
      <parameter name="SourceAddress" access="readOnly" dmr:version="2.2">
        <description>
          The IP address from which the message most recently received from this server was sent.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="DUID" access="readOnly" dmr:version="2.2">
        <description>
          The server's DHCP Unique Identifier (DUID) {{bibref|RFC3315|Section 9}} as received via OPTION_SERVERID.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="130"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="InformationRefreshTime" access="readOnly" dmr:version="2.2">
        <description>
          The OPTION_INFORMATION_REFRESH_TIME value {{bibref|RFC4242}} that was most recently received from this server, converted to the ''dateTime'' at which the associated information will expire.  If no such option has been received, the parameter value MUST be the "Unknown Time" {{null}}.  If the information will never expire, the parameter value MUST be infinite time 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Client.{i}.SentOption.{i}." access="readWrite" numEntriesParameter="SentOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        The top-level options and option values (including any encapsulated options) that the client will send to the server.
        This table is intended only for options that are not part of the basic operation of the protocol, and whose values are simple, do not often change and are not modeled elsewhere.  For example, it is appropriate for OPTION_USER_CLASS (whose value is a list of user classes) but is not appropriate for OPTION_RECONF_MSG (which is part of the protocol), OPTION_IA_NA (which is modeled via {{param|#.RequestAddresses}}) or OPTION_RAPID_COMMIT (which is modeled via {{param|#.RapidCommit}}).
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="2.2">
        <description>
          Option tag (code) {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.2">
        <description>
          A hexbinary encoded option data {{bibref|RFC3315|Section 22.1}}.
          Note: The length of the option data is ''option-len'' octets, as specified in {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Client.{i}.ReceivedOption.{i}." access="readOnly" numEntriesParameter="ReceivedOptionNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2" dmr:noUniqueKeys="true">
      <description>
        This is a transitory table that lists all the options received from all servers. Table entries are automatically created to correspond with received options. However, it is a local matter to the CPE when to delete old table entries.
        If the same option is received multiple times, whether from one or more servers, it is up to the CPE to decide which entries to include (i.e. whether the same option will be present multiple times). In order to allow for the same option to be present multiple times within the table, this table has no unique key defined.
      </description>
      <parameter name="Tag" access="readOnly" dmr:version="2.2">
        <description>
          Option tag (code) {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.2">
        <description>
          A hexbinary encoded option data {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="Server" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} This is the server that sent the option to the client. Each {{object}} entry MUST have an associated server.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.Server." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Server." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        DHCPv6 server configuration.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables the DHCPv6 server function.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PoolNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Server.Pool.{i}." access="readWrite" numEntriesParameter="PoolNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        DHCPv6 server pool table.
        Each instance of this object defines a DHCPv6 server pool. Client requests are associated with pools based on criteria such as source interface, supplied DHCPv6 options, and source address. 
        Overlapping pool ranges MUST be supported.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack) then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Order"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.2">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each DHCPv6 request, the highest ordered entry that matches the association criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          {{reference}} The IP Interface associated with the {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DUID" access="readWrite" dmr:version="2.2">
        <description>
          Pool association criterion. 
          A hexbinary string used to identify one or more LAN devices, value of the DHCPv6 Client Identifier (Option 1) {{bibref|RFC3315|Section 22.2}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used.
          Note: DHCPv6 Option 1 (DUID) is sometimes referred to as ''Client Identifier''.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="130"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DUIDExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, matching packets are those that match the {{param|DUID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|DUID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readWrite" dmr:version="2.2">
        <description>
          Pool association criterion. 
          A hexbinary string used to identify one or more LAN devices, value of the DHCPv6 Vendor Class Identifier (Option 16) {{bibref|RFC3315|Section 22.16}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, matching packets are those that match the {{param|VendorClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|VendorClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readWrite" dmr:version="2.2">
        <description>
          Pool association criterion. 
          A hexbinary string used to identify one or more LAN devices, value of the DHCPv6 User Class Identifier (Option 15) {{bibref|RFC3315|Section 22.15}}.
          {{empty}} indicates this criterion is not used.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="UserClassIDExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, matching packets are those that match the {{param|UserClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|UserClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceAddress" access="readWrite" dmr:version="2.2">
        <description>
          Pool association criterion.
          Source address (link-layer address) of DHCPv6 messages sent from the DHCPv6 client.  This criterion is only likely to be useful if this is a link-layer address.
          {{empty}} indicates this criterion is not used for serving.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceAddressMask" access="readWrite" dmr:version="2.2">
        <description>
          Bit-mask for the source address, where matching of a packet's source address with the {{param|SourceAddress}} is only to be done for bit positions set to one in the mask.  A mask of {{empty}} indicates all bits of the {{param|SourceAddress}} are to be used.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceAddressExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, matching packets are those that match the (masked) {{param|SourceAddress}} entry, if specified.
          If {{true}}, matching packets are those that do not match the (masked) {{param|SourceAddress}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IANAEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables IANA offers.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IANAManualPrefixes" access="readWrite" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          Manually-configured prefixes from which IA_NA addresses will be assigned.  Each referenced prefix MUST have a  {{param|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} of {{enum|Static|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} or {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}}.  All clients that request IA_NA and match filter criteria on this {{param|Interface}} MUST be offered IA_NA addresses from all of the ''Valid'' ({{param|.IP.Interface.{i}.IPv6Prefix.{i}.ValidLifetime}} is infinite or in the future) /64 prefixes in this list.
          Prefixes MUST be associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8">
            <size/>
          </list>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IANAPrefixes" access="readOnly" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          All prefixes from which IA_NA addresses will be assigned. This list can include:
          * Prefixes from {{param|IANAManualPrefixes}} that are used for IA_NA offers.
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|AutoConfigured|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8">
            <size/>
          </list>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IAPDEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables IAPD offers.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IAPDManualPrefixes" access="readWrite" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          Manually-configured prefixes from which IA_PD prefixes will be derived.  This list can include:
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|Static|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|PrefixDelegation|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with upstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{true}}).
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} = {{enum|Static|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} or {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} associated with with the interface instance referenced by {{param|Interface}}.
          All clients that request IA_PD and match filter criteria on this {{param|Interface}} MUST be offered IA_PD prefixes derived from all of the ''Valid'' ({{param|.IP.Interface.{i}.IPv6Prefix.{i}.ValidLifetime}} is infinite or in the future) prefixes in this list.
        </description>
        <syntax>
          <list maxItems="8">
            <size/>
          </list>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IAPDPrefixes" access="readOnly" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          All prefixes for which IA_PD prefixes will be assigned. This list can include:
          * Prefixes from {{param|IAPDManualPrefixes}} that are used for IA_PD offers.
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|PrefixDelegation|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|AutoConfigured|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with upstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{true}}).
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|AutoConfigured|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8">
            <size/>
          </list>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IAPDAddLength" access="readWrite" dmr:version="2.2">
        <description>
          The RECOMMENDED minimum number of bits to add to {{param|IAPDManualPrefixes}} or {{param|IAPDPrefixes}} in order to determine the length of prefixes that are offered in an IA_PD.  The device is responsible for ensuring that it does not delegate a prefix longer than /64.  The device can have additional logic that is used (in conjunction with this parameter) to determine the actual length of prefixes offered in an IA_PD.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="64"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ClientNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Server.Pool.{i}.Client.{i}." access="readOnly" numEntriesParameter="ClientNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        DHCPv6 client table.
        This table lists details of DHCPv6 clients that matched the filter criteria of this {{object|#}} entry.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SourceAddress"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
          Note: There is no guarantee that the {{param}} value on automatically-created {{object}} instances will be retained. This is because automatically-created {{object}} instances can be transitory.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="SourceAddress" access="readOnly" dmr:version="2.2">
        <description>
          Source address of the DHCPv6 client.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.2">
        <description>
          Whether or not the DHCPv6 client is currently present on the LAN.  The method of presence detection is a local matter to  the CPE.
          The ability to list inactive DHCPv6 clients is OPTIONAL.  If the CPE includes inactive DHCPv6 clients in this table, {{param}} MUST be set to {{false}}  for each inactive DHCPv6 client.  The length of time an inactive DHCPv6 client remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6PrefixNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Server.Pool.{i}.Client.{i}.IPv6Address.{i}." access="readOnly" numEntriesParameter="IPv6AddressNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        IPv6 addresses assigned to this client via IA_NA.
      </description>
      <uniqueKey>
        <parameter ref="IPAddress"/>
      </uniqueKey>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 address.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which this address will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which this address will cease to be valid (i.e. will become invalid), or {{null}} if unknown. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Server.Pool.{i}.Client.{i}.IPv6Prefix.{i}." access="readOnly" numEntriesParameter="IPv6PrefixNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        IPv6 prefixes delegated to this client via IA_PD.
      </description>
      <uniqueKey>
        <parameter ref="Prefix"/>
      </uniqueKey>
      <parameter name="Prefix" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 address prefix.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which this prefix will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which this prefix will cease to be valid (i.e. will become invalid), or {{null}} if unknown. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Server.Pool.{i}.Client.{i}.Option.{i}." access="readOnly" numEntriesParameter="OptionNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2" dmr:noUniqueKeys="true">
      <description>
        DHCPv6 options supplied by this client, e.g. ''DUID'' (Option 1), ''UserClassID'' (Option 15) or ''VendorClassID'' (option 16).
      </description>
      <parameter name="Tag" access="readOnly" dmr:version="2.2">
        <description>
          Option tag (code) {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.2">
        <description>
          A hexbinary encoded option value.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPv6Specific.DHCPv6.Server.Pool.{i}.Option.{i}." access="readWrite" numEntriesParameter="OptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This object specifies the DHCPv6 options that MUST, if enabled, be offered to clients whose DHCPv6 requests are associated with this pool. If {{param|PassthroughClient}} is specified, and the referenced client has a value for a given option then the {{param|PassthroughClient}} option value will be sent instead of {{param|Value}}. Otherwise, {{param|Value}} will be sent.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="2.2">
        <description>
          Option tag (code) {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.2">
        <description>
          A hexbinary encoded option value.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PassthroughClient" access="readWrite" dmr:version="2.2">
        <description>
          {{reference}} Indicates whether this {{object}} entry is configured for passthrough.
          If {{param}} is specified, and the referenced client (since boot) has received a value from an associated upstream DHCPv6 server for the given {{param|Tag}} option, then the referenced client's option value will be sent instead of {{param|Value}}. Otherwise, {{param|Value}} will be sent.
          {{empty}} indicates that passthrough is not configured for this {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="###.Client." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.X_GRE." access="readWrite" numEntriesParameter="TunnelNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <parameter name="TunnelNumberOfEntries" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|LANDevice}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.X_GRE.Tunnel.{i}." access="readWrite" minEntries="0" maxEntries="unbounded" dmr:version="1.0">
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readOnly" dmr:version="1.0">
        <description>
          Number of instances of {{object|LANDevice}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RemoteEndpoint" access="readWrite" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RemoteEndpoint2" access="readWrite" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnRemoteEndpoint" access="readWrite" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceGroup" access="readOnly" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Checksum" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Seq" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Key" access="readWrite" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DownstreamShapingRate" access="readWrite" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VlanGroupNumberOfEntries" access="readOnly" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxAssociatedDevices" access="readOnly" dmr:version="1.1">
        <description>
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <profile name="Baseline:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice." requirement="present">
        <parameter ref="DeviceSummary" requirement="readOnly"/>
        <parameter ref="LANDeviceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="WANDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.DeviceInfo." requirement="present">
        <parameter ref="Manufacturer" requirement="readOnly"/>
        <parameter ref="ManufacturerOUI" requirement="readOnly"/>
        <parameter ref="ModelName" requirement="readOnly"/>
        <parameter ref="Description" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
        <parameter ref="HardwareVersion" requirement="readOnly"/>
        <parameter ref="SoftwareVersion" requirement="readOnly"/>
        <parameter ref="SpecVersion" requirement="readOnly"/>
        <parameter ref="ProvisioningCode" requirement="readWrite"/>
        <parameter ref="UpTime" requirement="readOnly"/>
        <parameter ref="DeviceLog" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.ManagementServer." requirement="present">
        <parameter ref="URL" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="PeriodicInformEnable" requirement="readWrite"/>
        <parameter ref="PeriodicInformInterval" requirement="readWrite"/>
        <parameter ref="PeriodicInformTime" requirement="readWrite"/>
        <parameter ref="ParameterKey" requirement="readOnly"/>
        <parameter ref="ConnectionRequestURL" requirement="readOnly"/>
        <parameter ref="ConnectionRequestUsername" requirement="readWrite"/>
        <parameter ref="ConnectionRequestPassword" requirement="readWrite"/>
        <parameter ref="UpgradesManaged" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer3Forwarding." requirement="present">
        <parameter ref="DefaultConnectionService" requirement="readWrite"/>
        <parameter ref="ForwardNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Type" requirement="readWrite"/>
        <parameter ref="DestIPAddress" requirement="readWrite"/>
        <parameter ref="DestSubnetMask" requirement="readWrite"/>
        <parameter ref="SourceIPAddress" requirement="readWrite"/>
        <parameter ref="SourceSubnetMask" requirement="readWrite"/>
        <parameter ref="GatewayIPAddress" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="ForwardingMetric" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANConfigSecurity." requirement="present">
        <parameter ref="ConfigPassword" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}." requirement="present">
        <parameter ref="LANEthernetInterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="LANUSBInterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="LANWLANConfigurationNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." requirement="present">
        <parameter ref="DHCPServerConfigurable" requirement="readWrite"/>
        <parameter ref="DHCPServerEnable" requirement="readWrite"/>
        <parameter ref="DHCPRelay" requirement="readOnly"/>
        <parameter ref="MinAddress" requirement="readWrite"/>
        <parameter ref="MaxAddress" requirement="readWrite"/>
        <parameter ref="ReservedAddresses" requirement="readWrite"/>
        <parameter ref="SubnetMask" requirement="readWrite"/>
        <parameter ref="DNSServers" requirement="readWrite"/>
        <parameter ref="DomainName" requirement="readWrite"/>
        <parameter ref="IPRouters" requirement="readWrite"/>
        <parameter ref="IPInterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="IPInterfaceIPAddress" requirement="readWrite"/>
        <parameter ref="IPInterfaceSubnetMask" requirement="readWrite"/>
        <parameter ref="IPInterfaceAddressingType" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.Hosts." requirement="present">
        <parameter ref="HostNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.Hosts.Host.{i}." requirement="present">
        <parameter ref="IPAddress" requirement="readOnly"/>
        <parameter ref="AddressSource" requirement="readOnly"/>
        <parameter ref="LeaseTimeRemaining" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="HostName" requirement="readOnly"/>
        <parameter ref="InterfaceType" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}." requirement="present">
        <parameter ref="WANConnectionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANCommonInterfaceConfig." requirement="present">
        <parameter ref="EnabledForInternet" requirement="readOnly"/>
        <parameter ref="WANAccessType" requirement="readOnly"/>
        <parameter ref="Layer1UpstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="Layer1DownstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="PhysicalLinkStatus" requirement="readOnly"/>
        <parameter ref="TotalBytesSent" requirement="readOnly"/>
        <parameter ref="TotalBytesReceived" requirement="readOnly"/>
        <parameter ref="TotalPacketsSent" requirement="readOnly"/>
        <parameter ref="TotalPacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." requirement="present">
        <parameter ref="WANIPConnectionNumberOfEntries" requirement="readOnly"/>
        <parameter ref="WANPPPConnectionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ConnectionStatus" requirement="readOnly"/>
        <parameter ref="PossibleConnectionTypes" requirement="readOnly"/>
        <parameter ref="ConnectionType" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Uptime" requirement="readOnly"/>
        <parameter ref="LastConnectionError" requirement="readOnly"/>
        <parameter ref="RSIPAvailable" requirement="readOnly"/>
        <parameter ref="NATEnabled" requirement="readWrite"/>
        <parameter ref="AddressingType" requirement="readOnly"/>
        <parameter ref="ExternalIPAddress" requirement="readOnly"/>
        <parameter ref="SubnetMask" requirement="readOnly"/>
        <parameter ref="DefaultGateway" requirement="readOnly"/>
        <parameter ref="DNSEnabled" requirement="readOnly"/>
        <parameter ref="DNSOverrideAllowed" requirement="readOnly"/>
        <parameter ref="DNSServers" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="ConnectionTrigger" requirement="readWrite"/>
        <parameter ref="RouteProtocolRx" requirement="readWrite"/>
        <parameter ref="PortMappingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.PortMapping.{i}." requirement="createDelete">
        <parameter ref="PortMappingEnabled" requirement="readWrite"/>
        <parameter ref="PortMappingLeaseDuration" requirement="readOnly"/>
        <parameter ref="RemoteHost" requirement="readWrite"/>
        <parameter ref="ExternalPort" requirement="readWrite"/>
        <parameter ref="InternalPort" requirement="readWrite"/>
        <parameter ref="PortMappingProtocol" requirement="readWrite"/>
        <parameter ref="InternalClient" requirement="readWrite"/>
        <parameter ref="PortMappingDescription" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.Stats." requirement="present">
        <parameter ref="EthernetBytesSent" requirement="readOnly"/>
        <parameter ref="EthernetBytesReceived" requirement="readOnly"/>
        <parameter ref="EthernetPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetPacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ConnectionStatus" requirement="readOnly"/>
        <parameter ref="PossibleConnectionTypes" requirement="readOnly"/>
        <parameter ref="ConnectionType" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Uptime" requirement="readOnly"/>
        <parameter ref="LastConnectionError" requirement="readOnly"/>
        <parameter ref="RSIPAvailable" requirement="readOnly"/>
        <parameter ref="NATEnabled" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="ExternalIPAddress" requirement="readOnly"/>
        <parameter ref="DNSEnabled" requirement="readOnly"/>
        <parameter ref="DNSOverrideAllowed" requirement="readOnly"/>
        <parameter ref="DNSServers" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="TransportType" requirement="readOnly"/>
        <parameter ref="PPPoEACName" requirement="readWrite"/>
        <parameter ref="PPPoEServiceName" requirement="readWrite"/>
        <parameter ref="ConnectionTrigger" requirement="readWrite"/>
        <parameter ref="RouteProtocolRx" requirement="readWrite"/>
        <parameter ref="PortMappingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.PortMapping.{i}." requirement="createDelete">
        <parameter ref="PortMappingEnabled" requirement="readWrite"/>
        <parameter ref="PortMappingLeaseDuration" requirement="readOnly"/>
        <parameter ref="RemoteHost" requirement="readWrite"/>
        <parameter ref="ExternalPort" requirement="readWrite"/>
        <parameter ref="InternalPort" requirement="readWrite"/>
        <parameter ref="PortMappingProtocol" requirement="readWrite"/>
        <parameter ref="InternalClient" requirement="readWrite"/>
        <parameter ref="PortMappingDescription" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.Stats." requirement="present">
        <parameter ref="EthernetBytesSent" requirement="readOnly"/>
        <parameter ref="EthernetBytesReceived" requirement="readOnly"/>
        <parameter ref="EthernetPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Baseline:2" base="Baseline:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}." requirement="createDelete">
        <parameter ref="StaticRoute" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." requirement="present">
        <parameter ref="MACAddress" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.Hosts.Host.{i}." requirement="present">
        <parameter ref="Layer2Interface" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANInterfaces." requirement="present">
        <parameter ref="LANEthernetInterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="LANUSBInterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="LANWLANConfigurationNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}." requirement="createDelete">
        <parameter ref="Reset" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.Stats." requirement="present">
        <parameter ref="EthernetErrorsSent" requirement="readOnly"/>
        <parameter ref="EthernetErrorsReceived" requirement="readOnly"/>
        <parameter ref="EthernetUnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetUnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetDiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetDiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetMulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetMulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetBroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetBroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetUnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}." requirement="createDelete">
        <parameter ref="Reset" requirement="readWrite"/>
        <parameter ref="PPPoESessionID" requirement="readOnly"/>
        <parameter ref="DefaultGateway" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.Stats." requirement="present">
        <parameter ref="EthernetErrorsSent" requirement="readOnly"/>
        <parameter ref="EthernetErrorsReceived" requirement="readOnly"/>
        <parameter ref="EthernetUnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetUnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetDiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetDiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetMulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetMulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetBroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetBroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetUnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetLAN:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="MACAddressControlEnabled" requirement="readWrite"/>
        <parameter ref="MaxBitRate" requirement="readWrite"/>
        <parameter ref="DuplexMode" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetLAN:2" base="EthernetLAN:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.Stats." requirement="present">
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="USBLAN:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="MACAddressControlEnabled" requirement="readWrite"/>
        <parameter ref="Standard" requirement="readOnly"/>
        <parameter ref="Type" requirement="readOnly"/>
        <parameter ref="Rate" requirement="readOnly"/>
        <parameter ref="Power" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="CellsSent" requirement="readOnly"/>
        <parameter ref="CellsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="USBLAN:2" base="USBLAN:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.Stats." requirement="present">
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="WiFiLAN:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="BSSID" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readWrite"/>
        <parameter ref="Channel" requirement="readWrite"/>
        <parameter ref="SSID" requirement="readWrite"/>
        <parameter ref="BeaconType" requirement="readWrite"/>
        <parameter ref="MACAddressControlEnabled" requirement="readWrite"/>
        <parameter ref="Standard" requirement="readOnly"/>
        <parameter ref="WEPKeyIndex" requirement="readWrite"/>
        <parameter ref="KeyPassphrase" requirement="readWrite"/>
        <parameter ref="WEPEncryptionLevel" requirement="readOnly"/>
        <parameter ref="BasicEncryptionModes" requirement="readWrite"/>
        <parameter ref="BasicAuthenticationMode" requirement="readWrite"/>
        <parameter ref="WPAEncryptionModes" requirement="readWrite"/>
        <parameter ref="WPAAuthenticationMode" requirement="readWrite"/>
        <parameter ref="PossibleChannels" requirement="readOnly"/>
        <parameter ref="BasicDataTransmitRates" requirement="readWrite"/>
        <parameter ref="OperationalDataTransmitRates" requirement="readWrite"/>
        <parameter ref="PossibleDataTransmitRates" requirement="readOnly"/>
        <parameter ref="RadioEnabled" requirement="readWrite"/>
        <parameter ref="AutoRateFallBackEnabled" requirement="readWrite"/>
        <parameter ref="TotalBytesSent" requirement="readOnly"/>
        <parameter ref="TotalBytesReceived" requirement="readOnly"/>
        <parameter ref="TotalPacketsSent" requirement="readOnly"/>
        <parameter ref="TotalPacketsReceived" requirement="readOnly"/>
        <parameter ref="TotalAssociations" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.AssociatedDevice.{i}." requirement="present">
        <parameter ref="AssociatedDeviceMACAddress" requirement="readOnly"/>
        <parameter ref="AssociatedDeviceIPAddress" requirement="readOnly"/>
        <parameter ref="AssociatedDeviceAuthenticationState" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WEPKey.{i}." requirement="present">
        <parameter ref="WEPKey" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.{i}." requirement="present">
        <parameter ref="PreSharedKey" requirement="readWrite"/>
        <parameter ref="KeyPassphrase" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="WiFiLAN:2" base="WiFiLAN:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="AutoChannelEnable" requirement="readWrite"/>
        <parameter ref="SSIDAdvertisementEnabled" requirement="readWrite"/>
        <parameter ref="TransmitPowerSupported" requirement="readOnly"/>
        <parameter ref="TransmitPower" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.Stats." requirement="present">
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="WiFiWMM:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}." requirement="present">
        <parameter ref="WMMSupported" requirement="readOnly"/>
        <parameter ref="UAPSDSupported" requirement="readOnly"/>
        <parameter ref="WMMEnable" requirement="readWrite"/>
        <parameter ref="UAPSDEnable" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.APWMMParameter.{i}." requirement="present">
        <parameter ref="AIFSN" requirement="readWrite"/>
        <parameter ref="ECWMin" requirement="readWrite"/>
        <parameter ref="ECWMax" requirement="readWrite"/>
        <parameter ref="TXOP" requirement="readWrite"/>
        <parameter ref="AckPolicy" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.STAWMMParameter.{i}." requirement="present">
        <parameter ref="AIFSN" requirement="readWrite"/>
        <parameter ref="ECWMin" requirement="readWrite"/>
        <parameter ref="ECWMax" requirement="readWrite"/>
        <parameter ref="TXOP" requirement="readWrite"/>
        <parameter ref="AckPolicy" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="WiFiWPS:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="DeviceName" requirement="readOnly"/>
        <parameter ref="DevicePassword" requirement="readWrite"/>
        <parameter ref="UUID" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="ConfigMethodsSupported" requirement="readOnly"/>
        <parameter ref="ConfigMethodsEnabled" requirement="readWrite"/>
        <parameter ref="SetupLockedState" requirement="readOnly"/>
        <parameter ref="SetupLock" requirement="readWrite"/>
        <parameter ref="ConfigurationState" requirement="readOnly"/>
        <parameter ref="LastConfigurationError" requirement="readOnly"/>
        <parameter ref="RegistrarNumberOfEntries" requirement="readOnly"/>
        <parameter ref="RegistrarEstablished" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS.Registrar.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="UUID" requirement="readOnly"/>
        <parameter ref="DeviceName" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ADSLWAN:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="UpstreamCurrRate" requirement="readOnly"/>
        <parameter ref="DownstreamCurrRate" requirement="readOnly"/>
        <parameter ref="UpstreamMaxRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamAttenuation" requirement="readOnly"/>
        <parameter ref="DownstreamAttenuation" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
        <parameter ref="ATURVendor" requirement="readOnly"/>
        <parameter ref="ATURCountry" requirement="readOnly"/>
        <parameter ref="ATUCVendor" requirement="readOnly"/>
        <parameter ref="ATUCCountry" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats." requirement="present"/>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Total." requirement="present">
        <parameter ref="ReceiveBlocks" requirement="readOnly"/>
        <parameter ref="TransmitBlocks" requirement="readOnly"/>
        <parameter ref="CellDelin" requirement="readOnly"/>
        <parameter ref="LinkRetrain" requirement="readOnly"/>
        <parameter ref="InitErrors" requirement="readOnly"/>
        <parameter ref="InitTimeouts" requirement="readOnly"/>
        <parameter ref="LossOfFraming" requirement="readOnly"/>
        <parameter ref="ErroredSecs" requirement="readOnly"/>
        <parameter ref="SeverelyErroredSecs" requirement="readOnly"/>
        <parameter ref="FECErrors" requirement="readOnly"/>
        <parameter ref="ATUCFECErrors" requirement="readOnly"/>
        <parameter ref="HECErrors" requirement="readOnly"/>
        <parameter ref="ATUCHECErrors" requirement="readOnly"/>
        <parameter ref="CRCErrors" requirement="readOnly"/>
        <parameter ref="ATUCCRCErrors" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Showtime." requirement="present">
        <parameter ref="ReceiveBlocks" requirement="readOnly"/>
        <parameter ref="TransmitBlocks" requirement="readOnly"/>
        <parameter ref="CellDelin" requirement="readOnly"/>
        <parameter ref="LinkRetrain" requirement="readOnly"/>
        <parameter ref="InitErrors" requirement="readOnly"/>
        <parameter ref="InitTimeouts" requirement="readOnly"/>
        <parameter ref="LossOfFraming" requirement="readOnly"/>
        <parameter ref="ErroredSecs" requirement="readOnly"/>
        <parameter ref="SeverelyErroredSecs" requirement="readOnly"/>
        <parameter ref="FECErrors" requirement="readOnly"/>
        <parameter ref="ATUCFECErrors" requirement="readOnly"/>
        <parameter ref="HECErrors" requirement="readOnly"/>
        <parameter ref="ATUCHECErrors" requirement="readOnly"/>
        <parameter ref="CRCErrors" requirement="readOnly"/>
        <parameter ref="ATUCCRCErrors" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLConnectionManagement." requirement="present">
        <parameter ref="ConnectionServiceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLConnectionManagement.ConnectionService.{i}." requirement="present">
        <parameter ref="WANConnectionDevice" requirement="readOnly"/>
        <parameter ref="WANConnectionService" requirement="readOnly"/>
        <parameter ref="DestinationAddress" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readOnly"/>
        <parameter ref="ConnectionType" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." requirement="createDelete"/>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readWrite"/>
        <parameter ref="AutoConfig" requirement="readOnly"/>
        <parameter ref="DestinationAddress" requirement="readWrite"/>
        <parameter ref="ATMTransmittedBlocks" requirement="readOnly"/>
        <parameter ref="ATMReceivedBlocks" requirement="readOnly"/>
        <parameter ref="AAL5CRCErrors" requirement="readOnly"/>
        <parameter ref="ATMCRCErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ADSL2WAN:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationSupported" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationRequested" requirement="readWrite"/>
        <parameter ref="LinkEncapsulationUsed" requirement="readOnly"/>
        <parameter ref="StandardsSupported" requirement="readOnly"/>
        <parameter ref="StandardUsed" requirement="readOnly"/>
        <parameter ref="UpstreamMaxRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.TestParams." requirement="present">
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNds" requirement="readOnly"/>
        <parameter ref="LATNus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." requirement="createDelete"/>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readWrite"/>
        <parameter ref="AutoConfig" requirement="readOnly"/>
        <parameter ref="DestinationAddress" requirement="readWrite"/>
        <parameter ref="ATMTransmittedBlocks" requirement="readOnly"/>
        <parameter ref="ATMReceivedBlocks" requirement="readOnly"/>
        <parameter ref="ATMCRCErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VDSL2WAN:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationSupported" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationRequested" requirement="readWrite"/>
        <parameter ref="LinkEncapsulationUsed" requirement="readOnly"/>
        <parameter ref="StandardsSupported" requirement="readOnly"/>
        <parameter ref="StandardUsed" requirement="readOnly"/>
        <parameter ref="AllowedProfiles" requirement="readOnly"/>
        <parameter ref="CurrentProfile" requirement="readOnly"/>
        <parameter ref="UPBOKLE" requirement="readOnly"/>
        <parameter ref="UpstreamMaxRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamAttenuation" requirement="readOnly"/>
        <parameter ref="DownstreamAttenuation" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
        <parameter ref="TRELLISds" requirement="readOnly"/>
        <parameter ref="TRELLISus" requirement="readOnly"/>
        <parameter ref="ACTSNRMODEds" requirement="readOnly"/>
        <parameter ref="ACTSNRMODEus" requirement="readOnly"/>
        <parameter ref="ACTUALCE" requirement="readOnly"/>
        <parameter ref="SNRMpbds" requirement="readOnly"/>
        <parameter ref="SNRMpbus" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.TestParams." requirement="present">
        <parameter ref="HLOGGds" requirement="readOnly"/>
        <parameter ref="HLOGGus" requirement="readOnly"/>
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNGds" requirement="readOnly"/>
        <parameter ref="QLNGus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRGds" requirement="readOnly"/>
        <parameter ref="SNRGus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNds" requirement="readOnly"/>
        <parameter ref="LATNus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." requirement="createDelete"/>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readWrite"/>
        <parameter ref="AutoConfig" requirement="readOnly"/>
        <parameter ref="DestinationAddress" requirement="readWrite"/>
        <parameter ref="ATMTransmittedBlocks" requirement="readOnly"/>
        <parameter ref="ATMReceivedBlocks" requirement="readOnly"/>
        <parameter ref="ATMCRCErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="PTMWAN:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="FramesSent" requirement="readOnly"/>
        <parameter ref="FramesReceived" requirement="readOnly"/>
        <parameter ref="OOSNearEnd" requirement="readOnly"/>
        <parameter ref="OOSFarEnd" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetWAN:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readWrite"/>
        <parameter ref="DuplexMode" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANEthernetLinkConfig." requirement="present">
        <parameter ref="EthernetLinkStatus" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="POTSWAN:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPOTSLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="ISPPhoneNumber" requirement="readOnly"/>
        <parameter ref="ISPInfo" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readOnly"/>
        <parameter ref="NumberOfRetries" requirement="readOnly"/>
        <parameter ref="DelayBetweenRetries" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="QoS:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.QueueManagement." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="MaxQueues" requirement="readOnly"/>
        <parameter ref="MaxClassificationEntries" requirement="readOnly"/>
        <parameter ref="ClassificationNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxAppEntries" requirement="readOnly"/>
        <parameter ref="AppNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxFlowEntries" requirement="readOnly"/>
        <parameter ref="FlowNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxPolicerEntries" requirement="readOnly"/>
        <parameter ref="PolicerNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxQueueEntries" requirement="readOnly"/>
        <parameter ref="QueueNumberOfEntries" requirement="readOnly"/>
        <parameter ref="DefaultForwardingPolicy" requirement="readWrite"/>
        <parameter ref="DefaultPolicer" requirement="readWrite"/>
        <parameter ref="DefaultQueue" requirement="readWrite"/>
        <parameter ref="DefaultDSCPMark" requirement="readWrite"/>
        <parameter ref="DefaultEthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="AvailableAppList" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Classification.{i}." requirement="createDelete">
        <parameter ref="ClassificationKey" requirement="readOnly"/>
        <parameter ref="ClassificationEnable" requirement="readWrite"/>
        <parameter ref="ClassificationStatus" requirement="readOnly"/>
        <parameter ref="ClassificationOrder" requirement="readWrite"/>
        <parameter ref="ClassInterface" requirement="readWrite"/>
        <parameter ref="DestIP" requirement="readWrite"/>
        <parameter ref="DestMask" requirement="readWrite"/>
        <parameter ref="DestIPExclude" requirement="readWrite"/>
        <parameter ref="SourceIP" requirement="readWrite"/>
        <parameter ref="SourceMask" requirement="readWrite"/>
        <parameter ref="SourceIPExclude" requirement="readWrite"/>
        <parameter ref="Protocol" requirement="readWrite"/>
        <parameter ref="ProtocolExclude" requirement="readWrite"/>
        <parameter ref="DestPort" requirement="readWrite"/>
        <parameter ref="DestPortRangeMax" requirement="readWrite"/>
        <parameter ref="DestPortExclude" requirement="readWrite"/>
        <parameter ref="SourcePort" requirement="readWrite"/>
        <parameter ref="SourcePortRangeMax" requirement="readWrite"/>
        <parameter ref="SourcePortExclude" requirement="readWrite"/>
        <parameter ref="SourceMACAddress" requirement="readWrite"/>
        <parameter ref="SourceMACExclude" requirement="readWrite"/>
        <parameter ref="DestMACAddress" requirement="readWrite"/>
        <parameter ref="DestMACExclude" requirement="readWrite"/>
        <parameter ref="DSCPCheck" requirement="readWrite"/>
        <parameter ref="DSCPExclude" requirement="readWrite"/>
        <parameter ref="DSCPMark" requirement="readWrite"/>
        <parameter ref="EthernetPriorityCheck" requirement="readWrite"/>
        <parameter ref="EthernetPriorityExclude" requirement="readWrite"/>
        <parameter ref="EthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="VLANIDCheck" requirement="readWrite"/>
        <parameter ref="VLANIDExclude" requirement="readWrite"/>
        <parameter ref="ForwardingPolicy" requirement="readWrite"/>
        <parameter ref="ClassPolicer" requirement="readWrite"/>
        <parameter ref="ClassQueue" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Policer.{i}." requirement="createDelete">
        <parameter ref="PolicerKey" requirement="readOnly"/>
        <parameter ref="PolicerEnable" requirement="readWrite"/>
        <parameter ref="PolicerStatus" requirement="readOnly"/>
        <parameter ref="CommittedRate" requirement="readWrite"/>
        <parameter ref="CommittedBurstSize" requirement="readWrite"/>
        <parameter ref="MeterType" requirement="readWrite"/>
        <parameter ref="PossibleMeterTypes" requirement="readOnly"/>
        <parameter ref="ConformingAction" requirement="readWrite"/>
        <parameter ref="NonConformingAction" requirement="readWrite"/>
        <parameter ref="CountedPackets" requirement="readOnly"/>
        <parameter ref="CountedBytes" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Queue.{i}." requirement="createDelete">
        <parameter ref="QueueKey" requirement="readOnly"/>
        <parameter ref="QueueEnable" requirement="readWrite"/>
        <parameter ref="QueueStatus" requirement="readOnly"/>
        <parameter ref="QueueInterface" requirement="readWrite"/>
        <parameter ref="QueueBufferLength" requirement="readOnly"/>
        <parameter ref="QueueWeight" requirement="readWrite"/>
        <parameter ref="QueuePrecedence" requirement="readWrite"/>
        <parameter ref="REDThreshold" requirement="readWrite"/>
        <parameter ref="REDPercentage" requirement="readWrite"/>
        <parameter ref="DropAlgorithm" requirement="readWrite"/>
        <parameter ref="SchedulerAlgorithm" requirement="readWrite"/>
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}." requirement="notSpecified">
        <parameter ref="ForwardingPolicy" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}." requirement="notSpecified">
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}." requirement="notSpecified">
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoS:2" base="QoS:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.QueueManagement." requirement="present">
        <parameter ref="DefaultTrafficClass" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Classification.{i}." requirement="createDelete">
        <parameter ref="ClassificationKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="TrafficClass" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Policer.{i}." requirement="createDelete">
        <parameter ref="PolicerKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="ExcessBurstSize" requirement="readWrite"/>
        <parameter ref="PeakRate" requirement="readWrite"/>
        <parameter ref="PeakBurstSize" requirement="readWrite"/>
        <parameter ref="PartialConformingAction" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Queue.{i}." requirement="createDelete">
        <parameter ref="QueueKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="TrafficClasses" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig." requirement="notSpecified">
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoSDynamicFlow:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.QueueManagement.App.{i}." requirement="createDelete">
        <parameter ref="AppKey" requirement="readOnly"/>
        <parameter ref="AppEnable" requirement="readWrite"/>
        <parameter ref="AppStatus" requirement="readOnly"/>
        <parameter ref="ProtocolIdentifier" requirement="readWrite"/>
        <parameter ref="AppName" requirement="readWrite"/>
        <parameter ref="AppDefaultForwardingPolicy" requirement="readWrite"/>
        <parameter ref="AppDefaultPolicer" requirement="readWrite"/>
        <parameter ref="AppDefaultQueue" requirement="readWrite"/>
        <parameter ref="AppDefaultDSCPMark" requirement="readWrite"/>
        <parameter ref="AppDefaultEthernetPriorityMark" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Flow.{i}." requirement="createDelete">
        <parameter ref="FlowKey" requirement="readOnly"/>
        <parameter ref="FlowEnable" requirement="readWrite"/>
        <parameter ref="FlowStatus" requirement="readOnly"/>
        <parameter ref="FlowType" requirement="readWrite"/>
        <parameter ref="FlowTypeParameters" requirement="readWrite"/>
        <parameter ref="FlowName" requirement="readWrite"/>
        <parameter ref="AppIdentifier" requirement="readWrite"/>
        <parameter ref="FlowForwardingPolicy" requirement="readWrite"/>
        <parameter ref="FlowPolicer" requirement="readWrite"/>
        <parameter ref="FlowQueue" requirement="readWrite"/>
        <parameter ref="FlowDSCPMark" requirement="readWrite"/>
        <parameter ref="FlowEthernetPriorityMark" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Classification.{i}." requirement="notSpecified">
        <parameter ref="ClassApp" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoSDynamicFlow:2" base="QoSDynamicFlow:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.QueueManagement.App.{i}." requirement="createDelete">
        <parameter ref="AppKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="AppDefaultTrafficClass" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Flow.{i}." requirement="createDelete">
        <parameter ref="FlowKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="FlowTrafficClass" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoSStats:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.QueueManagement." requirement="present">
        <parameter ref="QueueStatsNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Policer.{i}." requirement="notSpecified">
        <parameter ref="TotalCountedPackets" requirement="readOnly"/>
        <parameter ref="TotalCountedBytes" requirement="readOnly"/>
        <parameter ref="ConformingCountedPackets" requirement="readOnly"/>
        <parameter ref="ConformingCountedBytes" requirement="readOnly"/>
        <parameter ref="NonConformingCountedPackets" requirement="readOnly"/>
        <parameter ref="NonConformingCountedBytes" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.QueueStats.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Queue" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="OutputPackets" requirement="readOnly"/>
        <parameter ref="OutputBytes" requirement="readOnly"/>
        <parameter ref="DroppedPackets" requirement="readOnly"/>
        <parameter ref="DroppedBytes" requirement="readOnly"/>
        <parameter ref="QueueOccupancyPackets" requirement="readOnly"/>
        <parameter ref="QueueOccupancyPercentage" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Bridging:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.Layer2Bridging." requirement="present">
        <parameter ref="MaxBridgeEntries" requirement="readOnly"/>
        <parameter ref="MaxFilterEntries" requirement="readOnly"/>
        <parameter ref="MaxMarkingEntries" requirement="readOnly"/>
        <parameter ref="BridgeNumberOfEntries" requirement="readOnly"/>
        <parameter ref="FilterNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MarkingNumberOfEntries" requirement="readOnly"/>
        <parameter ref="AvailableInterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}." requirement="createDelete">
        <parameter ref="BridgeKey" requirement="readOnly"/>
        <parameter ref="BridgeEnable" requirement="readWrite"/>
        <parameter ref="BridgeStatus" requirement="readOnly"/>
        <parameter ref="BridgeName" requirement="readWrite"/>
        <parameter ref="VLANID" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Filter.{i}." requirement="createDelete">
        <parameter ref="FilterKey" requirement="readOnly"/>
        <parameter ref="FilterEnable" requirement="readWrite"/>
        <parameter ref="FilterStatus" requirement="readOnly"/>
        <parameter ref="FilterBridgeReference" requirement="readWrite"/>
        <parameter ref="ExclusivityOrder" requirement="readWrite"/>
        <parameter ref="FilterInterface" requirement="readWrite"/>
        <parameter ref="VLANIDFilter" requirement="readWrite"/>
        <parameter ref="AdmitOnlyVLANTagged" requirement="readWrite"/>
        <parameter ref="EthertypeFilterList" requirement="readWrite"/>
        <parameter ref="EthertypeFilterExclude" requirement="readWrite"/>
        <parameter ref="SourceMACAddressFilterList" requirement="readWrite"/>
        <parameter ref="SourceMACAddressFilterExclude" requirement="readWrite"/>
        <parameter ref="DestMACAddressFilterList" requirement="readWrite"/>
        <parameter ref="DestMACAddressFilterExclude" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Marking.{i}." requirement="createDelete">
        <parameter ref="MarkingKey" requirement="readOnly"/>
        <parameter ref="MarkingEnable" requirement="readWrite"/>
        <parameter ref="MarkingStatus" requirement="readOnly"/>
        <parameter ref="MarkingBridgeReference" requirement="readWrite"/>
        <parameter ref="MarkingInterface" requirement="readWrite"/>
        <parameter ref="VLANIDUntag" requirement="readWrite"/>
        <parameter ref="VLANIDMark" requirement="readWrite"/>
        <parameter ref="EthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="EthernetPriorityOverride" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.AvailableInterface.{i}." requirement="present">
        <parameter ref="AvailableInterfaceKey" requirement="readOnly"/>
        <parameter ref="InterfaceType" requirement="readOnly"/>
        <parameter ref="InterfaceReference" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Bridging:2" base="Bridging:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.Layer2Bridging." requirement="present">
        <parameter ref="MaxDBridgeEntries" requirement="readOnly"/>
        <parameter ref="MaxQBridgeEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}." requirement="createDelete">
        <parameter ref="BridgeStandard" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Marking.{i}." requirement="createDelete">
        <parameter ref="VLANIDMarkOverride" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BridgingPortVLAN:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.Layer2Bridging." requirement="present">
        <parameter ref="MaxVLANEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}." requirement="present">
        <parameter ref="PortNumberOfEntries" requirement="readOnly"/>
        <parameter ref="VLANNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}.Port.{i}." requirement="createDelete">
        <parameter ref="PortEnable" requirement="readWrite"/>
        <parameter ref="PortInterface" requirement="readWrite"/>
        <parameter ref="PortState" requirement="readOnly"/>
        <parameter ref="PVID" requirement="readWrite"/>
        <parameter ref="AcceptableFrameTypes" requirement="readWrite"/>
        <parameter ref="IngressFiltering" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}.VLAN.{i}." requirement="createDelete">
        <parameter ref="VLANEnable" requirement="readWrite"/>
        <parameter ref="VLANName" requirement="readWrite"/>
        <parameter ref="VLANID" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="Time:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.Time." requirement="present">
        <parameter ref="NTPServer1" requirement="readWrite"/>
        <parameter ref="NTPServer2" requirement="readWrite"/>
        <parameter ref="CurrentLocalTime" requirement="readOnly"/>
        <parameter ref="LocalTimeZone" requirement="readWrite"/>
        <parameter ref="LocalTimeZoneName" requirement="readWrite"/>
        <parameter ref="DaylightSavingsUsed" requirement="readWrite"/>
        <parameter ref="DaylightSavingsStart" requirement="readWrite"/>
        <parameter ref="DaylightSavingsEnd" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="Time:2" base="Time:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.Time." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="LocalTimeZone" status="obsoleted" requirement="readWrite"/>
        <parameter ref="DaylightSavingsUsed" status="obsoleted" requirement="readWrite"/>
        <parameter ref="DaylightSavingsStart" status="obsoleted" requirement="readWrite"/>
        <parameter ref="DaylightSavingsEnd" status="obsoleted" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="CaptivePortal:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.CaptivePortal." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="AllowedList" requirement="readWrite"/>
        <parameter ref="CaptivePortalURL" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="IPPing:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.IPPingDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Host" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="DataBlockSize" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="AverageResponseTime" requirement="readOnly"/>
        <parameter ref="MinimumResponseTime" requirement="readOnly"/>
        <parameter ref="MaximumResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="TraceRoute:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.TraceRouteDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Host" requirement="readWrite"/>
        <parameter ref="NumberOfTries" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="DataBlockSize" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="MaxHopCount" requirement="readWrite"/>
        <parameter ref="ResponseTime" requirement="readOnly"/>
        <parameter ref="RouteHopsNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.{i}." requirement="present">
        <parameter ref="HopHost" requirement="readOnly"/>
        <parameter ref="HopHostAddress" requirement="readOnly"/>
        <parameter ref="HopErrorCode" requirement="readOnly"/>
        <parameter ref="HopRTTimes" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Download:1" dmr:version="1.3">
      <object ref="InternetGatewayDevice.Capabilities.PerformanceDiagnostic." requirement="present">
        <parameter ref="DownloadTransports" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.DownloadDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="DownloadURL" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="EthernetPriority" requirement="readWrite"/>
        <parameter ref="ROMTime" requirement="readOnly"/>
        <parameter ref="BOMTime" requirement="readOnly"/>
        <parameter ref="EOMTime" requirement="readOnly"/>
        <parameter ref="TestBytesReceived" requirement="readOnly"/>
        <parameter ref="TotalBytesReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DownloadTCP:1" dmr:version="1.3">
      <object ref="InternetGatewayDevice.DownloadDiagnostics." requirement="present">
        <parameter ref="TCPOpenRequestTime" requirement="readOnly"/>
        <parameter ref="TCPOpenResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Upload:1" dmr:version="1.3">
      <object ref="InternetGatewayDevice.Capabilities.PerformanceDiagnostic." requirement="present">
        <parameter ref="UploadTransports" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.UploadDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="UploadURL" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="EthernetPriority" requirement="readWrite"/>
        <parameter ref="ROMTime" requirement="readOnly"/>
        <parameter ref="BOMTime" requirement="readOnly"/>
        <parameter ref="EOMTime" requirement="readOnly"/>
        <parameter ref="TestFileLength" requirement="readOnly"/>
        <parameter ref="TotalBytesSent" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UploadTCP:1" dmr:version="1.3">
      <object ref="InternetGatewayDevice.UploadDiagnostics." requirement="present">
        <parameter ref="TCPOpenRequestTime" requirement="readOnly"/>
        <parameter ref="TCPOpenResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UDPEcho:1" dmr:version="1.3">
      <object ref="InternetGatewayDevice.UDPEchoConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="SourceIPAddress" requirement="readWrite"/>
        <parameter ref="UDPPort" requirement="readWrite"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="PacketsResponded" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="BytesResponded" requirement="readOnly"/>
        <parameter ref="TimeFirstPacketReceived" requirement="readOnly"/>
        <parameter ref="TimeLastPacketReceived" requirement="readOnly"/>
        <parameter ref="EchoPlusSupported" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UDPEchoPlus:1" dmr:version="1.3">
      <object ref="InternetGatewayDevice.UDPEchoConfig." requirement="present">
        <parameter ref="EchoPlusEnabled" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="ATMLoopback:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANATMF5LoopbackDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="AverageResponseTime" requirement="readOnly"/>
        <parameter ref="MinimumResponseTime" requirement="readOnly"/>
        <parameter ref="MaximumResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DSLDiagnostics:1" dmr:version="1.1">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics." requirement="present">
        <parameter ref="LoopDiagnosticsState" requirement="readWrite"/>
        <parameter ref="ACTPSDds" requirement="readOnly"/>
        <parameter ref="ACTPSDus" requirement="readOnly"/>
        <parameter ref="ACTATPds" requirement="readOnly"/>
        <parameter ref="ACTATPus" requirement="readOnly"/>
        <parameter ref="HLINSCds" requirement="readOnly"/>
        <parameter ref="HLINpsds" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="BITSpsds" requirement="readOnly"/>
        <parameter ref="GAINSpsds" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ADSL2DSLDiagnostics:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics." requirement="present">
        <parameter ref="LoopDiagnosticsState" requirement="readWrite"/>
        <parameter ref="ACTPSDds" requirement="readOnly"/>
        <parameter ref="ACTPSDus" requirement="readOnly"/>
        <parameter ref="ACTATPds" requirement="readOnly"/>
        <parameter ref="ACTATPus" requirement="readOnly"/>
        <parameter ref="HLINSCds" requirement="readOnly"/>
        <parameter ref="HLINSCus" requirement="readOnly"/>
        <parameter ref="HLINpsds" requirement="readOnly"/>
        <parameter ref="HLINpsus" requirement="readOnly"/>
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNpbds" requirement="readOnly"/>
        <parameter ref="LATNpbus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VDSL2DSLDiagnostics:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics." requirement="present">
        <parameter ref="LoopDiagnosticsState" requirement="readWrite"/>
        <parameter ref="ACTPSDds" requirement="readOnly"/>
        <parameter ref="ACTPSDus" requirement="readOnly"/>
        <parameter ref="ACTATPds" requirement="readOnly"/>
        <parameter ref="ACTATPus" requirement="readOnly"/>
        <parameter ref="HLINSCds" requirement="readOnly"/>
        <parameter ref="HLINSCus" requirement="readOnly"/>
        <parameter ref="HLINGds" requirement="readOnly"/>
        <parameter ref="HLINGus" requirement="readOnly"/>
        <parameter ref="HLINpsds" requirement="readOnly"/>
        <parameter ref="HLINpsus" requirement="readOnly"/>
        <parameter ref="HLOGGds" requirement="readOnly"/>
        <parameter ref="HLOGGus" requirement="readOnly"/>
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNGds" requirement="readOnly"/>
        <parameter ref="QLNGus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRGds" requirement="readOnly"/>
        <parameter ref="SNRGus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNpbds" requirement="readOnly"/>
        <parameter ref="LATNpbus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DeviceAssociation:1" dmr:version="1.2">
      <object ref="InternetGatewayDevice.ManagementServer." requirement="notSpecified">
        <parameter ref="ManageableDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.ManagementServer.ManageableDevice.{i}." requirement="present">
        <parameter ref="ManufacturerOUI" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
        <parameter ref="ProductClass" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DeviceAssociation:2" base="DeviceAssociation:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.ManagementServer.ManageableDevice.{i}." requirement="present">
        <parameter ref="Host" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UDPConnReq:1" dmr:version="1.2">
      <object ref="InternetGatewayDevice.ManagementServer." requirement="notSpecified">
        <parameter ref="UDPConnectionRequestAddress" requirement="readOnly"/>
        <parameter ref="UDPConnectionRequestAddressNotificationLimit" requirement="readWrite"/>
        <parameter ref="STUNEnable" requirement="readWrite"/>
        <parameter ref="STUNServerAddress" requirement="readWrite"/>
        <parameter ref="STUNServerPort" requirement="readWrite"/>
        <parameter ref="STUNUsername" requirement="readWrite"/>
        <parameter ref="STUNPassword" requirement="readWrite"/>
        <parameter ref="STUNMaximumKeepAlivePeriod" requirement="readWrite"/>
        <parameter ref="STUNMinimumKeepAlivePeriod" requirement="readWrite"/>
        <parameter ref="NATDetected" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DHCPCondServing:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." requirement="present">
        <parameter ref="DHCPConditionalPoolNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="PoolOrder" requirement="readWrite"/>
        <parameter ref="SourceInterface" requirement="readWrite"/>
        <parameter ref="VendorClassID" requirement="readWrite"/>
        <parameter ref="ClientID" requirement="readWrite"/>
        <parameter ref="UserClassID" requirement="readWrite"/>
        <parameter ref="Chaddr" requirement="readWrite"/>
        <parameter ref="ChaddrMask" requirement="readWrite"/>
        <parameter ref="LocallyServed" requirement="readWrite"/>
        <parameter ref="MinAddress" requirement="readWrite"/>
        <parameter ref="MaxAddress" requirement="readWrite"/>
        <parameter ref="ReservedAddresses" requirement="readWrite"/>
        <parameter ref="SubnetMask" requirement="readWrite"/>
        <parameter ref="DNSServers" requirement="readWrite"/>
        <parameter ref="DomainName" requirement="readWrite"/>
        <parameter ref="IPRouters" requirement="readWrite"/>
        <parameter ref="DHCPLeaseTime" requirement="readWrite"/>
        <parameter ref="DHCPServerIPAddress" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DHCPOption:1" dmr:version="1.4">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." requirement="present">
        <parameter ref="DHCPOptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPOption.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}." requirement="createDelete">
        <parameter ref="DHCPOptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}.DHCPOption.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient." requirement="present">
        <parameter ref="SentDHCPOptionNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ReqDHCPOptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient.SentDHCPOption.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient.ReqDHCPOption.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="MemoryStatus:1" dmr:version="1.5">
      <object ref="InternetGatewayDevice.DeviceInfo.MemoryStatus." requirement="present">
        <parameter ref="Total" requirement="readOnly"/>
        <parameter ref="Free" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="AutonXferComplPolicy:1" dmr:version="1.5">
      <object ref="InternetGatewayDevice.ManagementServer.AutonomousTransferCompletePolicy." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="TransferTypeFilter" requirement="readWrite"/>
        <parameter ref="FileTypeFilter" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="NSLookupDiag:1" dmr:version="1.5">
      <object ref="InternetGatewayDevice.NSLookupDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="HostName" requirement="readWrite"/>
        <parameter ref="DNSServer" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="ResultNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.NSLookupDiagnostics.Result.{i}." requirement="present">
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="AnswerType" requirement="readOnly"/>
        <parameter ref="HostNameReturned" requirement="readOnly"/>
        <parameter ref="IPAddresses" requirement="readOnly"/>
        <parameter ref="DNSServerIP" requirement="readOnly"/>
        <parameter ref="ResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VendorLogFiles:1" dmr:version="1.8">
      <object ref="InternetGatewayDevice.DeviceInfo.VendorLogFile.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="MaximumSize" requirement="readOnly"/>
        <parameter ref="Persistent" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="StandbyPolicy:1" dmr:version="1.13">
      <description>
        Note that support for this profile implies support for the requirements of {{bibref|TR-069a5|Annex L}}.
      </description>
      <object ref="InternetGatewayDevice.ManagementServer.StandbyPolicy." requirement="present">
        <parameter ref="CRUnawarenessMaxDuration" requirement="readWrite"/>
        <parameter ref="MaxMissedPeriodic" requirement="readWrite"/>
        <parameter ref="NotifyMissedScheduled" requirement="readWrite"/>
        <parameter ref="NetworkAwarenessCapable" requirement="readOnly"/>
        <parameter ref="SelfTimerCapable" requirement="readOnly"/>
        <parameter ref="CRAwarenessRequested" requirement="readWrite"/>
        <parameter ref="PeriodicAwarenessRequested" requirement="readWrite"/>
        <parameter ref="ScheduledAwarenessRequested" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="InformParameters:1" dmr:version="1.14">
      <object ref="InternetGatewayDevice.ManagementServer." requirement="present">
        <parameter ref="InformParameterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.ManagementServer.InformParameter.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ParameterName" requirement="readWrite"/>
        <parameter ref="EventList" requirement="readWrite"/>
      </object>
    </profile>
  </model>
</dm:document>
